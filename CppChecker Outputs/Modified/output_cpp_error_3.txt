C:\Users\LiTho\source\repos\blender\source\blender\blendthumb\src\Dll.cpp:46:1: error: There is an unknown macro here somewhere. Configuration is required. If STDAPI_ is a macro then please configure it. [unknownMacro]
STDAPI_(BOOL) DllMain(HINSTANCE hInstance, DWORD dwReason, void *)
^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_dir.c:118:9: style: The scope of the variable 'path' can be reduced. [variableScope]
  char *path;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf.c:114:12: style: The scope of the variable 'font' can be reduced. [variableScope]
  FontBLF *font;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf.c:135:12: style: The scope of the variable 'font' can be reduced. [variableScope]
  FontBLF *font;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf.c:149:12: style: The scope of the variable 'font' can be reduced. [variableScope]
  FontBLF *font;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf.c:200:12: style: The scope of the variable 'font' can be reduced. [variableScope]
  FontBLF *font;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf.c:302:12: style: The scope of the variable 'font' can be reduced. [variableScope]
  FontBLF *font;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_dir.c:32:0: error: No header in #include [preprocessorErrorDirective]
#include FT_FREETYPE_H
^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_font_win32_compat.c:30:0: error: No header in #include [preprocessorErrorDirective]
#  include FT_FREETYPE_H
^
C:\Users\LiTho\source\repos\blender\source\blender\blendthumb\src\BlenderThumb.cpp:50:3: error: There is an unknown macro here somewhere. Configuration is required. If IFACEMETHODIMP_ is a macro then please configure it. [unknownMacro]
  IFACEMETHODIMP_(ULONG) AddRef()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_glyph.c:212:13: style: The scope of the variable 'g' can be reduced. [variableScope]
  GlyphBLF *g;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_thumbs.c:31:0: error: No header in #include [preprocessorErrorDirective]
#include FT_FREETYPE_H
^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_font.c:430:16: style: The scope of the variable 'c' can be reduced. [variableScope]
  unsigned int c, c_prev = BLI_UTF8_ERR;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_font.c:535:16: style: The scope of the variable 'c' can be reduced. [variableScope]
  unsigned int c;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_font.c:582:16: style: The scope of the variable 'c' can be reduced. [variableScope]
  unsigned int c, c_prev = BLI_UTF8_ERR;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_font.c:861:16: style: The scope of the variable 'c' can be reduced. [variableScope]
  unsigned int c, c_prev = BLI_UTF8_ERR;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_font.c:961:16: style: The scope of the variable 'c' can be reduced. [variableScope]
  unsigned int c;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_font.c:827:3: style: Variable 'i_tmp' is assigned a value that is never used. [unreadVariable]
  BLF_UTF8_NEXT_FAST(font, gc, g, str, i_tmp, c, glyph_ascii_table);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_glyph.c:33:0: error: No header in #include [preprocessorErrorDirective]
#include FT_FREETYPE_H
^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf.c:976:5: error: printf format string requires 3 parameters but only 1 is given. [wrongPrintfScanfArgNum]
    printf("  pos:      %.6f %.6f %.6f\n", UNPACK3(font->pos));
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf.c:977:5: error: printf format string requires 4 parameters but only 2 are given. [wrongPrintfScanfArgNum]
    printf("  aspect:   (%d) %.6f %.6f %.6f\n",
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_inline.h:89:10: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
  return (float *)&VERT_getLevelData(v)[lvl * dataSize + normalDataOffset];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_inline.h:101:10: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
  return (float *)&EDGE_getLevelData(e)[dataSize * (levelBase + x) + normalDataOffset];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_inline.h:140:10: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
  return (float *)&gridBase[dataSize * (maxGridSize + (y * maxGridSize + x) * spacing) +
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf_font.c:35:0: error: No header in #include [preprocessorErrorDirective]
#include FT_FREETYPE_H
^
C:\Users\LiTho\source\repos\blender\source\blender\blenfont\intern\blf.c:35:0: error: No header in #include [preprocessorErrorDirective]
#include FT_FREETYPE_H
^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf.c:1044:20: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
      VertDataCopy((float *)FACE_getCenterData(f), FACE_getIFCo(f, lvl, S, 0, 0), ss);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf.c:1107:51: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
      VertDataCopy(FACE_getIFCo(f, lvl, S, 0, 0), (float *)FACE_getCenterData(f), ss);
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf.c:1162:18: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
    VertDataZero((float *)FACE_getCenterData(f), ss);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf.c:1175:19: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
      VertDataAdd((float *)FACE_getCenterData(f), FACE_getIFCo(f, lvl, S, 0, 0), ss);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf.c:1230:18: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
    VertDataMulN((float *)FACE_getCenterData(f), 1.0f / f->numVerts, ss);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf.c:1243:51: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
      VertDataCopy(FACE_getIFCo(f, lvl, S, 0, 0), (float *)FACE_getCenterData(f), ss);
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf.c:1263:48: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
      VertDataCopy(FACE_getIECo(f, lvl, S, 0), (float *)FACE_getCenterData(f), ss);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:529:21: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  float *q_thread = alloca(vertDataSize);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:530:21: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  float *r_thread = alloca(vertDataSize);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf.c:756:7: style: The scope of the variable 'j' can be reduced. [variableScope]
  int j, k, topologyChanged = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf.c:941:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, num;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf.c:941:10: style: The scope of the variable 'num' can be reduced. [variableScope]
  int i, num;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_inline.h:28:13: error: Shifting by a negative value is undefined behaviour [shiftNegative]
  return (1 << (level - 1)) + 1;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:83:10: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
  return (float *)((byte *)ccg_face_getIFCoEdge(f, e, f_ed_idx, lvl, eX, eY, levels, dataSize) +
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:265:18: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
    VertDataCopy((float *)((byte *)FACE_getCenterData(f) + normalDataOffset),
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:550:16: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
  VertDataMulN((float *)FACE_getCenterData(f), f->numVerts - 2.0f, ss);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:551:15: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
  VertDataAdd((float *)FACE_getCenterData(f), q_thread, ss);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:552:15: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
  VertDataAdd((float *)FACE_getCenterData(f), r_thread, ss);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:553:16: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
  VertDataMulN((float *)FACE_getCenterData(f), 1.0f / f->numVerts, ss);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:641:53: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
    VertDataCopy(FACE_getIFCo(f, nextLvl, S, 0, 0), (float *)FACE_getCenterData(f), ss);
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:642:50: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
    VertDataCopy(FACE_getIECo(f, nextLvl, S, 0), (float *)FACE_getCenterData(f), ss);
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:1094:24: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
        VertDataAdd(q, (float *)FACE_getCenterData(f), ss);
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:1172:24: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
        VertDataAdd(q, (float *)FACE_getCenterData(f), ss);
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:1272:55: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
      VertDataCopy(FACE_getIFCo(f, nextLvl, S, 0, 0), (float *)FACE_getCenterData(f), ss);
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:1273:52: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
      VertDataCopy(FACE_getIECo(f, nextLvl, S, 0), (float *)FACE_getCenterData(f), ss);
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:712:12: style: The scope of the variable 'j' can be reduced. [variableScope]
    int x, j;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_legacy.c:907:12: style: The scope of the variable 'j' can be reduced. [variableScope]
    int x, j;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_opensubdiv.c:535:30: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
          float *center_co = (float *)FACE_getCenterData(face);
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_opensubdiv.c:538:32: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            float *center_no = (float *)((byte *)FACE_getCenterData(face) + normalDataOffset);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_opensubdiv.c:675:30: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
          float *center_co = (float *)FACE_getCenterData(face);
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\CCGSubSurf_opensubdiv.c:678:32: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            float *center_no = (float *)((byte *)FACE_getCenterData(face) + normalDataOffset);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\action.c:1662:5: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
    workob->adt = &adt;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\action.c:1564:17: style: The scope of the variable 'pchanto' can be reduced. [variableScope]
  bPoseChannel *pchanto, *pchanfrom;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\anim.c:282:14: style: The scope of the variable 'd' can be reduced. [variableScope]
  float fac, d = 0, fac1, fac2;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\anim.c:282:16: style: Variable 'd' is assigned a value that is never used. [unreadVariable]
  float fac, d = 0, fac1, fac2;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\appdir.c:846:24: warning: Either the condition '!app_template' is redundant or there is possible null pointer dereference: app_template. [nullPointerRedundantCheck]
  if (!app_template && app_template[0]) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\appdir.c:846:7: note: Assuming that condition '!app_template' is not redundant
  if (!app_template && app_template[0]) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\appdir.c:846:24: note: Null pointer dereference
  if (!app_template && app_template[0]) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:613:14: warning: Either the condition 'pose!=NULL' is redundant or there is possible null pointer dereference: pose. [nullPointerRedundantCheck]
  BLI_assert(pose->chan_array != NULL);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:612:19: note: Assuming that condition 'pose!=NULL' is not redundant
  BLI_assert(pose != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:611:19: note: Assignment 'pose=ob->pose', assigned value is 0
  bPose *pose = ob->pose;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:613:14: note: Null pointer dereference
  BLI_assert(pose->chan_array != NULL);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:615:43: warning: Either the condition 'pose!=NULL' is redundant or there is possible null pointer dereference: pose. [nullPointerRedundantCheck]
  BLI_assert(pchan_index < MEM_allocN_len(pose->chan_array) / sizeof(bPoseChannel *));
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:612:19: note: Assuming that condition 'pose!=NULL' is not redundant
  BLI_assert(pose != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:611:19: note: Assignment 'pose=ob->pose', assigned value is 0
  bPose *pose = ob->pose;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:615:43: note: Null pointer dereference
  BLI_assert(pchan_index < MEM_allocN_len(pose->chan_array) / sizeof(bPoseChannel *));
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:616:10: warning: Either the condition 'pose!=NULL' is redundant or there is possible null pointer dereference: pose. [nullPointerRedundantCheck]
  return pose->chan_array[pchan_index];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:612:19: note: Assuming that condition 'pose!=NULL' is not redundant
  BLI_assert(pose != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:611:19: note: Assignment 'pose=ob->pose', assigned value is 0
  bPose *pose = ob->pose;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:616:10: note: Null pointer dereference
  return pose->chan_array[pchan_index];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:636:30: warning: Either the condition 'pose!=NULL' is redundant or there is possible null pointer dereference: pose. [nullPointerRedundantCheck]
  for (bPoseChannel *pchan = pose->chanbase.first; pchan != NULL; pchan = pchan->next) {
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:622:19: note: Assuming that condition 'pose!=NULL' is not redundant
  BLI_assert(pose != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:621:23: note: Assignment 'pose=object->pose', assigned value is 0
  bPose *pose = object->pose;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:636:30: note: Null pointer dereference
  for (bPoseChannel *pchan = pose->chanbase.first; pchan != NULL; pchan = pchan->next) {
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:645:14: warning: Either the condition 'pose!=NULL' is redundant or there is possible null pointer dereference: pose. [nullPointerRedundantCheck]
  BLI_assert(pose->chan_array != NULL || BLI_listbase_is_empty(&pose->chanbase));
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:622:19: note: Assuming that condition 'pose!=NULL' is not redundant
  BLI_assert(pose != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:621:23: note: Assignment 'pose=object->pose', assigned value is 0
  bPose *pose = object->pose;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:645:14: note: Null pointer dereference
  BLI_assert(pose->chan_array != NULL || BLI_listbase_is_empty(&pose->chanbase));
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:853:14: warning: Either the condition 'pose!=NULL' is redundant or there is possible null pointer dereference: pose. [nullPointerRedundantCheck]
  BLI_assert(pose->chan_array != NULL || BLI_listbase_is_empty(&pose->chanbase));
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:852:19: note: Assuming that condition 'pose!=NULL' is not redundant
  BLI_assert(pose != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:851:23: note: Assignment 'pose=object->pose', assigned value is 0
  bPose *pose = object->pose;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:853:14: note: Null pointer dereference
  BLI_assert(pose->chan_array != NULL || BLI_listbase_is_empty(&pose->chanbase));
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:912:62: warning: Either the condition 'pchan!=NULL' is redundant or there is possible null pointer dereference: pchan. [nullPointerRedundantCheck]
      depsgraph, __func__, object->id.name, object, "pchan", pchan->name, pchan);
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:910:20: note: Assuming that condition 'pchan!=NULL' is not redundant
  BLI_assert(pchan != NULL);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:909:47: note: Assignment 'pchan=pose_pchan_get_indexed(object,pchan_index)', assigned value is 0
  bPoseChannel *pchan = pose_pchan_get_indexed(object, pchan_index);
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:912:62: note: Null pointer dereference
      depsgraph, __func__, object->id.name, object, "pchan", pchan->name, pchan);
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature_update.c:758:9: style: The scope of the variable 'imat' can be reduced. [variableScope]
  float imat[4][4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:1533:9: style: Condition 'defMats' is always true [knownConditionTrueFalse]
    if (defMats) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:1568:9: style: Condition 'prevCos' is always true [knownConditionTrueFalse]
    if (prevCos) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:1646:9: style: Condition 'defMats' is always true [knownConditionTrueFalse]
    if (defMats) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:1665:7: style: Condition 'prevCos' is always true [knownConditionTrueFalse]
  if (prevCos) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:3111:10: warning: Either the condition 'rootchan!=NULL' is redundant or there is possible null pointer dereference: rootchan. [nullPointerRedundantCheck]
  while (rootchan->parent) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:3110:23: note: Assuming that condition 'rootchan!=NULL' is not redundant
  BLI_assert(rootchan != NULL);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:3108:28: note: Assignment 'rootchan=pchan', assigned value is 0
  bPoseChannel *rootchan = pchan;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:3111:10: note: Null pointer dereference
  while (rootchan->parent) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\anim_sys.c:3122:20: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  storage.buffer = alloca(storage.modifier_count * storage.size_per_modifier);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:393:19: style: The scope of the variable 'rbone' can be reduced. [variableScope]
  Bone *curBone, *rbone;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:1092:37: style: The scope of the variable 'prev' can be reduced. [variableScope]
  float h1[3], roll1, h2[3], roll2, prev[3], cur[3], axis[3];
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:1518:14: style: The scope of the variable 'dco' can be reduced. [variableScope]
  float *co, dco[3];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:1692:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, target_totvert = 0; /* safety for vertexgroup overflow */
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:1932:25: style: The scope of the variable 'tscale' can be reduced. [variableScope]
      float tmat[4][4], tscale[3];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:2923:9: style: The scope of the variable 'bone' can be reduced. [variableScope]
  Bone *bone;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\appdir.c:745:0: information: Skipping configuration 'PYTHON_EXECUTABLE_NAME' since the value of 'PYTHON_EXECUTABLE_NAME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  const char *python_build_def = STRINGIFY(PYTHON_EXECUTABLE_NAME);
^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\armature.c:1669:21: style: Variable 'vertexCos[i][2]' is assigned a value that is never used. [unreadVariable]
    vertexCos[i][2] = prevco_weight * vertexCos[i][2] + mw * co[2];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\anim_sys.c:695:20: style: The expression 'basepath != path' is always false because 'basepath' and 'path' represent the same value. [knownConditionTrueFalse]
      if (basepath != path) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\anim_sys.c:681:16: note: 'path' is assigned value 'basepath' here.
  char *path = basepath; /* in case no remapping is needed */
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\anim_sys.c:695:20: note: The expression 'basepath != path' is always false because 'basepath' and 'path' represent the same value.
      if (basepath != path) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\anim_sys.c:1957:10: style: The scope of the variable 'ok' can be reduced. [variableScope]
    bool ok = false;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\anim_sys.c:4128:8: style: The scope of the variable 'ok' can be reduced. [variableScope]
  bool ok = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\blendfile.c:173:12: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (mode != LOAD_UNDO) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\blendfile.c:168:12: note: First condition
  if (mode != LOAD_UNDO) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\blendfile.c:173:12: note: Second condition
  if (mode != LOAD_UNDO) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:410:22: style: The expression 'nearest == 0' is always true. [knownConditionTrueFalse]
  if (ptn && nearest == 0) {
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:230:35: note: 'nearest' is assigned value '0' here.
  int n, neighbors = 0, nearest = 0;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:410:22: note: The expression 'nearest == 0' is always true.
  if (ptn && nearest == 0) {
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:93:26: style: The scope of the variable 'len' can be reduced. [variableScope]
  float priority = 0.0f, len = 0.0f;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:473:9: style: The scope of the variable 'vec' can be reduced. [variableScope]
  float vec[3] = {0.0f, 0.0f, 0.0f}, loc[3] = {0.0f, 0.0f, 0.0f};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:473:38: style: The scope of the variable 'loc' can be reduced. [variableScope]
  float vec[3] = {0.0f, 0.0f, 0.0f}, loc[3] = {0.0f, 0.0f, 0.0f};
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:481:7: style: The scope of the variable 'n' can be reduced. [variableScope]
  int n;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:516:11: style: The scope of the variable 'vec2' can be reduced. [variableScope]
    float vec2[3], t;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:516:20: style: The scope of the variable 't' can be reduced. [variableScope]
    float vec2[3], t;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:1183:15: style: The scope of the variable 'z_v' can be reduced. [variableScope]
        float z_v, ground_v, cur_v;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:1183:20: style: The scope of the variable 'ground_v' can be reduced. [variableScope]
        float z_v, ground_v, cur_v;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:1183:30: style: The scope of the variable 'cur_v' can be reduced. [variableScope]
        float z_v, ground_v, cur_v;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:1241:38: style: The scope of the variable 'tan_acc' can be reduced. [variableScope]
  float acc[3] = {0.0f, 0.0f, 0.0f}, tan_acc[3], nor_acc[3];
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:1241:50: style: The scope of the variable 'nor_acc' can be reduced. [variableScope]
  float acc[3] = {0.0f, 0.0f, 0.0f}, tan_acc[3], nor_acc[3];
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:1243:9: style: The scope of the variable 'new_dir' can be reduced. [variableScope]
  float new_dir[3], new_speed;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:1243:21: style: The scope of the variable 'new_speed' can be reduced. [variableScope]
  float new_dir[3], new_speed;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:1244:9: style: The scope of the variable 'old_dir' can be reduced. [variableScope]
  float old_dir[3], old_speed;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:1244:21: style: The scope of the variable 'old_speed' can be reduced. [variableScope]
  float old_dir[3], old_speed;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\boids.c:1245:9: style: The scope of the variable 'wanted_dir' can be reduced. [variableScope]
  float wanted_dir[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\bvhutils.c:379:9: style: The scope of the variable 'dist' can be reduced. [variableScope]
  float dist;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\bvhutils.c:858:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\brush.c:2091:76: error: The address of local variable 'col' is accessed at non-zero index. [objectIndex]
        im->rect_float[i * side + j] *= (((char *)&col)[0] + ((char *)&col)[1] +
                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\brush.c:2091:71: note: Address of variable taken here.
        im->rect_float[i * side + j] *= (((char *)&col)[0] + ((char *)&col)[1] +
                                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\brush.c:2091:76: note: The address of local variable 'col' is accessed at non-zero index.
        im->rect_float[i * side + j] *= (((char *)&col)[0] + ((char *)&col)[1] +
                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\brush.c:2092:56: error: The address of local variable 'col' is accessed at non-zero index. [objectIndex]
                                         ((char *)&col)[2]) /
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\brush.c:2092:51: note: Address of variable taken here.
                                         ((char *)&col)[2]) /
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\brush.c:2092:56: note: The address of local variable 'col' is accessed at non-zero index.
                                         ((char *)&col)[2]) /
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\brush.c:2033:9: style: The scope of the variable 'rgba' can be reduced. [variableScope]
  float rgba[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\brush.c:2034:7: style: The scope of the variable 'ix' can be reduced. [variableScope]
  int ix, iy;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\brush.c:2034:11: style: The scope of the variable 'iy' can be reduced. [variableScope]
  int ix, iy;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\camera.c:280:27: style: The scope of the variable 'sensor_size' can be reduced. [variableScope]
  float pixsize, viewfac, sensor_size, dx, dy;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\camera.c:567:9: style: The scope of the variable 'plane_tx' can be reduced. [variableScope]
  float plane_tx[CAMERA_VIEWFRAME_NUM_PLANES][4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collection.c:686:38: style: The if condition is the same as the previous if condition [duplicateCondition]
  if ((flag & LIB_ID_CREATE_NO_MAIN) == 0) {
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collection.c:682:38: note: First condition
  if ((flag & LIB_ID_CREATE_NO_MAIN) == 0) {
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collection.c:686:38: note: Second condition
  if ((flag & LIB_ID_CREATE_NO_MAIN) == 0) {
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collection.c:1496:17: style: The scope of the variable 'collection' can be reduced. [variableScope]
    Collection *collection;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\cloth.c:259:25: style: The scope of the variable 'co_moving' can be reduced. [variableScope]
        float co[3][3], co_moving[3][3];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\cloth.c:695:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\cloth.c:1379:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x, y;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\cloth.c:1379:10: style: The scope of the variable 'y' can be reduced. [variableScope]
  int x, y;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\cloth.c:1511:16: style: The scope of the variable 'vert_idx' can be reduced. [variableScope]
  unsigned int vert_idx = -1;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\cloth.c:1558:7: style: The scope of the variable 'index2' can be reduced. [variableScope]
  int index2 = 0;  // our second vertex index
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\cloth.c:234:18: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
  unsigned int i = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\cloth.c:695:18: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
  unsigned int i = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:401:19: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (isect_count == 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:386:19: note: First condition
  if (isect_count == 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:401:19: note: Second condition
  if (isect_count == 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:561:7: style: Condition '!isect' is always true [knownConditionTrueFalse]
  if (!isect) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:482:7: note: Assuming that condition 'isect' is not redundant
  if (isect) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:561:7: note: Condition '!isect' is always true
  if (!isect) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:574:7: style: Condition 'isect' is always false [knownConditionTrueFalse]
  if (isect) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:482:7: note: Assuming that condition 'isect' is not redundant
  if (isect) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:574:7: note: Condition 'isect' is always false
  if (isect) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\colortools.c:479:9: style: The scope of the variable 'len' can be reduced. [variableScope]
  float len, len_a, len_b;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\colortools.c:1298:10: style: The scope of the variable 'x' can be reduced. [variableScope]
  int i, x, y;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\colortools.c:1298:13: style: The scope of the variable 'y' can be reduced. [variableScope]
  int i, x, y;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\crazyspace.c:137:7: style: The scope of the variable 'index' can be reduced. [variableScope]
  int index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:217:20: style: The scope of the variable 'cent' can be reduced. [variableScope]
  float normal[3], cent[3];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:446:20: style: The scope of the variable 'cent' can be reduced. [variableScope]
  float normal[3], cent[3];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:750:29: style: The scope of the variable 'repulse' can be reduced. [variableScope]
      float magtangent = 0, repulse = 0, d = 0;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:974:29: style: The scope of the variable 'repulse' can be reduced. [variableScope]
      float magtangent = 0, repulse = 0, d = 0;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:1569:7: style: The scope of the variable 'result' can be reduced. [variableScope]
  int result = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\context.c:310:12: style: Condition 'done!=1' is always true [knownConditionTrueFalse]
  if (done != 1 && recursion < 1 && C->wm.store) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\context.c:284:14: note: Assignment 'done=0', assigned value is 0
  int done = 0, recursion = C->data.recursion;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\context.c:310:12: note: Condition 'done!=1' is always true
  if (done != 1 && recursion < 1 && C->wm.store) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:1515:9: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
  int i = 0, j = 0, mvert_num = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:1523:10: style: Variable 'result' is assigned a value that is never used. [unreadVariable]
  result = 1;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:1566:9: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
  int i = 0, j = 0, mvert_num = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:1569:14: style: Variable 'result' is assigned a value that is never used. [unreadVariable]
  int result = 0;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\collision.c:1625:10: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
  uint i = 0, mvert_num = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\context.c:156:23: style: The scope of the variable 'entry' can be reduced. [variableScope]
  bContextStoreEntry *entry, *tentry;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\context.c:554:22: style: The scope of the variable 'nameptr' can be reduced. [variableScope]
    char name[256], *nameptr;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\context.c:285:11: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
  int ret = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata_file.c:250:25: style: The scope of the variable 'image' can be reduced. [variableScope]
  CDataFileImageHeader *image;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata_file.c:252:19: style: The scope of the variable 'layer' can be reduced. [variableScope]
  CDataFileLayer *layer;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata_file.c:355:25: style: The scope of the variable 'image' can be reduced. [variableScope]
  CDataFileImageHeader *image;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata_file.c:430:19: style: The scope of the variable 'layer' can be reduced. [variableScope]
  CDataFileLayer *layer;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:486:16: warning: Possible null pointer dereference: next [nullPointer]
    next_loc = next->vec[1];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:635:66: note: Calling function 'calchandle_profile', 3rd argument 'NULL' value is 0
  calchandle_profile(&bezt[totpoints - 1], &bezt[totpoints - 2], NULL);
                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:486:16: note: Null pointer dereference
    next_loc = next->vec[1];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:496:16: warning: Possible null pointer dereference: prev [nullPointer]
    prev_loc = prev->vec[1];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:631:32: note: Calling function 'calchandle_profile', 2nd argument 'NULL' value is 0
  calchandle_profile(&bezt[0], NULL, &bezt[1]);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:496:16: note: Null pointer dereference
    prev_loc = prev->vec[1];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:161:9: style: The scope of the variable 'distance' can be reduced. [variableScope]
  float distance;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:316:10: style: The scope of the variable 'step_x' can be reduced. [variableScope]
  int n, step_x, step_y;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:316:18: style: The scope of the variable 'step_y' can be reduced. [variableScope]
  int n, step_x, step_y;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:476:9: style: The scope of the variable 'len' can be reduced. [variableScope]
  float len, len_a, len_b;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:609:18: style: The scope of the variable 'n_common' can be reduced. [variableScope]
  int i, n_left, n_common, i_sample, n_curved_edges;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:609:38: style: The scope of the variable 'n_curved_edges' can be reduced. [variableScope]
  int i, n_left, n_common, i_sample, n_curved_edges;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:859:9: style: The scope of the variable 'dx' can be reduced. [variableScope]
  float dx, dy;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:859:13: style: The scope of the variable 'dy' can be reduced. [variableScope]
  float dx, dy;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:978:23: style: The scope of the variable 'factor' can be reduced. [variableScope]
  float segment_left, factor;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:975:26: style: Variable 'length_travelled' is assigned a value that is never used. [unreadVariable]
  float length_travelled = 0.0f;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:990:24: style: Variable 'length_travelled' is assigned a value that is never used. [unreadVariable]
      length_travelled += distance_to_next_table_point;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:1018:22: style: Variable 'length_travelled' is assigned a value that is never used. [unreadVariable]
    length_travelled += segment_left;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\data_transfer.c:1059:11: warning: Either the condition '!me_dst' is redundant or there is possible null pointer dereference: me_dst. [nullPointerRedundantCheck]
          me_dst->cd_flag &= ~ME_CDFLAG_EDGE_CREASE;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\data_transfer.c:1058:27: note: Assuming that condition '!me_dst' is not redundant
        if (use_delete && !me_dst) {
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\data_transfer.c:1059:11: note: Null pointer dereference
          me_dst->cd_flag &= ~ME_CDFLAG_EDGE_CREASE;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\data_transfer.c:1091:11: warning: Either the condition '!me_dst' is redundant or there is possible null pointer dereference: me_dst. [nullPointerRedundantCheck]
          me_dst->cd_flag &= ~ME_CDFLAG_EDGE_BWEIGHT;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\data_transfer.c:1090:27: note: Assuming that condition '!me_dst' is not redundant
        if (use_delete && !me_dst) {
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\data_transfer.c:1091:11: note: Null pointer dereference
          me_dst->cd_flag &= ~ME_CDFLAG_EDGE_BWEIGHT;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\data_transfer.c:293:12: style: The scope of the variable 'custom_nors_dst' can be reduced. [variableScope]
    short(*custom_nors_dst)[2] = CustomData_get_layer(ldata_dst, CD_CUSTOMLOOPNORMAL);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\deform.c:75:28: style: The scope of the variable 'defgroupn' can be reduced. [variableScope]
  bDeformGroup *defgroup, *defgroupn;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\deform.c:561:12: style: The scope of the variable 'flip_num' can be reduced. [variableScope]
    int i, flip_num, *map = MEM_mallocN(defbase_tot * sizeof(int), __func__);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\deform.c:1136:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, j;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\deform.c:1136:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\deform.c:1138:18: style: The scope of the variable 'dw_src' can be reduced. [variableScope]
  MDeformWeight *dw_src;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\deform.c:1332:7: style: The scope of the variable 'idx_src' can be reduced. [variableScope]
  int idx_src, idx_dst;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\deform.c:1332:16: style: The scope of the variable 'idx_dst' can be reduced. [variableScope]
  int idx_src, idx_dst;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist_tangent.c:193:16: style: The scope of the variable 'nors' can be reduced. [variableScope]
  const float(*nors)[3] = (float(*)[3])dlt->dl->nors;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:619:15: style: The scope of the variable 'loc' can be reduced. [variableScope]
        float loc[3], fac;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:1068:9: style: The scope of the variable 'neg' can be reduced. [variableScope]
  float neg = -1;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:1069:7: style: The scope of the variable 'right_index' can be reduced. [variableScope]
  int right_index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:1343:11: style: The scope of the variable 'vec' can be reduced. [variableScope]
    float vec[4], dir[3], radius;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:1343:19: style: The scope of the variable 'dir' can be reduced. [variableScope]
    float vec[4], dir[3], radius;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:1344:11: style: The scope of the variable 'curvetime' can be reduced. [variableScope]
    float curvetime;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:3122:11: style: The scope of the variable 'dvec' can be reduced. [variableScope]
    float dvec[3], dist, sfac = 1.0f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:3475:24: style: The scope of the variable 'imat' can be reduced. [variableScope]
    float obmat[4][4], imat[4][4], tarmat[4][4], tmat[4][4];
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:3626:29: style: The scope of the variable 'totmat' can be reduced. [variableScope]
      float vec[4], dir[3], totmat[4][4];
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:3658:15: style: The scope of the variable 'offset' can be reduced. [variableScope]
        float offset;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:3999:10: style: The scope of the variable 'fail' can be reduced. [variableScope]
    bool fail = false;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:4000:11: style: The scope of the variable 'co' can be reduced. [variableScope]
    float co[3] = {0.0f, 0.0f, 0.0f};
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:4001:10: style: The scope of the variable 'track_normal' can be reduced. [variableScope]
    bool track_normal = false;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:4002:11: style: The scope of the variable 'track_no' can be reduced. [variableScope]
    float track_no[3] = {0.0f, 0.0f, 0.0f};
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:4658:16: style: The scope of the variable 'd' can be reduced. [variableScope]
    float len, d;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:5678:18: style: The scope of the variable 'cob' can be reduced. [variableScope]
  bConstraintOb *cob;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:5679:22: style: The scope of the variable 'ct' can be reduced. [variableScope]
  bConstraintTarget *ct;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curveprofile.c:745:28: error: Uninitialized variable: n_common [uninitvar]
  printf("n_common: %d\n", n_common);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\editlattice.c:88:11: style: The scope of the variable 'bp' can be reduced. [variableScope]
  BPoint *bp;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\editlattice.c:89:10: style: The scope of the variable 'fp' can be reduced. [variableScope]
  float *fp;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1770:9: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (!for_orco) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1763:9: note: First condition
    if (!for_orco) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1770:9: note: Second condition
    if (!for_orco) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:286:49: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
        struct MDeformWeight_Link *tmp_dwlink = alloca(sizeof(*tmp_dwlink));
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:142:13: style: The scope of the variable 'dln' can be reduced. [variableScope]
  DispList *dln, *dl;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:496:41: style: The scope of the variable 'tot' can be reduced. [variableScope]
  int colnr = 0, charidx = 0, cont = 1, tot, a, *index, nextcol = 0;
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:496:57: style: The scope of the variable 'nextcol' can be reduced. [variableScope]
  int colnr = 0, charidx = 0, cont = 1, tot, a, *index, nextcol = 0;
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:497:7: style: The scope of the variable 'totvert' can be reduced. [variableScope]
  int totvert;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:731:22: style: The scope of the variable 'fp' can be reduced. [variableScope]
    float minx, dx, *fp;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:732:9: style: The scope of the variable 'a' can be reduced. [variableScope]
    int a;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1386:9: style: The scope of the variable 'normlen' can be reduced. [variableScope]
  float normlen, normsum = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1414:9: style: The scope of the variable 'len_next' can be reduced. [variableScope]
  float len_next = 0.0f, len = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1448:9: style: The scope of the variable 'tmpf' can be reduced. [variableScope]
  float tmpf, total_length = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1449:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  int end = 0, i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1582:13: style: The scope of the variable 'a' can be reduced. [variableScope]
        int a;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1830:16: style: The scope of the variable 'vert' can be reduced. [variableScope]
  const float *vert;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1831:10: style: The scope of the variable 'tot' can be reduced. [variableScope]
  int a, tot = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:1068:13: style: Variable 'neg' is assigned a value that is never used. [unreadVariable]
  float neg = -1;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:496:65: style: Variable 'nextcol' is assigned a value that is never used. [unreadVariable]
  int colnr = 0, charidx = 0, cont = 1, tot, a, *index, nextcol = 0;
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1414:18: style: Variable 'len_next' is assigned a value that is never used. [unreadVariable]
  float len_next = 0.0f, len = 0.0f;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\displist.c:1831:14: style: Variable 'tot' is assigned a value that is never used. [unreadVariable]
  int a, tot = 0;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:1295:10: style: Redundant initialization for 'vs_dst'. The initialized value is overwritten before it is read. [redundantInitialization]
  vs_dst = dest;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:1282:21: note: vs_dst is initialized
  MVertSkin *vs_dst = dest;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:1295:10: note: vs_dst is overwritten
  vs_dst = dest;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:376:9: style: The scope of the variable 'no_tmp' can be reduced. [variableScope]
  float no_tmp[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:584:7: style: The scope of the variable 'corners' can be reduced. [variableScope]
  int corners, cornersize, S;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:584:16: style: The scope of the variable 'cornersize' can be reduced. [variableScope]
  int corners, cornersize, S;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:584:28: style: The scope of the variable 'S' can be reduced. [variableScope]
  int corners, cornersize, S;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:740:17: style: The scope of the variable 'tmp_col' can be reduced. [variableScope]
  unsigned char tmp_col[4];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:1283:20: style: The scope of the variable 'w' can be reduced. [variableScope]
  float radius[3], w;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:1879:10: style: The scope of the variable 'type' can be reduced. [variableScope]
  int i, type, lasttype = -1, lastactive = 0, lastrender = 0, lastclone = 0, lastmask = 0,
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:1880:16: style: The scope of the variable 'flag' can be reduced. [variableScope]
               flag = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:1984:24: style: The scope of the variable 'typeInfo' can be reduced. [variableScope]
  const LayerTypeInfo *typeInfo;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:2051:24: style: The scope of the variable 'typeInfo' can be reduced. [variableScope]
  const LayerTypeInfo *typeInfo;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:2646:20: style: The scope of the variable 'layer' can be reduced. [variableScope]
  CustomDataLayer *layer;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:2744:14: style: The scope of the variable 'dest_i' can be reduced. [variableScope]
  int src_i, dest_i;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:2912:24: style: The scope of the variable 'typeInfo' can be reduced. [variableScope]
  const LayerTypeInfo *typeInfo;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:4219:24: style: The scope of the variable 'typeInfo' can be reduced. [variableScope]
  const LayerTypeInfo *typeInfo;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:4222:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:4288:20: style: The scope of the variable 'layer' can be reduced. [variableScope]
  CustomDataLayer *layer;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:4289:24: style: The scope of the variable 'typeInfo' can be reduced. [variableScope]
  const LayerTypeInfo *typeInfo;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:4806:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:1407:12: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
      in = (float *)(((unsigned char *)in) + (rowstride - 3 * totv * sizeof(*in)));
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2479:9: style: Variable 'bevp0' is reassigned a value before the old one has been used. [redundantAssignment]
  bevp0 = bevp1 - 1;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2462:9: note: bevp0 is assigned
  bevp0 = bevp1 - 1;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2479:9: note: bevp0 is overwritten
  bevp0 = bevp1 - 1;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2479:9: style: Variable 'bevp0' is reassigned a value before the old one has been used. [redundantAssignment]
  bevp0 = bevp1 - 1;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2471:11: note: bevp0 is assigned
    bevp0 = bevp1;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2479:9: note: bevp0 is overwritten
  bevp0 = bevp1 - 1;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:1880:21: style: Variable 'flag' is assigned a value that is never used. [unreadVariable]
               flag = 0;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:3416:13: style: Variable 'len_ratio' is reassigned a value before the old one has been used. [redundantAssignment]
  len_ratio = len_a / len_b;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:3282:13: note: len_ratio is assigned
  len_ratio = len_a / len_b;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:3416:13: note: len_ratio is overwritten
  len_ratio = len_a / len_b;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\customdata.c:3197:8: style: Variable 'b_num' is assigned a value that is never used. [unreadVariable]
  if (!LAYER_CMP(ldata, CD_TANGENT, fdata, CD_TANGENT)) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:497:7: style: The scope of the variable 'len' can be reduced. [variableScope]
  int len;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:562:14: style: The scope of the variable 'nun' can be reduced. [variableScope]
  Nurb *nu, *nun;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:577:14: style: The scope of the variable 'bezt' can be reduced. [variableScope]
  BezTriple *bezt;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:578:11: style: The scope of the variable 'bp' can be reduced. [variableScope]
  BPoint *bp;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:664:16: style: The scope of the variable 'prevbp' can be reduced. [variableScope]
  BPoint *bp, *prevbp;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:1433:11: style: The scope of the variable 'bp' can be reduced. [variableScope]
  BPoint *bp;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:1434:33: style: The scope of the variable 'sumdiv' can be reduced. [variableScope]
  float u, ustart, uend, ustep, sumdiv;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:1721:10: style: The scope of the variable 'bevcu' can be reduced. [variableScope]
  Curve *bevcu, *cu;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:1722:14: style: The scope of the variable 'facx' can be reduced. [variableScope]
  float *fp, facx, facy, angle, dangle;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:1722:20: style: The scope of the variable 'facy' can be reduced. [variableScope]
  float *fp, facx, facy, angle, dangle;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:1963:9: style: The scope of the variable 'min' can be reduced. [variableScope]
  float min, max, vec[3], hvec1[3], hvec2[3], lab, mu;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:1963:14: style: The scope of the variable 'max' can be reduced. [variableScope]
  float min, max, vec[3], hvec1[3], hvec2[3], lab, mu;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2261:29: style: The scope of the variable 'bevp0' can be reduced. [variableScope]
  BevPoint *bevp2, *bevp1, *bevp0;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2262:7: style: The scope of the variable 'nr' can be reduced. [variableScope]
  int nr;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2329:9: style: The scope of the variable 'q' can be reduced. [variableScope]
  float q[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2346:9: style: The scope of the variable 'q' can be reduced. [variableScope]
  float q[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2382:62: style: The scope of the variable 'ang_fac' can be reduced. [variableScope]
    float vec_1[3] = {0, 1, 0}, vec_2[3] = {0, 1, 0}, angle, ang_fac, cross_tmp[3];
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2673:13: style: The scope of the variable 'bevp2' can be reduced. [variableScope]
  BevPoint *bevp2, *bevp1 = NULL, *bevp0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2675:9: style: The scope of the variable 'min' can be reduced. [variableScope]
  float min, inp;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2675:14: style: The scope of the variable 'inp' can be reduced. [variableScope]
  float min, inp;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2677:37: style: The scope of the variable 'sd1' can be reduced. [variableScope]
  struct BevelSort *sortdata, *sd, *sd1;
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2678:10: style: The scope of the variable 'b' can be reduced. [variableScope]
  int a, b, nr, poly, resolu = 0, len = 0, segcount;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:3884:8: style: The scope of the variable 'clamped_prev' can be reduced. [variableScope]
  bool clamped_prev = false, clamped_cur = ELEM(HD_AUTO_ANIM, bezt_first->h1, bezt_first->h2);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:4492:22: style: The scope of the variable 'bezt2' can be reduced. [variableScope]
  BezTriple *bezt1, *bezt2;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:5308:16: style: The scope of the variable 'bezt' can be reduced. [variableScope]
    BezTriple *bezt;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:5309:13: style: The scope of the variable 'bp' can be reduced. [variableScope]
    BPoint *bp;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\editmesh_tangent.c:372:11: style: The scope of the variable 'index' can be reduced. [variableScope]
      int index = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\editmesh_tangent.c:372:17: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
      int index = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2418:11: style: Variable 'bevp0' is assigned a value that is never used. [unreadVariable]
    bevp0 = bevp1 - 1;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:2427:13: style: Variable 'bevp0' is assigned a value that is never used. [unreadVariable]
      bevp0 = bevp1;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\curve.c:3884:21: style: Variable 'clamped_prev' is assigned a value that is never used. [unreadVariable]
  bool clamped_prev = false, clamped_cur = ELEM(HD_AUTO_ANIM, bezt_first->h1, bezt_first->h2);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\effect.c:1130:41: style: The scope of the variable 'temp2' can be reduced. [variableScope]
            float temp1[3] = {0, 0, 0}, temp2[3];
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\freestyle.c:82:31: style: The scope of the variable 'new_lineset' can be reduced. [variableScope]
  FreestyleLineSet *lineset, *new_lineset;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\freestyle.c:83:35: style: The scope of the variable 'new_module' can be reduced. [variableScope]
  FreestyleModuleConfig *module, *new_module;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:3152:20: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  storage.buffer = alloca(storage.modifier_count * storage.size_per_modifier);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:638:13: warning: Either the condition '(ob->type==OB_FONT)&&ef' is redundant or there is possible null pointer dereference: ef. [nullPointerRedundantCheck]
  CLAMP_MAX(ef->pos, ef->len);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:636:36: note: Assuming that condition '(ob->type==OB_FONT)&&ef' is not redundant
  BLI_assert((ob->type == OB_FONT) && ef);
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:634:20: note: Assignment 'ef=cu->editfont', assigned value is 0
  EditFont *ef = cu->editfont;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:638:13: note: Null pointer dereference
  CLAMP_MAX(ef->pos, ef->len);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:639:13: warning: Either the condition '(ob->type==OB_FONT)&&ef' is redundant or there is possible null pointer dereference: ef. [nullPointerRedundantCheck]
  CLAMP_MAX(ef->selstart, ef->len + 1);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:636:36: note: Assuming that condition '(ob->type==OB_FONT)&&ef' is not redundant
  BLI_assert((ob->type == OB_FONT) && ef);
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:634:20: note: Assignment 'ef=cu->editfont', assigned value is 0
  EditFont *ef = cu->editfont;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:639:13: note: Null pointer dereference
  CLAMP_MAX(ef->selstart, ef->len + 1);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:640:13: warning: Either the condition '(ob->type==OB_FONT)&&ef' is redundant or there is possible null pointer dereference: ef. [nullPointerRedundantCheck]
  CLAMP_MAX(ef->selend, ef->len);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:636:36: note: Assuming that condition '(ob->type==OB_FONT)&&ef' is not redundant
  BLI_assert((ob->type == OB_FONT) && ef);
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:634:20: note: Assignment 'ef=cu->editfont', assigned value is 0
  EditFont *ef = cu->editfont;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:640:13: note: Null pointer dereference
  CLAMP_MAX(ef->selend, ef->len);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\font.c:471:14: style: The scope of the variable 'bezt1' can be reduced. [variableScope]
  BezTriple *bezt1, *bezt2;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1527:40: warning: Either the condition 'ob!=NULL' is redundant or there is possible null pointer dereference: ob. [nullPointerRedundantCheck]
    pchan = BKE_pose_channel_find_name(ob->pose, dtar->pchan_name);
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1524:20: note: Assuming that condition 'ob!=NULL' is not redundant
    BLI_assert((ob != NULL) && (GS(ob->id.name) == ID_OB));
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1520:18: note: Assignment 'ob=(Object*)dtar_id_ensure_proxy_from(dtar->id)', assigned value is 0
    Object *ob = (Object *)dtar_id_ensure_proxy_from(dtar->id);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1527:40: note: Null pointer dereference
    pchan = BKE_pose_channel_find_name(ob->pose, dtar->pchan_name);
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1536:16: warning: Either the condition 'ob!=NULL' is redundant or there is possible null pointer dereference: ob. [nullPointerRedundantCheck]
      mat[i] = ob->obmat;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1524:20: note: Assuming that condition 'ob!=NULL' is not redundant
    BLI_assert((ob != NULL) && (GS(ob->id.name) == ID_OB));
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1520:18: note: Assignment 'ob=(Object*)dtar_id_ensure_proxy_from(dtar->id)', assigned value is 0
    Object *ob = (Object *)dtar_id_ensure_proxy_from(dtar->id);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1536:16: note: Null pointer dereference
      mat[i] = ob->obmat;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1586:40: warning: Either the condition 'ob!=NULL' is redundant or there is possible null pointer dereference: ob. [nullPointerRedundantCheck]
    pchan = BKE_pose_channel_find_name(ob->pose, dtar->pchan_name);
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1583:20: note: Assuming that condition 'ob!=NULL' is not redundant
    BLI_assert((ob != NULL) && (GS(ob->id.name) == ID_OB));
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1578:18: note: Assignment 'ob=(Object*)dtar_id_ensure_proxy_from(dtar->id)', assigned value is 0
    Object *ob = (Object *)dtar_id_ensure_proxy_from(dtar->id);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:1586:40: note: Null pointer dereference
    pchan = BKE_pose_channel_find_name(ob->pose, dtar->pchan_name);
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:658:78: warning: Either the condition 'if(prevbezt&&(prevbezt->ipo==BEZT_IPO_BEZ))' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
        for (bezt = fcu->bezt, i = 0; i < fcu->totvert; prevbezt = bezt, bezt++, i++) {
                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:668:18: note: Assuming that condition 'if(prevbezt&&(prevbezt->ipo==BEZT_IPO_BEZ))' is not redundant
              if (prevbezt && (prevbezt->ipo == BEZT_IPO_BEZ)) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:658:68: note: Assignment from 'bezt'
        for (bezt = fcu->bezt, i = 0; i < fcu->totvert; prevbezt = bezt, bezt++, i++) {
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:658:78: note: Null pointer addition
        for (bezt = fcu->bezt, i = 0; i < fcu->totvert; prevbezt = bezt, bezt++, i++) {
                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:164:11: style: The scope of the variable 'dfcu' can be reduced. [variableScope]
  FCurve *dfcu, *sfcu;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:630:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:2496:40: style: The scope of the variable 'fac' can be reduced. [variableScope]
  float h1[2], h2[2], len1, len2, len, fac;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:2536:38: style: The scope of the variable 'q' can be reduced. [variableScope]
  double c0, c1, c2, c3, a, b, c, p, q, d, t, phi;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:2536:41: style: The scope of the variable 'd' can be reduced. [variableScope]
  double c0, c1, c2, c3, a, b, c, p, q, d, t, phi;
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:2536:44: style: The scope of the variable 't' can be reduced. [variableScope]
  double c0, c1, c2, c3, a, b, c, p, q, d, t, phi;
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:2536:47: style: The scope of the variable 'phi' can be reduced. [variableScope]
  double c0, c1, c2, c3, a, b, c, p, q, d, t, phi;
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:2652:9: style: The scope of the variable 't' can be reduced. [variableScope]
  float t, c0, c1, c2, c3;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fcurve.c:2681:8: style: Variable 'bezt' is assigned a value that is never used. [unreadVariable]
  bezt = prevbezt + 1;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil.c:1938:5: warning: Either the condition 'if(act_gpf)' is redundant or there is possible null pointer dereference: act_gpf. [nullPointerRedundantCheck]
    act_gpf->runtime.onion_id = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil.c:1939:8: note: Assuming that condition 'if(act_gpf)' is not redundant
    if (act_gpf) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil.c:1938:5: note: Null pointer dereference
    act_gpf->runtime.onion_id = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil.c:1726:15: style: The scope of the variable 'hexcol' can be reduced. [variableScope]
  const char *hexcol[] = {
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil.c:1507:14: style: Variable 'fnum' is assigned a value that is never used. [unreadVariable]
  float fnum = 0.5f; /* default mid curve */
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\dynamicpaint.c:479:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\dynamicpaint.c:731:7: style: The scope of the variable 'grid_cells' can be reduced. [variableScope]
  int grid_cells, axis = 3;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\dynamicpaint.c:731:19: style: The scope of the variable 'axis' can be reduced. [variableScope]
  int grid_cells, axis = 3;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\dynamicpaint.c:2835:8: style: The scope of the variable 'uvname' can be reduced. [variableScope]
  char uvname[MAX_CUSTOMDATA_LAYER_NAME];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\dynamicpaint.c:3557:11: style: The scope of the variable 'a_ratio' can be reduced. [variableScope]
    float a_ratio, a_highest;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\dynamicpaint.c:3557:20: style: The scope of the variable 'a_highest' can be reduced. [variableScope]
    float a_ratio, a_highest;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\dynamicpaint.c:4435:11: style: The scope of the variable 'smooth_range' can be reduced. [variableScope]
    float smooth_range, part_solidradius;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\dynamicpaint.c:5107:9: style: The scope of the variable 'vel' can be reduced. [variableScope]
  float vel[3] = {0};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\dynamicpaint.c:5823:13: style: The scope of the variable 'i' can be reduced. [variableScope]
        int i;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil_modifier.c:633:7: style: The scope of the variable 'totnewpoints' can be reduced. [variableScope]
  int totnewpoints, oldtotpoints;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\dynamicpaint.c:5824:15: style: The scope of the variable 'dry_ratio' can be reduced. [variableScope]
        float dry_ratio, f_color[4];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil_modifier.c:633:21: style: The scope of the variable 'oldtotpoints' can be reduced. [variableScope]
  int totnewpoints, oldtotpoints;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil_modifier.c:634:7: style: The scope of the variable 'i2' can be reduced. [variableScope]
  int i2;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons_rasterize.c:130:75: error: syntax error [syntaxError]
      ARRAY_SET_ITEMS(data.smooth.pt_fl[0], UNPACK2_EX((float), data.pt[0], ));
                                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:319:6: warning: Either the condition 'new_prv_p!=NULL' is redundant or there is possible null pointer dereference: new_prv_p. [nullPointerRedundantCheck]
    *new_prv_p = BKE_previewimg_copy(*old_prv_p);
     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:313:26: note: Assuming that condition 'new_prv_p!=NULL' is not redundant
    BLI_assert(new_prv_p != NULL && ELEM(*new_prv_p, NULL, *old_prv_p));
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:310:53: note: Assignment 'new_prv_p=BKE_previewimg_id_get_p(new_id)', assigned value is 0
  PreviewImage **new_prv_p = BKE_previewimg_id_get_p(new_id);
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:319:6: note: Null pointer dereference
    *new_prv_p = BKE_previewimg_copy(*old_prv_p);
     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:320:25: warning: Either the condition 'new_prv_p!=NULL' is redundant or there is possible null pointer dereference: new_prv_p. [nullPointerRedundantCheck]
    new_id->icon_id = (*new_prv_p)->icon_id = 0;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:313:26: note: Assuming that condition 'new_prv_p!=NULL' is not redundant
    BLI_assert(new_prv_p != NULL && ELEM(*new_prv_p, NULL, *old_prv_p));
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:310:53: note: Assignment 'new_prv_p=BKE_previewimg_id_get_p(new_id)', assigned value is 0
  PreviewImage **new_prv_p = BKE_previewimg_id_get_p(new_id);
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:320:25: note: Null pointer dereference
    new_id->icon_id = (*new_prv_p)->icon_id = 0;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:289:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:486:11: style: The scope of the variable 'icon_w' can be reduced. [variableScope]
      int icon_w, icon_h;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\icons.c:486:19: style: The scope of the variable 'icon_h' can be reduced. [variableScope]
      int icon_w, icon_h;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil_geom.c:347:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil_geom.c:390:13: style: The scope of the variable 'ld' can be reduced. [variableScope]
  LinkData *ld;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\gpencil_geom.c:662:15: style: Variable 'second_last' is assigned a value that is never used. [unreadVariable]
  second_last = &pt[gps->totpoints - 2];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\idprop.c:93:24: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  IDProperty *narray, *tmp;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\idprop.c:510:15: style: The scope of the variable 'other' can be reduced. [variableScope]
  IDProperty *other, *prop;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\idprop.c:540:21: style: The scope of the variable 'prop_src' can be reduced. [variableScope]
  const IDProperty *prop_src;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\idprop.c:902:27: style: The scope of the variable 'link2' can be reduced. [variableScope]
      IDProperty *link1, *link2;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\constraint.c:4983:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = cob->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image_gen.c:103:26: style: The scope of the variable 'dark' can be reduced. [variableScope]
  int checkerwidth = 32, dark = 1;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image_gen.c:109:18: style: The scope of the variable 'hoffs' can be reduced. [variableScope]
  float h = 0.0, hoffs = 0.0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image_gen.c:103:31: style: Variable 'dark' is assigned a value that is never used. [unreadVariable]
  int checkerwidth = 32, dark = 1;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image_gen.c:109:11: style: Variable 'h' is assigned a value that is never used. [unreadVariable]
  float h = 0.0, hoffs = 0.0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image_gen.c:109:24: style: Variable 'hoffs' is assigned a value that is never used. [unreadVariable]
  float h = 0.0, hoffs = 0.0;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3912:26: style: Redundant condition: baking_noise. '!baking_noise || (baking_noise && resume_noise)' is equivalent to '!baking_noise || resume_noise' [redundantCondition]
      if ((!baking_noise || (baking_noise && resume_noise)) &&
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3939:18: style: Variable 'has_data' is reassigned a value before the old one has been used. [redundantAssignment]
        has_data = manta_update_smoke_structures(mds->fluid, mmd, data_frame);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3918:18: note: has_data is assigned
        has_data = manta_update_noise_structures(mds->fluid, mmd, noise_frame);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3939:18: note: has_data is overwritten
        has_data = manta_update_smoke_structures(mds->fluid, mmd, data_frame);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:142:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x, y, z;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:142:10: style: The scope of the variable 'y' can be reduced. [variableScope]
  int x, y, z;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:142:13: style: The scope of the variable 'z' can be reduced. [variableScope]
  int x, y, z;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:484:9: style: The scope of the variable 'gravity' can be reduced. [variableScope]
  float gravity[3] = {0.0f, 0.0f, -1.0f};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:485:9: style: The scope of the variable 'gravity_mag' can be reduced. [variableScope]
  float gravity_mag;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:1911:11: style: The scope of the variable 'n1' can be reduced. [variableScope]
    float n1[3], n2[3], n3[3], hit_normal[3];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:1911:18: style: The scope of the variable 'n2' can be reduced. [variableScope]
    float n1[3], n2[3], n3[3], hit_normal[3];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:1911:25: style: The scope of the variable 'n3' can be reduced. [variableScope]
    float n1[3], n2[3], n3[3], hit_normal[3];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:1911:32: style: The scope of the variable 'hit_normal' can be reduced. [variableScope]
    float n1[3], n2[3], n3[3], hit_normal[3];
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3414:10: style: The scope of the variable 'co' can be reduced. [variableScope]
  float *co;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3415:10: style: The scope of the variable 'mp' can be reduced. [variableScope]
  MPoly *mp;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3416:10: style: The scope of the variable 'ml' can be reduced. [variableScope]
  MLoop *ml;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3420:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3421:9: style: The scope of the variable 'ob_loc' can be reduced. [variableScope]
  float ob_loc[3] = {0};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3422:9: style: The scope of the variable 'ob_cache_loc' can be reduced. [variableScope]
  float ob_cache_loc[3] = {0};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3815:7: style: The scope of the variable 'o_res' can be reduced. [variableScope]
  int o_res[3], o_min[3], o_max[3], o_shift[3];
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3815:17: style: The scope of the variable 'o_min' can be reduced. [variableScope]
  int o_res[3], o_min[3], o_max[3], o_shift[3];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3815:27: style: The scope of the variable 'o_max' can be reduced. [variableScope]
  int o_res[3], o_min[3], o_max[3], o_shift[3];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3815:37: style: The scope of the variable 'o_shift' can be reduced. [variableScope]
  int o_res[3], o_min[3], o_max[3], o_shift[3];
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ipo.c:406:15: style: The scope of the variable 'buf' can be reduced. [variableScope]
  static char buf[128];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ipo.c:1417:20: style: The scope of the variable 'i' can be reduced. [variableScope]
      unsigned int i = 0;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ipo.c:1487:18: style: The scope of the variable 'i' can be reduced. [variableScope]
    unsigned int i = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ipo.c:1487:20: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    unsigned int i = 0;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\fluid.c:3575:6: style: Variable 'dt' is assigned a value that is never used. [unreadVariable]
  dt = mds->dt;
     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lattice.c:1006:16: style: The scope of the variable 'bp1' can be reduced. [variableScope]
  BPoint *bp, *bp1, *bp2;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lattice.c:1006:22: style: The scope of the variable 'bp2' can be reduced. [variableScope]
  BPoint *bp, *bp1, *bp2;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lattice.c:1008:9: style: The scope of the variable 'fac1' can be reduced. [variableScope]
  float fac1, du = 0.0, dv = 0.0, dw = 0.0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:696:44: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                  KEYELEM_FLOAT_LEN_COORD, (float *)poin, (float *)kref, (float *)k1, *weights);
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:872:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                          (float *)poin,
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:873:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                          (float *)reffrom,
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lattice.c:1008:15: style: The scope of the variable 'du' can be reduced. [variableScope]
  float fac1, du = 0.0, dv = 0.0, dw = 0.0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:874:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                          (float *)from,
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lattice.c:1008:25: style: The scope of the variable 'dv' can be reduced. [variableScope]
  float fac1, du = 0.0, dv = 0.0, dw = 0.0;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:879:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                          (float *)poin,
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lattice.c:1008:35: style: The scope of the variable 'dw' can be reduced. [variableScope]
  float fac1, du = 0.0, dv = 0.0, dw = 0.0;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:880:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                          (float *)reffrom,
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:881:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                          (float *)from,
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:886:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                          (float *)poin,
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:887:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                          (float *)reffrom,
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:888:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                          (float *)from,
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1077:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                (float *)poin,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1078:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                (float *)k1,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1079:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                (float *)k2,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1080:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                (float *)k3,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1081:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                (float *)k4,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1086:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                (float *)poin,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1087:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                (float *)k1,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1088:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                (float *)k2,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1089:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                (float *)k3,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1090:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                (float *)k4,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1529:10: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
  return (float *)out;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:550:15: style: The scope of the variable 'eve' can be reduced. [variableScope]
      BMVert *eve;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:552:14: style: The scope of the variable 'co' can be reduced. [variableScope]
      float(*co)[3];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:553:11: style: The scope of the variable 'a' can be reduced. [variableScope]
      int a;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:624:41: style: The scope of the variable 'ofsp' can be reduced. [variableScope]
  int elemsize, poinsize = 0, a, step, *ofsp, ofs[32], flagflo = 0;
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:626:9: style: The scope of the variable 'cp' can be reduced. [variableScope]
  char *cp, elemstr[8];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:835:15: style: The scope of the variable 'weight' can be reduced. [variableScope]
        float weight,
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:934:26: style: The scope of the variable 'ofsp' can be reduced. [variableScope]
  int a, step, ofs[32], *ofsp;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:937:9: style: The scope of the variable 'cp' can be reduced. [variableScope]
  char *cp, elemstr[8];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1194:11: style: The scope of the variable 'eve' can be reduced. [variableScope]
  BMVert *eve;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1313:9: style: The scope of the variable 't' can be reduced. [variableScope]
  float t[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1314:7: style: The scope of the variable 'flag' can be reduced. [variableScope]
  int flag = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1383:9: style: The scope of the variable 't' can be reduced. [variableScope]
  float t[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1384:7: style: The scope of the variable 'flag' can be reduced. [variableScope]
  int flag = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1407:9: style: The scope of the variable 't' can be reduced. [variableScope]
  float t[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1408:7: style: The scope of the variable 'flag' can be reduced. [variableScope]
  int flag;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1717:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:2363:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:563:12: style: Variable 'a' is assigned a value that is never used. [unreadVariable]
          a++;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1314:12: style: Variable 'flag' is assigned a value that is never used. [unreadVariable]
  int flag = 0;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\key.c:1384:12: style: Variable 'flag' is assigned a value that is never used. [unreadVariable]
  int flag = 0;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:1046:14: style: The scope of the variable 'ibufm' can be reduced. [variableScope]
      ImBuf *ibufm;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:1080:13: style: The scope of the variable 'size' can be reduced. [variableScope]
  uintptr_t size, totsize = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:1823:14: style: The scope of the variable 'tl' can be reduced. [variableScope]
  struct tm *tl;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3069:22: style: The scope of the variable 'srv' can be reduced. [variableScope]
    SceneRenderView *srv;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3108:20: style: Local variable 'ima' shadows outer argument [shadowArgument]
            Image *ima = (Image *)node->id;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3100:26: note: Shadowed declaration
    void callback(Image *ima, ID *iuser_id, ImageUser *iuser, void *customdata))
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3108:20: note: Shadow variable
            Image *ima = (Image *)node->id;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3113:20: style: Local variable 'ima' shadows outer argument [shadowArgument]
            Image *ima = (Image *)node->id;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3100:26: note: Shadowed declaration
    void callback(Image *ima, ID *iuser_id, ImageUser *iuser, void *customdata))
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3113:20: note: Shadow variable
            Image *ima = (Image *)node->id;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3122:18: style: Local variable 'ima' shadows outer argument [shadowArgument]
          Image *ima = (Image *)node->id;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3100:26: note: Shadowed declaration
    void callback(Image *ima, ID *iuser_id, ImageUser *iuser, void *customdata))
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3122:18: note: Shadow variable
          Image *ima = (Image *)node->id;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3123:22: style: Local variable 'iuser' shadows outer argument [shadowArgument]
          ImageUser *iuser = node->storage;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3100:56: note: Shadowed declaration
    void callback(Image *ima, ID *iuser_id, ImageUser *iuser, void *customdata))
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3123:22: note: Shadow variable
          ImageUser *iuser = node->storage;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3131:18: style: Local variable 'ima' shadows outer argument [shadowArgument]
          Image *ima = (Image *)node->id;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3100:26: note: Shadowed declaration
    void callback(Image *ima, ID *iuser_id, ImageUser *iuser, void *customdata))
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3131:18: note: Shadow variable
          Image *ima = (Image *)node->id;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3132:22: style: Local variable 'iuser' shadows outer argument [shadowArgument]
          ImageUser *iuser = node->storage;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3100:56: note: Shadowed declaration
    void callback(Image *ima, ID *iuser_id, ImageUser *iuser, void *customdata))
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\image.c:3132:22: note: Shadow variable
          ImageUser *iuser = node->storage;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_override.c:424:29: style: Condition 'subitem_refname!=NULL' is always true [knownConditionTrueFalse]
    return (subitem_refname != NULL && opop->subitem_reference_name != NULL &&
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_override.c:421:25: note: Assuming that condition 'subitem_refname==NULL' is not redundant
    if (subitem_refname == NULL || opop->subitem_reference_name == NULL) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_override.c:424:29: note: Condition 'subitem_refname!=NULL' is always true
    return (subitem_refname != NULL && opop->subitem_reference_name != NULL &&
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_override.c:443:29: style: Condition 'subitem_locname!=NULL' is always true [knownConditionTrueFalse]
    return (subitem_locname != NULL && opop->subitem_local_name != NULL &&
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_override.c:440:25: note: Assuming that condition 'subitem_locname==NULL' is not redundant
    if (subitem_locname == NULL || opop->subitem_local_name == NULL) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_override.c:443:29: note: Condition 'subitem_locname!=NULL' is always true
    return (subitem_locname != NULL && opop->subitem_local_name != NULL &&
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:635:24: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  char *id_swap_buff = alloca(id_struct_size);
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:630:33: warning: Either the condition 'id_type!=NULL' is redundant or there is possible null pointer dereference: id_type. [nullPointerRedundantCheck]
  const size_t id_struct_size = id_type->struct_size;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:629:22: note: Assuming that condition 'id_type!=NULL' is not redundant
  BLI_assert(id_type != NULL);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:628:58: note: Assignment 'id_type=BKE_idtype_get_info_from_id(id_a)', assigned value is 0
  const IDTypeInfo *id_type = BKE_idtype_get_info_from_id(id_a);
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:630:33: note: Null pointer dereference
  const size_t id_struct_size = id_type->struct_size;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:561:9: error: Uninitialized variable: *r_newid [uninitvar]
    if (*r_newid != NULL) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:434:34: note: Calling function 'BKE_id_copy', 3rd argument '&id_new' value is <Uninit>
      if (BKE_id_copy(bmain, id, &id_new)) {
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:617:36: note: Calling function 'BKE_id_copy_ex', 3rd argument 'newid' value is <Uninit>
  return BKE_id_copy_ex(bmain, id, newid, LIB_ID_COPY_DEFAULT);
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:561:9: note: Uninitialized variable: *r_newid
    if (*r_newid != NULL) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:1128:16: error: Uninitialized variable: *r_newid [uninitvar]
  ID *new_id = *r_newid;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:1221:35: note: Calling function 'BKE_libblock_copy_ex', 3rd argument '&idn' value is <Uninit>
  BKE_libblock_copy_ex(bmain, id, &idn, 0);
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\lib_id.c:1128:16: note: Uninitialized variable: *r_newid
  ID *new_id = *r_newid;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask_evaluate.c:908:24: style: Argument 'found==2' to function BLI_assert is always 0 [constArgument]
      BLI_assert(found == 2);
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask_evaluate.c:893:20: note: Assuming that condition 'found==2' is not redundant
    else if (found == 2) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask_evaluate.c:908:24: note: Argument 'found==2' to function BLI_assert is always 0
      BLI_assert(found == 2);
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask.c:279:21: style: The scope of the variable 'masklay_shape_new' can be reduced. [variableScope]
    MaskLayerShape *masklay_shape_new;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask.c:440:11: style: The scope of the variable 'n1' can be reduced. [variableScope]
    float n1[2], n2[2], co1[2], co2[2];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask.c:440:18: style: The scope of the variable 'n2' can be reduced. [variableScope]
    float n1[2], n2[2], co1[2], co2[2];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask_rasterize.c:339:22: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
  unsigned int *face = layer->face_array[face_index];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask.c:440:25: style: The scope of the variable 'co1' can be reduced. [variableScope]
    float n1[2], n2[2], co1[2], co2[2];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask.c:440:33: style: The scope of the variable 'co2' can be reduced. [variableScope]
    float n1[2], n2[2], co1[2], co2[2];
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask.c:441:11: style: The scope of the variable 'v1' can be reduced. [variableScope]
    float v1[2], v2[2];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask.c:441:18: style: The scope of the variable 'v2' can be reduced. [variableScope]
    float v1[2], v2[2];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask.c:442:11: style: The scope of the variable 'ang1' can be reduced. [variableScope]
    float ang1, ang2;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask.c:442:17: style: The scope of the variable 'ang2' can be reduced. [variableScope]
    float ang1, ang2;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask.c:551:25: style: The scope of the variable 'vec' can be reduced. [variableScope]
    float v1[2], v2[2], vec[2];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask_rasterize.c:648:14: style: The scope of the variable 'diff_feather_points_flip' can be reduced. [variableScope]
      float(*diff_feather_points_flip)[2];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mask_rasterize.c:284:11: style: Variable 'co_next' is assigned a value that is never used. [unreadVariable]
  co_next = diff_points[k_next];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mball.c:200:10: style: The scope of the variable 'data' can be reduced. [variableScope]
  float *data, min[3], max[3] /*, loc[3], size[3] */;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mball.c:201:7: style: The scope of the variable 'tot' can be reduced. [variableScope]
  int tot;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\material.c:549:15: style: The scope of the variable 'matarar' can be reduced. [variableScope]
  Material ***matarar, **ma_p;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mball_tessellate.c:454:7: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
  cur = process->indices[process->curindex++];
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mball_tessellate.c:601:21: style: The scope of the variable 'count' can be reduced. [variableScope]
  int i, index = 0, count, indexar[8];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mball_tessellate.c:1016:14: style: The scope of the variable 'dens' can be reduced. [variableScope]
  float tmp, dens;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mball_tessellate.c:1058:7: style: The scope of the variable 'n' can be reduced. [variableScope]
  int n;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mball_tessellate.c:1386:13: style: The scope of the variable 'dl' can be reduced. [variableScope]
  DispList *dl;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mball_tessellate.c:1387:16: style: The scope of the variable 'a' can be reduced. [variableScope]
  unsigned int a;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mball_tessellate.c:1191:23: style: Variable 'zero_size' is assigned a value that is never used. [unreadVariable]
  int obnr, zero_size = 0;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh.c:1070:18: style: The scope of the variable 'corner_indices' can be reduced. [variableScope]
      static int corner_indices[4] = {1, 2, 0, 3};
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh.c:1082:18: style: The scope of the variable 'corner_indices' can be reduced. [variableScope]
      static int corner_indices[4] = {2, 3, 0, 1};
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_convert.c:77:18: style: The scope of the variable 'allloop' can be reduced. [variableScope]
  MLoop *mloop, *allloop;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_convert.c:79:16: style: The scope of the variable 'nors' can be reduced. [variableScope]
  const float *nors, *verts;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_convert.c:79:23: style: The scope of the variable 'verts' can be reduced. [variableScope]
  const float *nors, *verts;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_convert.c:80:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, *index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_convert.c:977:27: style: Variable 'remapped_curve.bevobj' is assigned a value that is never used. [unreadVariable]
    remapped_curve.bevobj = &bevel_object;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_convert.c:985:29: style: Variable 'remapped_curve.taperobj' is assigned a value that is never used. [unreadVariable]
    remapped_curve.taperobj = &taper_object;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_mapping.c:126:28: style: The scope of the variable 'lastv' can be reduced. [variableScope]
    UvMapVert *iterv, *v, *lastv, *next;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_mapping.c:127:18: style: The scope of the variable 'uv' can be reduced. [variableScope]
    const float *uv, *uv2;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_mapping.c:1081:7: style: The scope of the variable 'num_pidx' can be reduced. [variableScope]
  int num_pidx, num_lidx;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_mapping.c:1081:17: style: The scope of the variable 'num_lidx' can be reduced. [variableScope]
  int num_pidx, num_lidx;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_merge.c:56:39: style: The scope of the variable 'vert_target' can be reduced. [variableScope]
  int vert_source, first_vert_source, vert_target;
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_merge.c:58:65: style: The scope of the variable 'i_loop_target_adjusted' can be reduced. [variableScope]
  int i_loop_target, i_loop_target_start, i_loop_target_offset, i_loop_target_adjusted;
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_merge.c:419:13: style: The scope of the variable 'i_poly' can be reduced. [variableScope]
        int i_poly, v_target;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_merge.c:420:14: style: The scope of the variable 'found' can be reduced. [variableScope]
        bool found = false;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:847:11: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      e2l = edge_to_loops[ml_curr->e];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:1231:17: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    e2lfan_curr = edge_to_loops[mlfan_curr->e];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:1388:17: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    e2lfan_curr = edge_to_loops[mlfan_curr->e];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:1464:27: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      const int *e2l_curr = edge_to_loops[ml_curr->e];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:1465:27: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      const int *e2l_prev = edge_to_loops[ml_prev->e];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3062:7: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      ML_TO_MF(0, 1, 2);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3067:7: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      ML_TO_MF_QUAD();
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3121:27: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
        unsigned int *tri = tris[j];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3122:14: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
        lidx = lindices[mface_index];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3336:27: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
        unsigned int *tri = tris[j];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_convert.c:170:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (totedge_new) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_convert.c:162:7: note: First condition
  if (totedge_new) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_convert.c:170:7: note: Second condition
  if (totedge_new) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:152:16: style: The scope of the variable 'mf' can be reduced. [variableScope]
  const MFace *mf;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:153:16: style: The scope of the variable 'mp' can be reduced. [variableScope]
  const MPoly *mp;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:242:10: style: The scope of the variable 'lnors_weighted' can be reduced. [variableScope]
  float(*lnors_weighted)[3] = data->lnors_weighted;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:840:10: style: The scope of the variable 'e2l' can be reduced. [variableScope]
    int *e2l;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:1015:10: style: The scope of the variable 'clnors_data' can be reduced. [variableScope]
  short(*clnors_data)[2] = common_data->clnors_data;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:1428:7: style: The scope of the variable 'ml_curr_index' can be reduced. [variableScope]
  int ml_curr_index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:1429:7: style: The scope of the variable 'ml_prev_index' can be reduced. [variableScope]
  int ml_prev_index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:2426:9: style: The scope of the variable 'tri_area' can be reduced. [variableScope]
  float tri_area;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:2547:9: style: The scope of the variable 'poly_area' can be reduced. [variableScope]
  float poly_area;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:2582:9: style: The scope of the variable 'poly_volume' can be reduced. [variableScope]
  float poly_volume;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:2755:11: style: The scope of the variable 'texface' can be reduced. [variableScope]
  MTFace *texface;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:2790:20: style: The scope of the variable 'lof' can be reduced. [variableScope]
    OrigSpaceLoop *lof;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:2923:10: style: The scope of the variable 'ftangents' can be reduced. [variableScope]
  float(*ftangents)[4] = NULL;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:2926:7: style: The scope of the variable 'findex' can be reduced. [variableScope]
  int findex, j;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:2926:15: style: The scope of the variable 'j' can be reduced. [variableScope]
  int findex, j;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:2927:14: style: The scope of the variable 'pidx' can be reduced. [variableScope]
  const int *pidx;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:2928:17: style: The scope of the variable 'lidx' can be reduced. [variableScope]
  unsigned int(*lidx)[4];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3377:11: style: The scope of the variable 'texface' can be reduced. [variableScope]
  MTFace *texface;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3379:13: style: The scope of the variable 'mloopcol' can be reduced. [variableScope]
  MLoopCol *mloopcol;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3380:12: style: The scope of the variable 'mloopuv' can be reduced. [variableScope]
  MLoopUV *mloopuv;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3432:12: style: The scope of the variable 'disps' can be reduced. [variableScope]
    float(*disps)[3] = fd->disps;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3666:19: style: The scope of the variable 'co_b' can be reduced. [variableScope]
    float *co_a, *co_b;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_evaluate.c:3399:14: style: Variable 'mloopuv' is assigned a value that is never used. [unreadVariable]
      mloopuv++;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_remap.c:976:13: style: The scope of the variable 'sources_num' can be reduced. [variableScope]
        int sources_num = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_remap.c:1144:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_remap.c:1389:16: style: The scope of the variable 'custom_nors_dst' can be reduced. [variableScope]
        short(*custom_nors_dst)[2] = CustomData_get_layer(ldata_dst, CD_CUSTOMLOOPNORMAL);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_remap.c:2214:9: style: The scope of the variable 'tmp_co' can be reduced. [variableScope]
  float tmp_co[3], tmp_no[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_remap.c:2214:20: style: The scope of the variable 'tmp_no' can be reduced. [variableScope]
  float tmp_co[3], tmp_no[3];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_remap.c:2342:13: style: The scope of the variable 'sources_num' can be reduced. [variableScope]
        int sources_num = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_validate.c:570:13: style: The scope of the variable 'v1' can be reduced. [variableScope]
        int v1, v2; /* v1 is prev loop vert idx, v2 is current loop one. */
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_validate.c:570:17: style: The scope of the variable 'v2' can be reduced. [variableScope]
        int v1, v2; /* v1 is prev loop vert idx, v2 is current loop one. */
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_validate.c:1527:16: style: The scope of the variable 'med_orig' can be reduced. [variableScope]
  MEdge *med, *med_orig;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_validate.c:1531:7: style: The scope of the variable 'med_index' can be reduced. [variableScope]
  int med_index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_validate.c:1035:17: style: Variable 'is_valid' is assigned a value that is never used. [unreadVariable]
  bool is_valid = true;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_validate.c:1042:12: style: Variable 'is_valid' is assigned a value that is never used. [unreadVariable]
  is_valid &= BKE_mesh_validate_all_customdata(&me->vdata,
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\mesh_validate.c:1055:12: style: Variable 'is_valid' is assigned a value that is never used. [unreadVariable]
  is_valid &= BKE_mesh_validate_arrays(me,
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\movieclip.c:372:8: style: The scope of the variable 'str' can be reduced. [variableScope]
  char str[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\movieclip.c:423:10: style: The scope of the variable 'name' can be reduced. [variableScope]
    char name[FILE_MAX], head[FILE_MAX], tail[FILE_MAX];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:535:19: style: The scope of the variable 'md' can be reduced. [variableScope]
  MDisps *mdisp, *md;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:593:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1057:41: style: The scope of the variable 'mask' can be reduced. [variableScope]
        float mat[3][3], disp[3], d[3], mask;
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1578:20: style: The scope of the variable 'mdisps2' can be reduced. [variableScope]
  MDisps *mdisps, *mdisps2;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1580:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, j, k;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1580:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j, k;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1580:13: style: The scope of the variable 'k' can be reduced. [variableScope]
  int i, j, k;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1777:7: style: The scope of the variable 'fmid' can be reduced. [variableScope]
  int fmid;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1778:7: style: The scope of the variable 'emid13' can be reduced. [variableScope]
  int emid13, emid14, emid23, emid24;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1778:15: style: The scope of the variable 'emid14' can be reduced. [variableScope]
  int emid13, emid14, emid23, emid24;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1778:23: style: The scope of the variable 'emid23' can be reduced. [variableScope]
  int emid13, emid14, emid23, emid24;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1778:31: style: The scope of the variable 'emid24' can be reduced. [variableScope]
  int emid13, emid14, emid23, emid24;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1919:7: style: The scope of the variable 'crossedgelen' can be reduced. [variableScope]
  int crossedgelen;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1920:7: style: The scope of the variable 's' can be reduced. [variableScope]
  int s, x, tottri, totquad;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1920:13: style: The scope of the variable 'tottri' can be reduced. [variableScope]
  int s, x, tottri, totquad;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\multires.c:1920:21: style: The scope of the variable 'totquad' can be reduced. [variableScope]
  int s, x, tottri, totquad;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1731:23: warning: Either the condition 'ns' is redundant or there is possible null pointer dereference: ns. [nullPointerRedundantCheck]
      nls->blendin = *ns - nls->start;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1727:17: note: Assuming that condition 'ns' is not redundant
    if (((ps && ns) && (*ps > *ns)) || (ps)) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1731:23: note: Null pointer dereference
      nls->blendin = *ns - nls->start;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_deform.c:363:18: style: The scope of the variable 'dvert' can be reduced. [variableScope]
    MDeformVert *dvert;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1744:35: warning: Either the condition 'ne' is redundant or there is possible null pointer dereference: ne. [nullPointerRedundantCheck]
      nls->blendout = nls->end - *ne;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1740:17: note: Assuming that condition 'ne' is not redundant
    if (((pe && ne) && (*pe > *ne)) || (pe)) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1744:35: note: Null pointer dereference
      nls->blendout = nls->end - *ne;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_deform.c:379:13: style: The scope of the variable 'bp' can be reduced. [variableScope]
    BPoint *bp;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1890:3: warning: Either the condition 'strip!=NULL' is redundant or there is possible null pointer dereference: strip. [nullPointerRedundantCheck]
  strip->flag &= ~(NLASTRIP_FLAG_SELECT | NLASTRIP_FLAG_ACTIVE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1878:20: note: Assuming that condition 'strip!=NULL' is not redundant
  BLI_assert(strip != NULL);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1877:27: note: Assignment 'strip=BKE_nlastrip_new(adt->action)', assigned value is 0
  strip = BKE_nlastrip_new(adt->action);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1890:3: note: Null pointer dereference
  strip->flag &= ~(NLASTRIP_FLAG_SELECT | NLASTRIP_FLAG_ACTIVE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_deform.c:381:9: style: The scope of the variable 'a' can be reduced. [variableScope]
    int a, tot;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1896:3: warning: Either the condition 'strip!=NULL' is redundant or there is possible null pointer dereference: strip. [nullPointerRedundantCheck]
  strip->flag |= NLASTRIP_FLAG_SYNC_LENGTH;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1878:20: note: Assuming that condition 'strip!=NULL' is not redundant
  BLI_assert(strip != NULL);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1877:27: note: Assignment 'strip=BKE_nlastrip_new(adt->action)', assigned value is 0
  strip = BKE_nlastrip_new(adt->action);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1896:3: note: Null pointer dereference
  strip->flag |= NLASTRIP_FLAG_SYNC_LENGTH;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_deform.c:381:12: style: The scope of the variable 'tot' can be reduced. [variableScope]
    int a, tot;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_deform.c:671:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:172:18: style: The scope of the variable 'cs_d' can be reduced. [variableScope]
  NlaStrip *cs, *cs_d;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:225:21: style: The scope of the variable 'strip_d' can be reduced. [variableScope]
  NlaStrip *strip, *strip_d;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:256:19: style: The scope of the variable 'nlt_d' can be reduced. [variableScope]
  NlaTrack *nlt, *nlt_d;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:362:13: style: The scope of the variable 'nlt' can be reduced. [variableScope]
  NlaTrack *nlt;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1396:13: style: The scope of the variable 'ns' can be reduced. [variableScope]
  NlaStrip *ns;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1264:18: style: Variable 'offset' is assigned a value that is never used. [unreadVariable]
    float offset = 0.0f;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\nla.c:1313:18: style: Variable 'offset' is assigned a value that is never used. [unreadVariable]
    float offset = 0.0f;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:891:9: style: Variable 'a' is reassigned a value before the old one has been used. [redundantAssignment]
      a = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:881:12: note: a is assigned
          a++;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:891:9: note: a is overwritten
      a = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:488:11: style: The scope of the variable 'ob' can be reduced. [variableScope]
  Object *ob;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:593:9: style: The scope of the variable 'f_no' can be reduced. [variableScope]
  float f_no[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:741:16: style: The scope of the variable 'dob' can be reduced. [variableScope]
  DupliObject *dob;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:747:21: style: The scope of the variable 'cache' can be reduced. [variableScope]
  ParticleCacheKey *cache;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:749:9: style: The scope of the variable 'tmat' can be reduced. [variableScope]
  float tmat[4][4], mat[4][4], pamat[4][4], size = 0.0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:749:21: style: The scope of the variable 'mat' can be reduced. [variableScope]
  float tmat[4][4], mat[4][4], pamat[4][4], size = 0.0;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:749:32: style: The scope of the variable 'pamat' can be reduced. [variableScope]
  float tmat[4][4], mat[4][4], pamat[4][4], size = 0.0;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:749:45: style: The scope of the variable 'size' can be reduced. [variableScope]
  float tmat[4][4], mat[4][4], pamat[4][4], size = 0.0;
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:750:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, b, hair = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:750:10: style: The scope of the variable 'b' can be reduced. [variableScope]
  int a, b, hair = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_dupli.c:750:13: style: The scope of the variable 'hair' can be reduced. [variableScope]
  int a, b, hair = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_facemap.c:87:20: style: The scope of the variable 'fmapn' can be reduced. [variableScope]
  bFaceMap *fmap, *fmapn;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_facemap.c:196:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:454:14: warning: Either the condition 'view_layer!=NULL' is redundant or there is possible null pointer dereference: view_layer. [nullPointerRedundantCheck]
  BLI_assert(view_layer->object_bases_array != NULL);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:453:25: note: Assuming that condition 'view_layer!=NULL' is not redundant
  BLI_assert(view_layer != NULL);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:452:39: note: Assignment 'view_layer=BLI_findlink(&scene->view_layers,view_layer_index)', assigned value is 0
  ViewLayer *view_layer = BLI_findlink(&scene->view_layers, view_layer_index);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:454:14: note: Null pointer dereference
  BLI_assert(view_layer->object_bases_array != NULL);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:456:42: warning: Either the condition 'view_layer!=NULL' is redundant or there is possible null pointer dereference: view_layer. [nullPointerRedundantCheck]
  BLI_assert(base_index < MEM_allocN_len(view_layer->object_bases_array) / sizeof(Base *));
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:453:25: note: Assuming that condition 'view_layer!=NULL' is not redundant
  BLI_assert(view_layer != NULL);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:452:39: note: Assignment 'view_layer=BLI_findlink(&scene->view_layers,view_layer_index)', assigned value is 0
  ViewLayer *view_layer = BLI_findlink(&scene->view_layers, view_layer_index);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:456:42: note: Null pointer dereference
  BLI_assert(base_index < MEM_allocN_len(view_layer->object_bases_array) / sizeof(Base *));
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:457:16: warning: Either the condition 'view_layer!=NULL' is redundant or there is possible null pointer dereference: view_layer. [nullPointerRedundantCheck]
  Base *base = view_layer->object_bases_array[base_index];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:453:25: note: Assuming that condition 'view_layer!=NULL' is not redundant
  BLI_assert(view_layer != NULL);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:452:39: note: Assignment 'view_layer=BLI_findlink(&scene->view_layers,view_layer_index)', assigned value is 0
  ViewLayer *view_layer = BLI_findlink(&scene->view_layers, view_layer_index);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:457:16: note: Null pointer dereference
  Base *base = view_layer->object_bases_array[base_index];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:495:16: warning: Either the condition 'base_orig!=NULL' is redundant or there is possible null pointer dereference: base_orig. [nullPointerRedundantCheck]
    BLI_assert(base_orig->object != NULL);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:494:26: note: Assuming that condition 'base_orig!=NULL' is not redundant
    BLI_assert(base_orig != NULL);
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:493:27: note: Assignment 'base_orig=base->base_orig', assigned value is 0
    Base *base_orig = base->base_orig;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:495:16: note: Null pointer dereference
    BLI_assert(base_orig->object != NULL);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:496:5: warning: Either the condition 'base_orig!=NULL' is redundant or there is possible null pointer dereference: base_orig. [nullPointerRedundantCheck]
    base_orig->flag = base->flag;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:494:26: note: Assuming that condition 'base_orig!=NULL' is not redundant
    BLI_assert(base_orig != NULL);
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:493:27: note: Assignment 'base_orig=base->base_orig', assigned value is 0
    Base *base_orig = base->base_orig;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object_update.c:496:5: note: Null pointer dereference
    base_orig->flag = base->flag;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\node.c:2429:13: style: Redundant initialization for 'own_index'. The initialized value is overwritten before it is read. [redundantInitialization]
  own_index = ntree->cur_index++;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\node.c:2416:17: note: own_index is initialized
  int own_index = ntree->cur_index++;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\node.c:2429:13: note: own_index is overwritten
  own_index = ntree->cur_index++;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\node.c:511:18: style: The scope of the variable 'nt' can be reduced. [variableScope]
  bNodeTreeType *nt;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\node.c:560:14: style: The scope of the variable 'nt' can be reduced. [variableScope]
  bNodeType *nt;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\node.c:634:20: style: The scope of the variable 'st' can be reduced. [variableScope]
  bNodeSocketType *st;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\node.c:2610:34: style: The scope of the variable 'identifier' can be reduced. [variableScope]
    char base[MAX_ID_NAME + 64], identifier[MAX_ID_NAME + 64], name[MAX_ID_NAME + 64],
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\node.c:2610:64: style: The scope of the variable 'name' can be reduced. [variableScope]
    char base[MAX_ID_NAME + 64], identifier[MAX_ID_NAME + 64], name[MAX_ID_NAME + 64],
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\node.c:2611:9: style: The scope of the variable 'description' can be reduced. [variableScope]
        description[MAX_ID_NAME + 64];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:69:31: warning: Either the condition 'group!=NULL' is redundant or there is possible null pointer dereference: tse_group. [nullPointerRedundantCheck]
  int min_allocated = MAX2(1, tse_group->allocated / 2);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:182:20: note: Assuming that condition 'group!=NULL' is not redundant
  BLI_assert(group != NULL);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:180:37: note: Assignment 'group=BLI_ghash_lookup(treehash,elem)', assigned value is 0
  TseGroup *group = BLI_ghash_lookup(treehash, elem);
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:188:30: note: Calling function 'tse_group_remove_element', 1st argument 'group' value is 0
    tse_group_remove_element(group, elem);
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:69:31: note: Null pointer dereference
  int min_allocated = MAX2(1, tse_group->allocated / 2);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:70:14: warning: Either the condition 'group!=NULL' is redundant or there is possible null pointer dereference: tse_group. [nullPointerRedundantCheck]
  BLI_assert(tse_group->allocated == 1 || (tse_group->allocated % 2) == 0);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:182:20: note: Assuming that condition 'group!=NULL' is not redundant
  BLI_assert(group != NULL);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:180:37: note: Assignment 'group=BLI_ghash_lookup(treehash,elem)', assigned value is 0
  TseGroup *group = BLI_ghash_lookup(treehash, elem);
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:188:30: note: Calling function 'tse_group_remove_element', 1st argument 'group' value is 0
    tse_group_remove_element(group, elem);
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:70:14: note: Null pointer dereference
  BLI_assert(tse_group->allocated == 1 || (tse_group->allocated % 2) == 0);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:72:3: warning: Either the condition 'group!=NULL' is redundant or there is possible null pointer dereference: tse_group. [nullPointerRedundantCheck]
  tse_group->size--;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:182:20: note: Assuming that condition 'group!=NULL' is not redundant
  BLI_assert(group != NULL);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:180:37: note: Assignment 'group=BLI_ghash_lookup(treehash,elem)', assigned value is 0
  TseGroup *group = BLI_ghash_lookup(treehash, elem);
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:188:30: note: Calling function 'tse_group_remove_element', 1st argument 'group' value is 0
    tse_group_remove_element(group, elem);
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:72:3: note: Null pointer dereference
  tse_group->size--;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:73:14: warning: Either the condition 'group!=NULL' is redundant or there is possible null pointer dereference: tse_group. [nullPointerRedundantCheck]
  BLI_assert(tse_group->size >= 0);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:182:20: note: Assuming that condition 'group!=NULL' is not redundant
  BLI_assert(group != NULL);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:180:37: note: Assignment 'group=BLI_ghash_lookup(treehash,elem)', assigned value is 0
  TseGroup *group = BLI_ghash_lookup(treehash, elem);
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:188:30: note: Calling function 'tse_group_remove_element', 1st argument 'group' value is 0
    tse_group_remove_element(group, elem);
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:73:14: note: Null pointer dereference
  BLI_assert(tse_group->size >= 0);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:183:7: warning: Either the condition 'group!=NULL' is redundant or there is possible null pointer dereference: group. [nullPointerRedundantCheck]
  if (group->size <= 1) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:182:20: note: Assuming that condition 'group!=NULL' is not redundant
  BLI_assert(group != NULL);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:180:37: note: Assignment 'group=BLI_ghash_lookup(treehash,elem)', assigned value is 0
  TseGroup *group = BLI_ghash_lookup(treehash, elem);
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\outliner_treehash.c:183:7: note: Null pointer dereference
  if (group->size <= 1) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object.c:4220:83: style: Same expression in both branches of ternary operator. [duplicateExpressionTernary]
      Mesh *me_eval = ob->runtime.mesh_deform_eval ? ob->runtime.mesh_deform_eval :
                                                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:56:21: style: The scope of the variable 'seek' can be reduced. [variableScope]
  int oldseek = -1, seek = 0;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:190:13: style: The scope of the variable 'filelen' can be reduced. [variableScope]
  int file, filelen;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:192:9: style: The scope of the variable 'data' can be reduced. [variableScope]
  void *data;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:301:13: style: The scope of the variable 'number' can be reduced. [variableScope]
  int file, number;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object.c:1584:15: style: The scope of the variable 'matarar' can be reduced. [variableScope]
  Material ***matarar;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:563:8: style: The scope of the variable 'localname' can be reduced. [variableScope]
  char localname[FILE_MAX], absname[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object.c:2378:9: style: The scope of the variable 'vec' can be reduced. [variableScope]
  float vec[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:563:29: style: The scope of the variable 'absname' can be reduced. [variableScope]
  char localname[FILE_MAX], absname[FILE_MAX];
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\object.c:2496:12: style: The scope of the variable 'co' can be reduced. [variableScope]
    float(*co)[3] = dl ? (float(*)[3])dl->verts : NULL;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:564:9: style: The scope of the variable 'newname' can be reduced. [variableScope]
  char *newname;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:589:8: style: The scope of the variable 'localname' can be reduced. [variableScope]
  char localname[FILE_MAX], absname[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:589:29: style: The scope of the variable 'absname' can be reduced. [variableScope]
  char localname[FILE_MAX], absname[FILE_MAX];
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:590:9: style: The scope of the variable 'newname' can be reduced. [variableScope]
  char *newname;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:672:8: style: The scope of the variable 'localname' can be reduced. [variableScope]
  char localname[FILE_MAX], absname[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:672:29: style: The scope of the variable 'absname' can be reduced. [variableScope]
  char localname[FILE_MAX], absname[FILE_MAX];
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\packedFile.c:673:9: style: The scope of the variable 'newfilepath' can be reduced. [variableScope]
  char *newfilepath;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:1306:5: style: Redundant initialization for 'f'. The initialized value is overwritten before it is read. [redundantInitialization]
  f = frame - och->start; /* shift to 0 based */
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:1301:9: note: f is initialized
  int f = frame;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:1306:5: note: f is overwritten
  f = frame - och->start; /* shift to 0 based */
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:69:9: style: The scope of the variable 'y' can be reduced. [variableScope]
  float y;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:1339:9: style: The scope of the variable 'progress' can be reduced. [variableScope]
  float progress;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:442:18: error: Uninitialized variable: exp_param1 [uninitvar]
    init_complex(exp_param1, 0.0, omega(o->_k[i * (1 + o->_N / 2) + j], o->_depth) * t);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:443:18: error: Uninitialized variable: exp_param2 [uninitvar]
    init_complex(exp_param2, 0.0, -omega(o->_k[i * (1 + o->_N / 2) + j], o->_depth) * t);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:446:18: error: Uninitialized variable: conj_param [uninitvar]
    conj_complex(conj_param, o->_h0_minus[i * o->_N + j]);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:482:20: error: Uninitialized variable: mul_param [uninitvar]
      init_complex(mul_param, -scale, 0);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:481:20: error: Uninitialized variable: minus_i [uninitvar]
      init_complex(minus_i, 0.0, -1.0);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:513:20: error: Uninitialized variable: mul_param [uninitvar]
      init_complex(mul_param, -scale, 0);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:512:20: error: Uninitialized variable: minus_i [uninitvar]
      init_complex(minus_i, 0.0, -1.0);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:542:20: error: Uninitialized variable: mul_param [uninitvar]
      init_complex(mul_param, -1, 0);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:577:20: error: Uninitialized variable: mul_param [uninitvar]
      init_complex(mul_param, -1, 0);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:612:20: error: Uninitialized variable: mul_param [uninitvar]
      init_complex(mul_param, -1, 0);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:639:20: error: Uninitialized variable: mul_param [uninitvar]
      init_complex(mul_param, 0.0, -1.0);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:660:20: error: Uninitialized variable: mul_param [uninitvar]
      init_complex(mul_param, 0.0, -1.0);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:927:20: error: Uninitialized variable: r1r2 [uninitvar]
      init_complex(r1r2, r1, r2);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\ocean.c:1163:12: style: Variable 'f' is assigned a value that is never used. [unreadVariable]
  int i, f = 0;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\paint.c:413:15: style: The scope of the variable 'sima' can be reduced. [variableScope]
  SpaceImage *sima;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\paint.c:448:15: style: The scope of the variable 'sima' can be reduced. [variableScope]
  SpaceImage *sima;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\paint.c:1197:11: style: The scope of the variable 'rotation' can be reduced. [variableScope]
    float rotation;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\paint.c:1694:12: style: The scope of the variable 'j' can be reduced. [variableScope]
    int i, j;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\paint.c:871:8: style: Variable 't' is assigned a value that is never used. [unreadVariable]
      t++;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:187:30: warning: Either the condition 'ptex' is redundant or there is possible null pointer dereference: ptex. [nullPointerRedundantCheck]
  cut_time = (totkeys - 1) * ptex->length;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:179:7: note: Assuming that condition 'ptex' is not redundant
  if (ptex) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:187:30: note: Null pointer dereference
  cut_time = (totkeys - 1) * ptex->length;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:430:48: style: The scope of the variable 'q1' can be reduced. [variableScope]
  float kink[3] = {1.f, 0.f, 0.f}, par_vec[3], q1[4] = {1.f, 0.f, 0.f, 0.f};
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:160:16: style: Variable 'rough1' is assigned a value that is never used. [unreadVariable]
  float rough1 = part->rough1;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:161:16: style: Variable 'rough2' is assigned a value that is never used. [unreadVariable]
  float rough2 = part->rough2;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:162:19: style: Variable 'rough_end' is assigned a value that is never used. [unreadVariable]
  float rough_end = part->rough_end;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:182:12: style: Variable 'rough1' is assigned a value that is never used. [unreadVariable]
    rough1 *= ptex->rough1;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:183:12: style: Variable 'rough2' is assigned a value that is never used. [unreadVariable]
    rough2 *= ptex->rough2;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:184:15: style: Variable 'rough_end' is assigned a value that is never used. [unreadVariable]
    rough_end *= ptex->roughe;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_child.c:329:25: style: Variable 'mod' is not assigned a value. [unassignedVariable]
  ParticlePathModifier *mod;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:750:17: error: Array 'parent[10]' accessed at index 9998, which is out of bounds. [arrayIndexOutOfBounds]
      if (parent[w] >= 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:528:20: style: Condition 'rng_skip_tot>0' is always true [knownConditionTrueFalse]
  if (rng_skip_tot > 0) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:483:22: note: Assignment 'rng_skip_tot=3', assigned value is 3
  int rng_skip_tot = PSYS_RND_DIST_SKIP; /* count how many rng_* calls wont need skipping */
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:528:20: note: Condition 'rng_skip_tot>0' is always true
  if (rng_skip_tot > 0) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:771:20: style: Condition 'rng_skip_tot>0' is always true [knownConditionTrueFalse]
  if (rng_skip_tot > 0) { /* should never be below zero */
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:694:22: note: Assignment 'rng_skip_tot=3', assigned value is 3
  int rng_skip_tot = PSYS_RND_DIST_SKIP; /* count how many rng_* calls wont need skipping */
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:709:3: note: Compound assignment '-=', assigned value is 1
  rng_skip_tot -= 2;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:771:20: note: Condition 'rng_skip_tot>0' is always true
  if (rng_skip_tot > 0) { /* should never be below zero */
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:438:7: style: The scope of the variable 'mid' can be reduced. [variableScope]
  int mid, low = 0, high = n - 1;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:690:19: style: The scope of the variable 'co1' can be reduced. [variableScope]
  float orco1[3], co1[3], nor1[3];
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:690:27: style: The scope of the variable 'nor1' can be reduced. [variableScope]
  float orco1[3], co1[3], nor1[3];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:693:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:862:9: style: The scope of the variable 'p' can be reduced. [variableScope]
    int p, totchild = psys_get_tot_child(scene, psys, use_render_params);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:894:17: style: The scope of the variable 'pa' can be reduced. [variableScope]
  ParticleData *pa = 0, *tpars = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:905:9: style: The scope of the variable 'cur' can be reduced. [variableScope]
  float cur, maxweight = 0.0, tweight, totweight, inv_totweight, co[3], nor[3], orco[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:905:31: style: The scope of the variable 'tweight' can be reduced. [variableScope]
  float cur, maxweight = 0.0, tweight, totweight, inv_totweight, co[3], nor[3], orco[3];
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:905:73: style: The scope of the variable 'nor' can be reduced. [variableScope]
  float cur, maxweight = 0.0, tweight, totweight, inv_totweight, co[3], nor[3], orco[3];
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:527:27: style: Argument 'rng_skip_tot>=0' to function BLI_assert is always 1 [constArgument]
  BLI_assert(rng_skip_tot >= 0); /* should never be below zero */
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:483:22: note: Assignment 'rng_skip_tot=3', assigned value is 3
  int rng_skip_tot = PSYS_RND_DIST_SKIP; /* count how many rng_* calls wont need skipping */
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:527:27: note: Argument 'rng_skip_tot>=0' to function BLI_assert is always 1
  BLI_assert(rng_skip_tot >= 0); /* should never be below zero */
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_distribute.c:894:20: style: Variable 'pa' is assigned a value that is never used. [unreadVariable]
  ParticleData *pa = 0, *tpars = 0;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh_bmesh.c:1523:20: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      const int *t = node->bm_ortri[i];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh_bmesh.c:1628:20: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      const int *t = node->bm_ortri[i];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh_bmesh.c:2071:5: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
  i = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh_bmesh.c:2065:6: note: i is assigned
    i++;
     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh_bmesh.c:2071:5: note: i is overwritten
  i = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh_bmesh.c:1519:9: style: The scope of the variable 'nearest_vertex_co' can be reduced. [variableScope]
  float nearest_vertex_co[3] = {0.0f};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh.c:1909:16: portability: Assigning a pointer to an integer is not portable. [AssignmentAddressToInteger]
  *r_orco_tris = node->bm_ortri;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh.c:2112:27: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    const int *face_verts = node->face_vert_indices[i];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh.c:2401:27: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    const int *face_verts = node->face_vert_indices[i];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh_parallel.cc:49:3: warning: Member variable 'PBVHTask::userdata_chunk' is not initialized in the constructor. [uninitMemberVar]
  PBVHTask(const PBVHTask &other)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pbvh.c:1063:10: style: The scope of the variable 'vnors' can be reduced. [variableScope]
  float(*vnors)[3] = data->vnors;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4399:11: style: Condition 'totchild' is always true [knownConditionTrueFalse]
      if (totchild && part->childtype == PART_CHILD_FACES) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4379:12: note: Assuming that condition 'totchild' is not redundant
  else if (totchild) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4399:11: note: Condition 'totchild' is always true
      if (totchild && part->childtype == PART_CHILD_FACES) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4372:49: style: The expression 'edit == 0' is always true. [knownConditionTrueFalse]
          if (psys->lattice_deform_data && edit == 0) {
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4316:29: note: 'edit' is assigned value '0' here.
  short between = 0, edit = 0;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4372:49: note: The expression 'edit == 0' is always true.
          if (psys->lattice_deform_data && edit == 0) {
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:211:16: style: The scope of the variable 'totsaved' can be reduced. [variableScope]
  int totpart, totsaved = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:736:9: style: The scope of the variable 'fac' can be reduced. [variableScope]
  float fac, phasefac, nor[3] = {0, 0, 0}, loc[3], vel[3] = {0.0, 0.0, 0.0}, rot[4], q2[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:736:14: style: The scope of the variable 'phasefac' can be reduced. [variableScope]
  float fac, phasefac, nor[3] = {0, 0, 0}, loc[3], vel[3] = {0.0, 0.0, 0.0}, rot[4], q2[4];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:736:52: style: The scope of the variable 'vel' can be reduced. [variableScope]
  float fac, phasefac, nor[3] = {0, 0, 0}, loc[3], vel[3] = {0.0, 0.0, 0.0}, rot[4], q2[4];
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:736:86: style: The scope of the variable 'q2' can be reduced. [variableScope]
  float fac, phasefac, nor[3] = {0, 0, 0}, loc[3], vel[3] = {0.0, 0.0, 0.0}, rot[4], q2[4];
                                                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:737:39: style: The scope of the variable 'vec' can be reduced. [variableScope]
  float r_vel[3], r_ave[3], r_rot[4], vec[3], p_vel[3] = {0.0, 0.0, 0.0};
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:737:47: style: The scope of the variable 'p_vel' can be reduced. [variableScope]
  float r_vel[3], r_ave[3], r_rot[4], vec[3], p_vel[3] = {0.0, 0.0, 0.0};
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:738:9: style: The scope of the variable 'x_vec' can be reduced. [variableScope]
  float x_vec[3] = {1.0, 0.0, 0.0}, utan[3] = {0.0, 1.0, 0.0}, vtan[3] = {0.0, 0.0, 1.0},
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:739:9: style: The scope of the variable 'rot_vec' can be reduced. [variableScope]
        rot_vec[3] = {0.0, 0.0, 0.0};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:251:13: style: The scope of the variable 'buf' can be reduced. [variableScope]
  LinkData *buf;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:253:18: style: The scope of the variable 'totbufkey' can be reduced. [variableScope]
  int i, totkey, totbufkey;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:864:9: style: The scope of the variable 't' can be reduced. [variableScope]
  float t[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1326:23: style: The scope of the variable 's1' can be reduced. [variableScope]
  float e1[3], e2[3], s1, s2, t1, t2;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1326:27: style: The scope of the variable 's2' can be reduced. [variableScope]
  float e1[3], e2[3], s1, s2, t1, t2;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1326:31: style: The scope of the variable 't1' can be reduced. [variableScope]
  float e1[3], e2[3], s1, s2, t1, t2;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1326:35: style: The scope of the variable 't2' can be reduced. [variableScope]
  float e1[3], e2[3], s1, s2, t1, t2;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1327:10: style: The scope of the variable 'uv1' can be reduced. [variableScope]
  float *uv1, *uv2, *uv3, *uv4;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:740:9: style: The scope of the variable 'q_phase' can be reduced. [variableScope]
  float q_phase[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1328:30: style: The scope of the variable 'n4' can be reduced. [variableScope]
  float n1[3], n2[3], n3[3], n4[3];
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1192:38: style: The scope of the variable 'kpsys' can be reduced. [variableScope]
  ParticleSystem *psys = sim->psys, *kpsys;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1330:10: style: The scope of the variable 'o1' can be reduced. [variableScope]
  float *o1, *o2, *o3, *o4;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1222:7: style: The scope of the variable 'keyed_flag' can be reduced. [variableScope]
  int keyed_flag = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1330:15: style: The scope of the variable 'o2' can be reduced. [variableScope]
  float *o1, *o2, *o3, *o4;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1326:9: style: The scope of the variable 'totpart' can be reduced. [variableScope]
    int totpart = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1330:20: style: The scope of the variable 'o3' can be reduced. [variableScope]
  float *o1, *o2, *o3, *o4;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1367:9: style: The scope of the variable 'totpart' can be reduced. [variableScope]
    int totpart = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1330:25: style: The scope of the variable 'o4' can be reduced. [variableScope]
  float *o1, *o2, *o3, *o4;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1606:17: style: The scope of the variable 'pa1' can be reduced. [variableScope]
  ParticleData *pa1, *pa2;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1447:9: style: The scope of the variable 'v40' can be reduced. [variableScope]
  float v40, v41;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1606:23: style: The scope of the variable 'pa2' can be reduced. [variableScope]
  ParticleData *pa1, *pa2;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1447:14: style: The scope of the variable 'v41' can be reduced. [variableScope]
  float v40, v41;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1609:9: style: The scope of the variable 'h' can be reduced. [variableScope]
  float h, d, Rij[3], rij, Lij;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1464:33: style: The scope of the variable 'cp4' can be reduced. [variableScope]
  const char *cp1, *cp2, *cp3, *cp4;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1609:12: style: The scope of the variable 'd' can be reduced. [variableScope]
  float h, d, Rij[3], rij, Lij;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\report.c:106:11: style: The scope of the variable 'report' can be reduced. [variableScope]
  Report *report;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1752:9: style: The scope of the variable 'tmpnor' can be reduced. [variableScope]
  float tmpnor[3], mapfw[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1609:23: style: The scope of the variable 'rij' can be reduced. [variableScope]
  float h, d, Rij[3], rij, Lij;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\report.c:107:7: style: The scope of the variable 'len' can be reduced. [variableScope]
  int len;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:1898:9: style: The scope of the variable 'mtex' can be reduced. [variableScope]
  MTex *mtex;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1609:28: style: The scope of the variable 'Lij' can be reduced. [variableScope]
  float h, d, Rij[3], rij, Lij;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\report.c:134:11: style: The scope of the variable 'ds' can be reduced. [variableScope]
  DynStr *ds;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2038:16: style: The scope of the variable 'pd' can be reduced. [variableScope]
  PartDeflect *pd;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1763:17: style: The scope of the variable 'pa' can be reduced. [variableScope]
  ParticleData *pa, *npa;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\report.c:135:11: style: The scope of the variable 'report' can be reduced. [variableScope]
  Report *report;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2039:10: style: The scope of the variable 'cu' can be reduced. [variableScope]
  Curve *cu;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1763:22: style: The scope of the variable 'npa' can be reduced. [variableScope]
  ParticleData *pa, *npa;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\report.c:170:11: style: The scope of the variable 'ds' can be reduced. [variableScope]
  DynStr *ds;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2040:22: style: The scope of the variable 'data' can be reduced. [variableScope]
  GuideEffectorData *data;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1764:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\report.c:194:11: style: The scope of the variable 'ds' can be reduced. [variableScope]
  DynStr *ds;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2043:9: style: The scope of the variable 'guidevec' can be reduced. [variableScope]
  float guidevec[4], guidedir[3], rot2[4], temp[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1765:18: style: The scope of the variable 'offset' can be reduced. [variableScope]
  float flow[3], offset[3], dist;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2043:22: style: The scope of the variable 'guidedir' can be reduced. [variableScope]
  float guidevec[4], guidedir[3], rot2[4], temp[3];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1799:9: style: The scope of the variable 'q' can be reduced. [variableScope]
  float q, u, rij, dv[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2043:35: style: The scope of the variable 'rot2' can be reduced. [variableScope]
  float guidevec[4], guidedir[3], rot2[4], temp[3];
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1799:15: style: The scope of the variable 'rij' can be reduced. [variableScope]
  float q, u, rij, dv[3];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2043:44: style: The scope of the variable 'temp' can be reduced. [variableScope]
  float guidevec[4], guidedir[3], rot2[4], temp[3];
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1822:17: style: The scope of the variable 'npa' can be reduced. [variableScope]
  ParticleData *npa;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2044:9: style: The scope of the variable 'guidetime' can be reduced. [variableScope]
  float guidetime, radius, weight, angle, totstrength = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2009:17: style: The scope of the variable 'npa' can be reduced. [variableScope]
  ParticleData *npa;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2044:36: style: The scope of the variable 'angle' can be reduced. [variableScope]
  float guidetime, radius, weight, angle, totstrength = 0.0f;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2342:11: style: The scope of the variable 'angle' can be reduced. [variableScope]
    float angle;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2045:9: style: The scope of the variable 'vec_to_point' can be reduced. [variableScope]
  float vec_to_point[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2468:9: style: The scope of the variable 'v' can be reduced. [variableScope]
  float v[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2477:21: style: The scope of the variable 'eff_vec' can be reduced. [variableScope]
  float eff_length, eff_vec[3], weight[4];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2658:13: style: The scope of the variable 'u' can be reduced. [variableScope]
  float ct, u, v;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2487:12: style: The scope of the variable 'needupdate' can be reduced. [variableScope]
    int w, needupdate;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2658:16: style: The scope of the variable 'v' can be reduced. [variableScope]
  float ct, u, v;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2488:20: style: The scope of the variable 'wsum' can be reduced. [variableScope]
    float foffset, wsum = 0.f;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2706:9: style: The scope of the variable 'ct' can be reduced. [variableScope]
  float ct;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2733:11: style: The scope of the variable 'par_co' can be reduced. [variableScope]
    float par_co[3];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2753:9: style: The scope of the variable 'ct' can be reduced. [variableScope]
  float ct;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2885:19: style: The scope of the variable 'angle' can be reduced. [variableScope]
  float cosangle, angle, tangent[3], normal[3], q[4];
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2936:11: style: The scope of the variable 'distance' can be reduced. [variableScope]
    float distance, nor[3], dot;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2885:38: style: The scope of the variable 'normal' can be reduced. [variableScope]
  float cosangle, angle, tangent[3], normal[3], q[4];
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2936:21: style: The scope of the variable 'nor' can be reduced. [variableScope]
    float distance, nor[3], dot;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2885:49: style: The scope of the variable 'q' can be reduced. [variableScope]
  float cosangle, angle, tangent[3], normal[3], q[4];
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2936:29: style: The scope of the variable 'dot' can be reduced. [variableScope]
    float distance, nor[3], dot;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:3231:9: style: The scope of the variable 't' can be reduced. [variableScope]
  float t, time = 0.0f, keytime = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:3559:12: style: The scope of the variable 'key' can be reduced. [variableScope]
  HairKey *key, *root;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:3231:12: style: The scope of the variable 'time' can be reduced. [variableScope]
  float t, time = 0.0f, keytime = 0.0f;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:3817:9: style: The scope of the variable 'birthtime' can be reduced. [variableScope]
  float birthtime, dietime;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:3439:9: style: The scope of the variable 'det' can be reduced. [variableScope]
  float det, w1, w2, d1[2], d2[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:3817:20: style: The scope of the variable 'dietime' can be reduced. [variableScope]
  float birthtime, dietime;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:3439:14: style: The scope of the variable 'w1' can be reduced. [variableScope]
  float det, w1, w2, d1[2], d2[2];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:4094:15: style: The scope of the variable 'dietime' can be reduced. [variableScope]
  float disp, dietime;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:3439:18: style: The scope of the variable 'w2' can be reduced. [variableScope]
  float det, w1, w2, d1[2], d2[2];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:4566:19: style: The scope of the variable 'dt_frac' can be reduced. [variableScope]
    float t_frac, dt_frac;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:3861:10: style: The scope of the variable 'mf' can be reduced. [variableScope]
  MFace *mf;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:4826:13: style: The scope of the variable 'hcfra' can be reduced. [variableScope]
      float hcfra = 0.0f;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4316:22: style: The scope of the variable 'edit' can be reduced. [variableScope]
  short between = 0, edit = 0;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4739:7: style: The scope of the variable 'num' can be reduced. [variableScope]
  int num;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4822:33: style: The scope of the variable 'side' can be reduced. [variableScope]
  float loc[3], nor[3], vec[3], side[3], len;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4823:9: style: The scope of the variable 'xvec' can be reduced. [variableScope]
  float xvec[3] = {-1.0, 0.0, 0.0}, nmat[3][3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4823:37: style: The scope of the variable 'nmat' can be reduced. [variableScope]
  float xvec[3] = {-1.0, 0.0, 0.0}, nmat[3][3];
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1211:52: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  psys->totkeyed *= psys->flag & PSYS_KEYED_TIMING ? 1 : psys->part->keyed_loops;
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4919:14: style: The scope of the variable 'hkey' can be reduced. [variableScope]
    HairKey *hkey;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1422:47: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  float pa_mass = (part->flag & PART_SIZEMASS ? part->mass * pa->size : part->mass);
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1804:55: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
                     (fluid->flag & SPH_FAC_VISCOSITY ? fluid->viscosity_omega : 1.f);
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1811:60: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
                             (fluid->flag & SPH_FAC_RADIUS ? 4.0f * pa->size : 1.0f);
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1814:77: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  float rest_density = fluid->rest_density * (fluid->flag & SPH_FAC_DENSITY ? 4.77f : 1.f);
                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1816:58: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
                      (fluid->flag & SPH_FAC_REST_LENGTH ? 2.588f * pa->size : 1.f);
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1820:63: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
                             (fluid->flag & SPH_FAC_REPULSION ? fluid->stiffness_k : 1.f);
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2004:77: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  float rest_density = fluid->rest_density * (fluid->flag & SPH_FAC_DENSITY ? 4.77f : 1.0f);
                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2020:70: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  interaction_radius = fluid->radius * (fluid->flag & SPH_FAC_RADIUS ? 4.0f * pa->size : 1.0f);
                                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2100:60: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
                             (fluid->flag & SPH_FAC_RADIUS ? 4.0f * psys[0]->part->size : 1.0f);
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2182:60: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
                             (fluid->flag & SPH_FAC_RADIUS ? 4.0f * psys[0]->part->size : 1.0f);
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2204:60: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  float pa_mass = part->mass * (part->flag & PART_SIZEMASS ? pa->size : 1.f);
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:156:7: style: Condition '!error' is always true [knownConditionTrueFalse]
  if (!error && !fread(&pf->totpoint, sizeof(unsigned int), 1, pf->fp)) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:153:15: note: Assignment 'error=0', assigned value is 0
  int error = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:156:7: note: Condition '!error' is always true
  if (!error && !fread(&pf->totpoint, sizeof(unsigned int), 1, pf->fp)) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2057:19: warning: Possible null pointer dereference: pid [nullPointer]
  Library *lib = (pid->ob) ? pid->ob->id.lib : NULL;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3785:16: note: Calling function 'ptcache_path', 1st argument 'NULL' value is 0
  ptcache_path(NULL, path);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2057:19: note: Null pointer dereference
  Library *lib = (pid->ob) ? pid->ob->id.lib : NULL;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2063:7: warning: Possible null pointer dereference: pid [nullPointer]
  if (pid->cache->flag & PTCACHE_EXTERNAL) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3785:16: note: Calling function 'ptcache_path', 1st argument 'NULL' value is 0
  ptcache_path(NULL, path);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2063:7: note: Null pointer dereference
  if (pid->cache->flag & PTCACHE_EXTERNAL) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:211:25: style: Variable 'totsaved' is assigned a value that is never used. [unreadVariable]
  int totpart, totsaved = 0;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1222:18: style: Variable 'keyed_flag' is assigned a value that is never used. [unreadVariable]
  int keyed_flag = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1243:11: style: Variable 'key' is assigned a value that is never used. [unreadVariable]
      key += totkeys;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:1372:16: style: Variable 'totpart' is assigned a value that is never used. [unreadVariable]
        totpart++;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:2579:6: style: Variable 'd1' is assigned a value that is never used. [unreadVariable]
  d1 = 0.f;
     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:201:5: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    PTCACHE_DATA_TO(data, BPHYS_DATA_LOCATION, 0, bp->pos);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:202:5: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    PTCACHE_DATA_TO(data, BPHYS_DATA_VELOCITY, 0, bp->vec);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:336:5: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    PTCACHE_DATA_TO(data, BPHYS_DATA_SIZE, 0, &pa->size);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:341:5: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    PTCACHE_DATA_TO(data, BPHYS_DATA_TIMES, 0, &times);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:348:5: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    PTCACHE_DATA_TO(data, BPHYS_DATA_BOIDS, 0, &boid->data);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:2475:32: style: Variable 'par_rot' is assigned a value that is never used. [unreadVariable]
  float *cpa_fuv = 0, *par_rot = 0, rot[4];
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:3436:18: style: Variable 'hair_index' is assigned a value that is never used. [unreadVariable]
      hair_index += pa->totkey + 1;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:534:5: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    PTCACHE_DATA_TO(data, BPHYS_DATA_LOCATION, 0, vert->x);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:535:5: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    PTCACHE_DATA_TO(data, BPHYS_DATA_VELOCITY, 0, vert->v);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:536:5: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    PTCACHE_DATA_TO(data, BPHYS_DATA_XCONST, 0, vert->xconst);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:1495:9: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        PTCACHE_DATA_TO(data, BPHYS_DATA_LOCATION, 0, rbo->pos);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:1496:9: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        PTCACHE_DATA_TO(data, BPHYS_DATA_ROTATION, 0, rbo->orn);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:3231:17: style: Variable 'time' is assigned a value that is never used. [unreadVariable]
  float t, time = 0.0f, keytime = 0.0f;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:4826:19: style: Variable 'hcfra' is assigned a value that is never used. [unreadVariable]
      float hcfra = 0.0f;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:3231:33: style: Variable 'keytime' is assigned a value that is never used. [unreadVariable]
  float t, time = 0.0f, keytime = 0.0f;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:1371:7: style: The scope of the variable 'cache_compress' can be reduced. [variableScope]
  int cache_compress = 1;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:3358:11: style: Variable 'cache' is assigned a value that is never used. [unreadVariable]
    cache = edit->pathcache = psys_alloc_path_cache_buffers(
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2100:9: style: The scope of the variable 'idname' can be reduced. [variableScope]
  char *idname;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2213:10: style: The scope of the variable 'in_len' can be reduced. [variableScope]
  size_t in_len;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4307:20: style: Variable 'par' is assigned a value that is never used. [unreadVariable]
  ParticleKey *par = 0, keys[4], tstate;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2217:18: style: The scope of the variable 'in' can be reduced. [variableScope]
  unsigned char *in;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle.c:4450:12: style: Variable 'pa' is assigned a value that is never used. [unreadVariable]
        pa = 0;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2263:10: style: The scope of the variable 'out_len' can be reduced. [variableScope]
  size_t out_len = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2435:18: style: The scope of the variable 'mid' can be reduced. [variableScope]
    unsigned int mid, low = 0, high = pm->totpoint - 1;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2633:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i, error = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2723:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i, error = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3178:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, error = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3351:16: style: The scope of the variable 'len' can be reduced. [variableScope]
  unsigned int len; /* store the length of the string */
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3355:8: style: The scope of the variable 'dir' can be reduced. [variableScope]
  DIR *dir;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3356:18: style: The scope of the variable 'de' can be reduced. [variableScope]
  struct dirent *de;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3357:8: style: The scope of the variable 'path' can be reduced. [variableScope]
  char path[MAX_PTCACHE_PATH];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3359:8: style: The scope of the variable 'path_full' can be reduced. [variableScope]
  char path_full[MAX_PTCACHE_FILE];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3360:8: style: The scope of the variable 'ext' can be reduced. [variableScope]
  char ext[MAX_PTCACHE_PATH];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3544:9: style: The scope of the variable 'time' can be reduced. [variableScope]
  float time, nexttime;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3544:15: style: The scope of the variable 'nexttime' can be reduced. [variableScope]
  float time, nexttime;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:3782:8: style: The scope of the variable 'path_full' can be reduced. [variableScope]
  char path_full[MAX_PTCACHE_PATH];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:4443:13: style: The scope of the variable 'old_data' can be reduced. [variableScope]
      float old_data[14];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\pointcache.c:2502:40: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    pm->cur[i] = data_types & (1 << i) ? (char *)pm->data[i] + index * ptcache_data_size[i] : NULL;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:1438:9: style: Condition 'rbw' is always true [knownConditionTrueFalse]
    if (rbw && rbw->objects) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:1435:7: note: Assuming that condition 'rbw' is not redundant
  if (rbw) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:1438:9: note: Condition 'rbw' is always true
    if (rbw && rbw->objects) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:419:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:739:9: style: The scope of the variable 'loc' can be reduced. [variableScope]
  float loc[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:740:9: style: The scope of the variable 'rot' can be reduced. [variableScope]
  float rot[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:893:9: style: The scope of the variable 'loc' can be reduced. [variableScope]
  float loc[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:894:9: style: The scope of the variable 'rot' can be reduced. [variableScope]
  float rot[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:895:9: style: The scope of the variable 'lin_lower' can be reduced. [variableScope]
  float lin_lower;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:896:9: style: The scope of the variable 'lin_upper' can be reduced. [variableScope]
  float lin_upper;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:897:9: style: The scope of the variable 'ang_lower' can be reduced. [variableScope]
  float ang_lower;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:898:9: style: The scope of the variable 'ang_upper' can be reduced. [variableScope]
  float ang_upper;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:1432:17: style: The scope of the variable 'rbc' can be reduced. [variableScope]
  RigidBodyCon *rbc;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:1433:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\rigidbody.c:1982:9: style: The scope of the variable 'timestep' can be reduced. [variableScope]
  float timestep;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\scene.c:2190:19: warning: Either the condition 'depsgraph_scene_ptr!=NULL' is redundant or there is possible null pointer dereference: depsgraph_scene_ptr. [nullPointerRedundantCheck]
      BLI_assert(*depsgraph_scene_ptr == NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\scene.c:2189:38: note: Assuming that condition 'depsgraph_scene_ptr!=NULL' is not redundant
      BLI_assert(depsgraph_scene_ptr != NULL);
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\scene.c:2187:62: note: Assignment 'depsgraph_scene_ptr=scene_get_depsgraph_p(bmain,scene,view_layer,true,false)', assigned value is 0
      Depsgraph **depsgraph_scene_ptr = scene_get_depsgraph_p(
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\scene.c:2190:19: note: Null pointer dereference
      BLI_assert(*depsgraph_scene_ptr == NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\scene.c:2199:8: warning: Either the condition 'depsgraph_scene_ptr!=NULL' is redundant or there is possible null pointer dereference: depsgraph_scene_ptr. [nullPointerRedundantCheck]
      *depsgraph_scene_ptr = depsgraph;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\scene.c:2189:38: note: Assuming that condition 'depsgraph_scene_ptr!=NULL' is not redundant
      BLI_assert(depsgraph_scene_ptr != NULL);
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\scene.c:2187:62: note: Assignment 'depsgraph_scene_ptr=scene_get_depsgraph_p(bmain,scene,view_layer,true,false)', assigned value is 0
      Depsgraph **depsgraph_scene_ptr = scene_get_depsgraph_p(
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\scene.c:2199:8: note: Null pointer dereference
      *depsgraph_scene_ptr = depsgraph;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\scene.c:806:8: style: The scope of the variable 'run_again' can be reduced. [variableScope]
  bool run_again = true;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\scene.c:778:10: style: Variable 'ob' is assigned a value that is never used. [unreadVariable]
      ob = base->object;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\seqcache.c:715:12: portability: Casting from const float * to const unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
  rval ^= *(const unsigned int *)&key->nfra;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:4263:14: style: The scope of the variable 'r' can be reduced. [variableScope]
      double r, dispProb = (double)part->disp / 100.0;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\shrinkwrap.c:1330:9: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  float tmp[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\particle_system.c:4425:15: style: Variable 'totpart' is assigned a value that is never used. [unreadVariable]
      totpart = psys->totpart = part->totpart = activeParts;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\seqeffects.c:2081:16: style: Variable 'output' is reassigned a value before the old one has been used. [redundantAssignment]
        output = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\seqeffects.c:2043:14: note: output is assigned
      output = 1.0f - facf0;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\seqeffects.c:2081:16: note: output is overwritten
        output = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\seqeffects.c:2881:18: style: The scope of the variable 'rect' can be reduced. [variableScope]
  unsigned char *rect;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\seqeffects.c:3370:25: style: The scope of the variable 'val' can be reduced. [variableScope]
  float *gausstab, sum, val;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sound.c:1049:9: style: The scope of the variable 'quat' can be reduced. [variableScope]
  float quat[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\seqeffects.c:1990:15: style: Variable 'facf0' is assigned a value that is never used. [unreadVariable]
        facf0 = 1.0f - facf0; /* Go the other direction */
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\seqeffects.c:2101:12: style: Variable 'yo' is assigned a value that is never used. [unreadVariable]
        yo = xo;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\seqeffects.c:2104:12: style: Variable 'xo' is assigned a value that is never used. [unreadVariable]
        xo = yo;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\shrinkwrap.c:936:5: error: printf format string requires 6 parameters but only 4 are given. [wrongPrintfScanfArgNum]
    printf(
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\shrinkwrap.c:962:3: error: printf format string requires 7 parameters but only 3 are given. [wrongPrintfScanfArgNum]
  printf("EDGE %d (%.3f,%.3f,%.3f) (%.3f,%.3f,%.3f)\n",
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\seqeffects.c:2644:8: style: Variable 'swap' is assigned a value that is never used. [unreadVariable]
  swap = temp;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\shrinkwrap.c:1047:3: error: printf format string requires 12 parameters but only 6 are given. [wrongPrintfScanfArgNum]
  printf("TRIANGLE %d (%.3f,%.3f,%.3f) (%.3f,%.3f,%.3f) (%.3f,%.3f,%.3f) %g %g\n",
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:498:5: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
    ccdm = NULL;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1788:21: style: Condition 'mindistedge>0.0f' is always true [knownConditionTrueFalse]
    if (mindistedge > 0.0f) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1635:25: note: Assignment 'mindistedge=1000.0f', assigned value is 1000.0
      mindistedge = 1000.0f, outerforceaccu[3], innerforceaccu[3], facedist,
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1788:21: note: Condition 'mindistedge>0.0f' is always true
    if (mindistedge > 0.0f) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:3690:11: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
          state->scene_parents = &scene_parent;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:582:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, result = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:599:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:644:29: style: The scope of the variable 'v0' can be reduced. [variableScope]
  int a, b, c, notthis = 0, v0;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:781:13: style: The scope of the variable 'akku_count' can be reduced. [variableScope]
  int a, b, akku_count;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:782:9: style: The scope of the variable 'min' can be reduced. [variableScope]
  float min, max, akku;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:782:14: style: The scope of the variable 'max' can be reduced. [variableScope]
  float min, max, akku;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:782:19: style: The scope of the variable 'akku' can be reduced. [variableScope]
  float min, max, akku;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:832:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:882:13: style: The scope of the variable 'key' can be reduced. [variableScope]
  SBVertex *key;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:923:9: style: The scope of the variable 'a' can be reduced. [variableScope]
    int a;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:924:16: style: The scope of the variable 'bp' can be reduced. [variableScope]
    BodyPoint *bp;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:997:11: style: The scope of the variable 'ob' can be reduced. [variableScope]
  Object *ob;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1157:11: style: The scope of the variable 'ob' can be reduced. [variableScope]
  Object *ob;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1262:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1263:22: style: The scope of the variable 'choke' can be reduced. [variableScope]
  float damp = 0.0f, choke = 1.0f;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1264:9: style: The scope of the variable 'tune' can be reduced. [variableScope]
  float tune = -10.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1265:9: style: The scope of the variable 'feedback' can be reduced. [variableScope]
  float feedback[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1445:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1472:39: style: The scope of the variable 'force' can be reduced. [variableScope]
          float vel[3], sp[3], pr[3], force[3];
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1473:20: style: The scope of the variable 'windfactor' can be reduced. [variableScope]
          float f, windfactor = 0.25f;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:1634:58: style: The scope of the variable 'coledge' can be reduced. [variableScope]
      avel[3] = {0.0, 0.0, 0.0}, vv1[3], vv2[3], vv3[3], coledge[3] = {0.0f, 0.0f, 0.0f},
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2013:13: style: The scope of the variable 'compare' can be reduced. [variableScope]
      float compare;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2054:13: style: The scope of the variable 'auxvect' can be reduced. [variableScope]
      float auxvect[3];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2055:13: style: The scope of the variable 'velgoal' can be reduced. [variableScope]
      float velgoal[3];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2137:15: style: The scope of the variable 'cfforce' can be reduced. [variableScope]
        float cfforce[3], defforce[3] = {0.0f, 0.0f, 0.0f}, vel[3] = {0.0f, 0.0f, 0.0f},
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2139:15: style: The scope of the variable 'kd' can be reduced. [variableScope]
        float kd = 1.0f;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2333:53: style: The scope of the variable 'cm' can be reduced. [variableScope]
  float dx[3] = {0}, dv[3], aabbmin[3], aabbmax[3], cm[3] = {0.0f, 0.0f, 0.0f};
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2595:14: style: The scope of the variable 'bp1' can be reduced. [variableScope]
  BodyPoint *bp1, *bp2;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2595:20: style: The scope of the variable 'bp2' can be reduced. [variableScope]
  BodyPoint *bp1, *bp2;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2596:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2597:9: style: The scope of the variable 'b' can be reduced. [variableScope]
  float b, l, r;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2597:12: style: The scope of the variable 'l' can be reduced. [variableScope]
  float b, l, r;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subdiv_ccg.c:182:64: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
    BKE_subdiv_eval_final_point(subdiv, ptex_face_index, u, v, (float *)element);
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2597:15: style: The scope of the variable 'r' can be reduced. [variableScope]
  float b, l, r;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subdiv_ccg.c:189:44: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                                           (float *)element,
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2648:14: style: The scope of the variable 'bp' can be reduced. [variableScope]
  BodyPoint *bp;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subdiv_ccg.c:193:64: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
    BKE_subdiv_eval_limit_point(subdiv, ptex_face_index, u, v, (float *)element);
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2649:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2650:9: style: The scope of the variable 'scale' can be reduced. [variableScope]
  float scale = 1.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:2684:15: style: The scope of the variable 'bs' can be reduced. [variableScope]
  BodySpring *bs;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\softbody.c:3371:9: style: The scope of the variable 'forcetime' can be reduced. [variableScope]
  float forcetime;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subdiv_ccg.c:102:18: style: Variable 'layer_offset' is assigned a value that is never used. [unreadVariable]
    layer_offset += sizeof(float) * 3;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:817:7: style: The scope of the variable 'min' can be reduced. [variableScope]
  int min, max;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:817:12: style: The scope of the variable 'max' can be reduced. [variableScope]
  int min, max;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:912:8: style: The scope of the variable 'path' can be reduced. [variableScope]
  char path[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:962:13: style: The scope of the variable 'i' can be reduced. [variableScope]
        int i = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:1683:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:1898:14: style: The scope of the variable 'sanim' can be reduced. [variableScope]
  StripAnim *sanim;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:3254:9: style: The scope of the variable 'tloc' can be reduced. [variableScope]
  float tloc[2], tscale, tangle;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:3799:8: style: The scope of the variable 'use_preprocess' can be reduced. [variableScope]
  bool use_preprocess = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:3800:8: style: The scope of the variable 'is_proxy_image' can be reduced. [variableScope]
  bool is_proxy_image = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:4515:20: style: The scope of the variable 'offset' can be reduced. [variableScope]
  int left, start, offset;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:4851:7: style: The scope of the variable 'seqmute' can be reduced. [variableScope]
  int seqmute;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:5310:12: style: The scope of the variable 'ibuf' can be reduced. [variableScope]
    ImBuf *ibuf;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\sequencer.c:5493:12: style: The scope of the variable 'j' can be reduced. [variableScope]
    size_t j = 0;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subdiv_deform.c:91:39: style: The scope of the variable 'D' can be reduced. [variableScope]
  float dummy_P[3], dPdu[3], dPdv[3], D[3];
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subdiv_mesh.c:474:39: style: The scope of the variable 'D' can be reduced. [variableScope]
  float dummy_P[3], dPdu[3], dPdv[3], D[3];
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text_suggestions.c:102:7: style: The scope of the variable 'cmp' can be reduced. [variableScope]
  int cmp;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text_suggestions.c:154:7: style: The scope of the variable 'cmp' can be reduced. [variableScope]
  int cmp, top = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\texture.c:170:9: style: The scope of the variable 'smat' can be reduced. [variableScope]
  float smat[4][4], rmat[4][4], tmat[4][4], proj[4][4], size[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\texture.c:170:21: style: The scope of the variable 'rmat' can be reduced. [variableScope]
  float smat[4][4], rmat[4][4], tmat[4][4], proj[4][4], size[3];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\texture.c:170:33: style: The scope of the variable 'tmat' can be reduced. [variableScope]
  float smat[4][4], rmat[4][4], tmat[4][4], proj[4][4], size[3];
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\texture.c:170:45: style: The scope of the variable 'proj' can be reduced. [variableScope]
  float smat[4][4], rmat[4][4], tmat[4][4], proj[4][4], size[3];
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\texture.c:170:57: style: The scope of the variable 'size' can be reduced. [variableScope]
  float smat[4][4], rmat[4][4], tmat[4][4], proj[4][4], size[3];
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text.c:670:7: style: Condition '!tmp' is always true [knownConditionTrueFalse]
  if (!tmp) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text.c:661:10: note: Assuming that condition 'tmp' is not redundant
  while (tmp) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text.c:670:7: note: Condition '!tmp' is always true
  if (!tmp) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text.c:834:7: style: The scope of the variable 'tabsize' can be reduced. [variableScope]
  int tabsize = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text.c:1623:7: style: The scope of the variable 'l' can be reduced. [variableScope]
  int l = 0, len;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text.c:1625:13: style: The scope of the variable 'add' can be reduced. [variableScope]
  TextLine *add;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text.c:1770:13: style: The scope of the variable 'textline' can be reduced. [variableScope]
  TextLine *textline;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text.c:1623:9: style: Variable 'l' is assigned a value that is never used. [unreadVariable]
  int l = 0, len;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text.c:1787:18: style: Variable 'c' is assigned a value that is never used. [unreadVariable]
  unsigned int c = '\n';
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\text.c:1834:18: style: Variable 'c' is assigned a value that is never used. [unreadVariable]
  unsigned int c = '\n';
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_detect.c:100:25: style: The scope of the variable 'track' can be reduced. [variableScope]
    MovieTrackingTrack *track;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:2017:12: style: Redundant initialization for 'mlooptri'. The initialized value is overwritten before it is read. [redundantInitialization]
  mlooptri = dm->looptris.array_wip;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:2012:22: note: mlooptri is initialized
  MLoopTri *mlooptri = dm->looptris.array;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:2017:12: note: mlooptri is overwritten
  mlooptri = dm->looptris.array_wip;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:596:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x, y, i, j;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:596:10: style: The scope of the variable 'y' can be reduced. [variableScope]
  int x, y, i, j;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:596:13: style: The scope of the variable 'i' can be reduced. [variableScope]
  int x, y, i, j;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:596:16: style: The scope of the variable 'j' can be reduced. [variableScope]
  int x, y, i, j;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:597:13: style: The scope of the variable 'w1' can be reduced. [variableScope]
  float *w, w1, w2, w4, fac, fac2, fx, fy;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:597:17: style: The scope of the variable 'w2' can be reduced. [variableScope]
  float *w, w1, w2, w4, fac, fac2, fx, fy;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:597:21: style: The scope of the variable 'w4' can be reduced. [variableScope]
  float *w, w1, w2, w4, fac, fac2, fx, fy;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:597:25: style: The scope of the variable 'fac' can be reduced. [variableScope]
  float *w, w1, w2, w4, fac, fac2, fx, fy;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:597:30: style: The scope of the variable 'fac2' can be reduced. [variableScope]
  float *w, w1, w2, w4, fac, fac2, fx, fy;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:597:36: style: The scope of the variable 'fx' can be reduced. [variableScope]
  float *w, w1, w2, w4, fac, fac2, fx, fy;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:597:40: style: The scope of the variable 'fy' can be reduced. [variableScope]
  float *w, w1, w2, w4, fac, fac2, fx, fy;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:680:41: style: The scope of the variable 'ml' can be reduced. [variableScope]
  MLoop *mloop = dm->getLoopArray(dm), *ml;
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\subsurf_ccg.c:1055:12: style: The scope of the variable 'y' can be reduced. [variableScope]
    int x, y, grid /*, numVerts*/;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking.c:2123:14: style: Array index 'a' is used before limits check. [arrayIndexThenCheck]
  if (cameras[a].framenr != framenr && a < reconstruction->camnr - 1) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:427:30: warning: Either the condition 'stabilization_base!=NULL' is redundant or there is possible null pointer dereference: track_ref. [nullPointerRedundantCheck]
  add_v2_v2v2(result_offset, track_ref->stabilization_offset_base, marker->pos);
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:571:39: note: Assuming that condition 'stabilization_base!=NULL' is not redundant
        BLI_assert(stabilization_base != NULL);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:569:88: note: Assignment 'stabilization_base=access_stabilization_baseline_data(ctx,track)', assigned value is 0
        TrackStabilizationBase *stabilization_base = access_stabilization_baseline_data(ctx,
                                                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:574:34: note: Calling function 'translation_contribution', 1st argument 'stabilization_base' value is 0
        translation_contribution(stabilization_base, marker, offset);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:427:30: note: Null pointer dereference
  add_v2_v2v2(result_offset, track_ref->stabilization_offset_base, marker->pos);
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:479:13: warning: Either the condition 'stabilization_base!=NULL' is redundant or there is possible null pointer dereference: track_ref. [nullPointerRedundantCheck]
  mul_m2_v2(track_ref->stabilization_rotation_base, pos);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:609:39: note: Assuming that condition 'stabilization_base!=NULL' is not redundant
        BLI_assert(stabilization_base != NULL);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:607:88: note: Assignment 'stabilization_base=access_stabilization_baseline_data(ctx,track)', assigned value is 0
        TrackStabilizationBase *stabilization_base = access_stabilization_baseline_data(ctx,
                                                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:612:13: note: Calling function 'rotation_contribution', 1st argument 'stabilization_base' value is 0
            stabilization_base, marker, aspect, r_pivot, &rotation, &scale);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:479:13: note: Null pointer dereference
  mul_m2_v2(track_ref->stabilization_rotation_base, pos);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:489:25: warning: Either the condition 'stabilization_base!=NULL' is redundant or there is possible null pointer dereference: track_ref. [nullPointerRedundantCheck]
  *result_scale = len * track_ref->stabilization_scale_base;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:609:39: note: Assuming that condition 'stabilization_base!=NULL' is not redundant
        BLI_assert(stabilization_base != NULL);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:607:88: note: Assignment 'stabilization_base=access_stabilization_baseline_data(ctx,track)', assigned value is 0
        TrackStabilizationBase *stabilization_base = access_stabilization_baseline_data(ctx,
                                                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:612:13: note: Calling function 'rotation_contribution', 1st argument 'stabilization_base' value is 0
            stabilization_base, marker, aspect, r_pivot, &rotation, &scale);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:489:25: note: Null pointer dereference
  *result_scale = len * track_ref->stabilization_scale_base;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:862:15: warning: Either the condition 'local_data!=NULL' is redundant or there is possible null pointer dereference: local_data. [nullPointerRedundantCheck]
  sub_v2_v2v2(local_data->stabilization_offset_base, average_translation, marker->pos);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:859:25: note: Assuming that condition 'local_data!=NULL' is not redundant
  BLI_assert(local_data != NULL);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:853:74: note: Assignment 'local_data=access_stabilization_baseline_data(ctx,track)', assigned value is 0
  TrackStabilizationBase *local_data = access_stabilization_baseline_data(ctx, track);
                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:862:15: note: Null pointer dereference
  sub_v2_v2v2(local_data->stabilization_offset_base, average_translation, marker->pos);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:862:75: warning: Either the condition 'marker!=NULL' is redundant or there is possible null pointer dereference: marker. [nullPointerRedundantCheck]
  sub_v2_v2v2(local_data->stabilization_offset_base, average_translation, marker->pos);
                                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:858:21: note: Assuming that condition 'marker!=NULL' is not redundant
  BLI_assert(marker != NULL);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:854:62: note: Assignment 'marker=BKE_tracking_marker_get_exact(track,reference_frame)', assigned value is 0
  MovieTrackingMarker *marker = BKE_tracking_marker_get_exact(track, reference_frame);
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:862:75: note: Null pointer dereference
  sub_v2_v2v2(local_data->stabilization_offset_base, average_translation, marker->pos);
                                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:865:20: warning: Either the condition 'marker!=NULL' is redundant or there is possible null pointer dereference: marker. [nullPointerRedundantCheck]
  sub_v2_v2v2(pos, marker->pos, pivot);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:858:21: note: Assuming that condition 'marker!=NULL' is not redundant
  BLI_assert(marker != NULL);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:854:62: note: Assignment 'marker=BKE_tracking_marker_get_exact(track,reference_frame)', assigned value is 0
  MovieTrackingMarker *marker = BKE_tracking_marker_get_exact(track, reference_frame);
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:865:20: note: Null pointer dereference
  sub_v2_v2v2(pos, marker->pos, pivot);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:869:17: warning: Either the condition 'local_data!=NULL' is redundant or there is possible null pointer dereference: local_data. [nullPointerRedundantCheck]
  angle_to_mat2(local_data->stabilization_rotation_base, angle);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:859:25: note: Assuming that condition 'local_data!=NULL' is not redundant
  BLI_assert(local_data != NULL);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:853:74: note: Assignment 'local_data=access_stabilization_baseline_data(ctx,track)', assigned value is 0
  TrackStabilizationBase *local_data = access_stabilization_baseline_data(ctx, track);
                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:869:17: note: Null pointer dereference
  angle_to_mat2(local_data->stabilization_rotation_base, angle);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:873:3: warning: Either the condition 'local_data!=NULL' is redundant or there is possible null pointer dereference: local_data. [nullPointerRedundantCheck]
  local_data->stabilization_scale_base = expf(average_scale_step) / len;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:859:25: note: Assuming that condition 'local_data!=NULL' is not redundant
  BLI_assert(local_data != NULL);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:853:74: note: Assignment 'local_data=access_stabilization_baseline_data(ctx,track)', assigned value is 0
  TrackStabilizationBase *local_data = access_stabilization_baseline_data(ctx, track);
                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:873:3: note: Null pointer dereference
  local_data->stabilization_scale_base = expf(average_scale_step) / len;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:875:3: warning: Either the condition 'local_data!=NULL' is redundant or there is possible null pointer dereference: local_data. [nullPointerRedundantCheck]
  local_data->is_init_for_stabilization = true;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:859:25: note: Assuming that condition 'local_data!=NULL' is not redundant
  BLI_assert(local_data != NULL);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:853:74: note: Assignment 'local_data=access_stabilization_baseline_data(ctx,track)', assigned value is 0
  TrackStabilizationBase *local_data = access_stabilization_baseline_data(ctx, track);
                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:875:3: note: Null pointer dereference
  local_data->is_init_for_stabilization = true;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:881:21: warning: Either the condition 'ctx!=NULL' is redundant or there is possible null pointer dereference: ctx. [nullPointerRedundantCheck]
  MovieClip *clip = ctx->clip;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1260:18: note: Assuming that condition 'ctx!=NULL' is not redundant
  BLI_assert(ctx != NULL);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1259:62: note: Assignment 'ctx=initialize_stabilization_working_context(clip)', assigned value is 0
  StabContext *ctx = initialize_stabilization_working_context(clip);
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1261:25: note: Calling function 'initialize_all_tracks', 1st argument 'ctx' value is 0
  initialize_all_tracks(ctx, aspect);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:881:21: note: Null pointer dereference
  MovieClip *clip = ctx->clip;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:882:29: warning: Either the condition 'ctx!=NULL' is redundant or there is possible null pointer dereference: ctx. [nullPointerRedundantCheck]
  MovieTracking *tracking = ctx->tracking;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1260:18: note: Assuming that condition 'ctx!=NULL' is not redundant
  BLI_assert(ctx != NULL);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1259:62: note: Assignment 'ctx=initialize_stabilization_working_context(clip)', assigned value is 0
  StabContext *ctx = initialize_stabilization_working_context(clip);
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1261:25: note: Calling function 'initialize_all_tracks', 1st argument 'ctx' value is 0
  initialize_all_tracks(ctx, aspect);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:882:29: note: Null pointer dereference
  MovieTracking *tracking = ctx->tracking;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1262:7: warning: Either the condition 'ctx!=NULL' is redundant or there is possible null pointer dereference: ctx. [nullPointerRedundantCheck]
  if (ctx->stab->flag & TRACKING_AUTOSCALE) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1260:18: note: Assuming that condition 'ctx!=NULL' is not redundant
  BLI_assert(ctx != NULL);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1259:62: note: Assignment 'ctx=initialize_stabilization_working_context(clip)', assigned value is 0
  StabContext *ctx = initialize_stabilization_working_context(clip);
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1262:7: note: Null pointer dereference
  if (ctx->stab->flag & TRACKING_AUTOSCALE) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\tracking_stabilize.c:1303:8: style: The scope of the variable 'do_compensate' can be reduced. [variableScope]
  bool do_compensate = true;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\unit.c:960:20: style: Variable 'ch' is assigned a value that is never used. [unreadVariable]
    const char *ch = str;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\workspace.c:315:20: style: The scope of the variable 'layout' can be reduced. [variableScope]
  WorkSpaceLayout *layout;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\volume.cc:171:12: error: Returning pointer that will be invalid when returning. [returnDanglingLifetime]
    return &entry;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\volume.cc:166:18: note: Assigned to reference.
    Entry &entry = (Entry &)*it;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\volume.cc:171:12: note: Address of variable taken here.
    return &entry;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\volume.cc:171:12: note: Returning pointer that will be invalid when returning.
    return &entry;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\volume.cc:238:3: style: Struct 'VolumeGrid' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  VolumeGrid(const VolumeFileCache::Entry &template_entry) : entry(NULL), is_loaded(false)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\volume.cc:244:3: style: Struct 'VolumeGrid' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  VolumeGrid(const openvdb::GridBase::Ptr &vdb) : vdb(vdb), entry(NULL), is_loaded(true)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\volume.cc:907:21: style: Variable 'grids' can be declared with const [constVariable]
  VolumeGridVector &grids = *volume->runtime.grids;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\volume.cc:1201:74: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (VolumeGridVector::iterator it = grids.begin(); it != grids.end(); it++) {
                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:127:18: style: Variable 'mh.start_movie' is reassigned a value before the old one has been used. [redundantAssignment]
  mh.start_movie = start_avi;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:118:18: note: mh.start_movie is assigned
  mh.start_movie = start_stub;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:127:18: note: mh.start_movie is overwritten
  mh.start_movie = start_avi;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:128:19: style: Variable 'mh.append_movie' is reassigned a value before the old one has been used. [redundantAssignment]
  mh.append_movie = append_avi;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:119:19: note: mh.append_movie is assigned
  mh.append_movie = append_stub;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:128:19: note: mh.append_movie is overwritten
  mh.append_movie = append_avi;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:129:16: style: Variable 'mh.end_movie' is reassigned a value before the old one has been used. [redundantAssignment]
  mh.end_movie = end_avi;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:120:16: note: mh.end_movie is assigned
  mh.end_movie = end_stub;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:129:16: note: mh.end_movie is overwritten
  mh.end_movie = end_avi;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:131:21: style: Variable 'mh.context_create' is reassigned a value before the old one has been used. [redundantAssignment]
  mh.context_create = context_create_avi;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:122:21: note: mh.context_create is assigned
  mh.context_create = context_create_stub;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:131:21: note: mh.context_create is overwritten
  mh.context_create = context_create_avi;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:132:19: style: Variable 'mh.context_free' is reassigned a value before the old one has been used. [redundantAssignment]
  mh.context_free = context_free_avi;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:123:19: note: mh.context_free is assigned
  mh.context_free = context_free_stub;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeavi.c:132:19: note: mh.context_free is overwritten
  mh.context_free = context_free_avi;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_dynstr.c:157:7: style: The scope of the variable 'retval' can be reduced. [variableScope]
  int retval;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_dynstr.c:223:7: style: The scope of the variable 'retval' can be reduced. [variableScope]
  int retval;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_dynstr.c:169:5: error: va_list 'args_cpy' used before va_start() was called. [va_list_usedBeforeStarted]
    va_copy(args_cpy, args);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_dynstr.c:170:46: error: va_list 'args_cpy' used before va_start() was called. [va_list_usedBeforeStarted]
    retval = vsnprintf(message, len, format, args_cpy);
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_dynstr.c:171:5: error: va_list 'args_cpy' used before va_start() was called. [va_list_usedBeforeStarted]
    va_end(args_cpy);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_filelist.c:124:7: style: The scope of the variable 'newnum' can be reduced. [variableScope]
  int newnum = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeffmpeg.c:220:7: style: Condition 'got_output' is always true [knownConditionTrueFalse]
  if (got_output) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeffmpeg.c:217:16: note: Assignment 'got_output=1', assigned value is 1
  got_output = 1;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeffmpeg.c:220:7: note: Condition 'got_output' is always true
  if (got_output) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeffmpeg.c:1175:7: style: The scope of the variable 'ret' can be reduced. [variableScope]
  int ret = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeffmpeg.c:1175:11: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
  int ret = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_dynstr.c:169:0: information: Skipping configuration '__va_copy' since the value of '__va_copy' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    va_copy(args_cpy, args);
^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_heap_simple.c:118:15: style: Variable '(*(struct HeapSimpleNode*)(tree_buf+(i))).ptr' is assigned a value that is never used. [unreadVariable]
  NODE(i).ptr = active_ptr;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_index_range.cc:42:25: warning: Identical condition 'min_required_size<=current_array_size', second condition is always false [identicalConditionAfterEarlyExit]
  if (min_required_size <= current_array_size) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_index_range.cc:36:25: note: If condition 'min_required_size<=current_array_size' is true, the function will return/exit
  if (min_required_size <= current_array_size) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_index_range.cc:42:25: note: Testing identical condition 'min_required_size<=current_array_size'
  if (min_required_size <= current_array_size) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_kdopbvh.c:108:1: error: There is an unknown macro here somewhere. Configuration is required. If BLI_STATIC_ASSERT is a macro then please configure it. [unknownMacro]
BLI_STATIC_ASSERT((sizeof(void *) == 8 && sizeof(BVHTree) <= 48) ||
^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:119:3: warning: Either the condition '(elem)!=NULL' is redundant or there is possible null pointer dereference: elem. [nullPointerRedundantCheck]
  elem->size = (offset_t)(((data_t *)mi->tail) - mi->data_curr);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:117:3: note: Assuming that condition '(elem)!=NULL' is not redundant
  ASAN_UNPOISON_MEMORY_REGION(elem, sizeof(BLI_memiter_elem));
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:115:28: note: Assignment 'elem=(struct BLI_memiter_elem*)mi->data_curr', assigned value is 0
  BLI_memiter_elem *elem = (BLI_memiter_elem *)mi->data_curr;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:119:3: note: Null pointer dereference
  elem->size = (offset_t)(((data_t *)mi->tail) - mi->data_curr);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:120:14: warning: Either the condition '(elem)!=NULL' is redundant or there is possible null pointer dereference: elem. [nullPointerRedundantCheck]
  BLI_assert(elem->size < 0);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:117:3: note: Assuming that condition '(elem)!=NULL' is not redundant
  ASAN_UNPOISON_MEMORY_REGION(elem, sizeof(BLI_memiter_elem));
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:115:28: note: Assignment 'elem=(struct BLI_memiter_elem*)mi->data_curr', assigned value is 0
  BLI_memiter_elem *elem = (BLI_memiter_elem *)mi->data_curr;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:120:14: note: Null pointer dereference
  BLI_assert(elem->size < 0);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:209:3: warning: Either the condition '(elem)!=NULL' is redundant or there is possible null pointer dereference: elem. [nullPointerRedundantCheck]
  elem->size = (offset_t)elem_size;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:207:3: note: Assuming that condition '(elem)!=NULL' is not redundant
  ASAN_UNPOISON_MEMORY_REGION(elem, sizeof(BLI_memiter_elem) + elem_size);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:205:28: note: Assignment 'elem=(struct BLI_memiter_elem*)mi->data_curr', assigned value is 0
  BLI_memiter_elem *elem = (BLI_memiter_elem *)mi->data_curr;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:209:3: note: Null pointer dereference
  elem->size = (offset_t)elem_size;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:222:10: warning: Either the condition '(elem)!=NULL' is redundant or there is possible null pointer dereference: elem. [nullPointerRedundantCheck]
  return elem->data;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:207:3: note: Assuming that condition '(elem)!=NULL' is not redundant
  ASAN_UNPOISON_MEMORY_REGION(elem, sizeof(BLI_memiter_elem) + elem_size);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:205:28: note: Assignment 'elem=(struct BLI_memiter_elem*)mi->data_curr', assigned value is 0
  BLI_memiter_elem *elem = (BLI_memiter_elem *)mi->data_curr;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\BLI_memiter.c:222:10: note: Null pointer dereference
  return elem->data;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\array_store.c:1310:16: style: Variable 'i_prev' is reassigned a value before the old one has been used. [redundantAssignment]
        i_prev = i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\array_store.c:1301:18: note: i_prev is assigned
          i_prev = i;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\array_store.c:1310:16: note: i_prev is overwritten
        i_prev = i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeffmpeg.c:220:7: style: Condition 'got_output' is always true [knownConditionTrueFalse]
  if (got_output) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeffmpeg.c:201:7: note: Assuming that condition '!got_output' is not redundant
  if (!got_output) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenkernel\intern\writeffmpeg.c:220:7: note: Condition 'got_output' is always true
  if (got_output) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\bitmap_draw_2d.c:313:19: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
  const int *co_a = verts[a[0]];
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\bitmap_draw_2d.c:314:19: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
  const int *co_b = verts[b[0]];
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\bitmap_draw_2d.c:331:10: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    co_a = verts[a[1]];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\bitmap_draw_2d.c:332:10: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    co_b = verts[b[1]];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\bitmap_draw_2d.c:381:14: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      int *s = span_y[span_y_len++];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\bitmap_draw_2d.c:421:20: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      const int *s = span_y[n->span_y_index];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\bitmap_draw_2d.c:487:22: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
        const int *s = span_y[node_x[i_src].span_y_index];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\convexhull_2d.c:109:55: style: Array index 'i' is used before limits check. [arrayIndexThenCheck]
    if (is_left(points[minmin], points[maxmin], points[i]) >= 0 && i < maxmin) {
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\convexhull_2d.c:135:39: style: Array index 'minmax' is used before limits check. [arrayIndexThenCheck]
    if (is_left(points[maxmax], points[minmax], points[i]) >= 0 && i > minmax) {
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\convexhull_2d.c:222:16: portability: Casting from float * to signed int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
  points_map = (int *)points_sort; /* abuse float array for temp storage */
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\boxpack_2d.c:294:8: style: The scope of the variable 'isect' can be reduced. [variableScope]
  bool isect;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\fileops.c:120:7: style: The scope of the variable 'readsize' can be reduced. [variableScope]
  int readsize, size, alloc_size = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\fileops.c:170:12: style: The scope of the variable 'have' can be reduced. [variableScope]
  unsigned have;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\freetypefont.c:59:16: style: The scope of the variable 'nu' can be reduced. [variableScope]
  struct Nurb *nu;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\freetypefont.c:67:9: style: The scope of the variable 'dx' can be reduced. [variableScope]
  float dx, dy;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\freetypefont.c:67:13: style: The scope of the variable 'dy' can be reduced. [variableScope]
  float dx, dy;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\fnmatch.c:164:19: style: Redundant initialization for 'cend'. The initialized value is overwritten before it is read. [redundantInitialization]
    cstart = cend = FOLD (cstart);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\fnmatch.c:155:36: note: cend is initialized
    register char cstart = c, cend = c;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\fnmatch.c:164:19: note: cend is overwritten
    cstart = cend = FOLD (cstart);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\freetypefont.c:68:7: style: The scope of the variable 'j' can be reduced. [variableScope]
  int j, k, l, l_first = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\freetypefont.c:68:10: style: The scope of the variable 'k' can be reduced. [variableScope]
  int j, k, l, l_first = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\freetypefont.c:68:13: style: The scope of the variable 'l' can be reduced. [variableScope]
  int j, k, l, l_first = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\freetypefont.c:68:16: style: The scope of the variable 'l_first' can be reduced. [variableScope]
  int j, k, l, l_first = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\fileops.c:1330:0: information: Skipping configuration 'MAXPATHLEN' since the value of 'MAXPATHLEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  char static_buf[MAXPATHLEN];
^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\fileops.c:1343:0: information: Skipping configuration 'MAXPATHLEN' since the value of 'MAXPATHLEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  size = MAXPATHLEN;
^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\hash_md5.c:248:12: style: Redundant initialization for 'A_save'. The initialized value is overwritten before it is read. [redundantInitialization]
    A_save = NULL;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\hash_md5.c:142:23: note: A_save is initialized
    md5_uint32 A_save = A;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\hash_md5.c:248:12: note: A_save is overwritten
    A_save = NULL;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\jitter_2d.c:37:21: style: The scope of the variable 'dvecx' can be reduced. [variableScope]
  float vecx, vecy, dvecx, dvecy, x, y, len;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\jitter_2d.c:37:28: style: The scope of the variable 'dvecy' can be reduced. [variableScope]
  float vecx, vecy, dvecx, dvecy, x, y, len;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\jitter_2d.c:37:35: style: The scope of the variable 'x' can be reduced. [variableScope]
  float vecx, vecy, dvecx, dvecy, x, y, len;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\jitter_2d.c:37:38: style: The scope of the variable 'y' can be reduced. [variableScope]
  float vecx, vecy, dvecx, dvecy, x, y, len;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\jitter_2d.c:95:21: style: The scope of the variable 'dvecx' can be reduced. [variableScope]
  float vecx, vecy, dvecx, dvecy, x, y;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\jitter_2d.c:95:28: style: The scope of the variable 'dvecy' can be reduced. [variableScope]
  float vecx, vecy, dvecx, dvecy, x, y;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\jitter_2d.c:95:35: style: The scope of the variable 'x' can be reduced. [variableScope]
  float vecx, vecy, dvecx, dvecy, x, y;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\jitter_2d.c:95:38: style: The scope of the variable 'y' can be reduced. [variableScope]
  float vecx, vecy, dvecx, dvecy, x, y;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\kdtree_impl.h:911:19: style: The expression 'found != found_prev' is always false because 'found' and 'found_prev' represent the same value. [knownConditionTrueFalse]
        if (found != found_prev) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\kdtree_impl.h:909:26: note: 'found_prev' is assigned value 'found' here.
        int found_prev = found;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\kdtree_impl.h:911:19: note: The expression 'found != found_prev' is always false because 'found' and 'found_prev' represent the same value.
        if (found != found_prev) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\kdtree_impl.h:928:19: style: The expression 'found != found_prev' is always false because 'found' and 'found_prev' represent the same value. [knownConditionTrueFalse]
        if (found != found_prev) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\kdtree_impl.h:926:26: note: 'found_prev' is assigned value 'found' here.
        int found_prev = found;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\kdtree_impl.h:928:19: note: The expression 'found != found_prev' is always false because 'found' and 'found_prev' represent the same value.
        if (found != found_prev) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\kdtree_impl.h:151:9: style: The scope of the variable 'co' can be reduced. [variableScope]
  float co;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\kdtree_impl.h:243:19: style: The scope of the variable 'cur_dist' can be reduced. [variableScope]
  float min_dist, cur_dist;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\listbase.c:662:15: style: The scope of the variable 'id_iter' can be reduced. [variableScope]
  const char *id_iter;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\listbase.c:686:15: style: The scope of the variable 'id_iter' can be reduced. [variableScope]
  const char *id_iter;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\listbase.c:706:15: style: The scope of the variable 'id_iter' can be reduced. [variableScope]
  const char *id_iter;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\listbase.c:727:15: style: The scope of the variable 'id_iter' can be reduced. [variableScope]
  const char *id_iter;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\listbase.c:748:15: style: The scope of the variable 'ptr_iter' can be reduced. [variableScope]
  const void *ptr_iter;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\listbase.c:769:15: style: The scope of the variable 'ptr_iter' can be reduced. [variableScope]
  const void *ptr_iter;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\listbase.c:793:15: style: The scope of the variable 'ptr_iter' can be reduced. [variableScope]
  const void *ptr_iter;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\listbase.c:816:15: style: The scope of the variable 'ptr_iter' can be reduced. [variableScope]
  const void *ptr_iter;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\listbase.c:836:15: style: The scope of the variable 'id_iter' can be reduced. [variableScope]
  const char *id_iter;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\listbase.c:858:16: style: The scope of the variable 'dst_link' can be reduced. [variableScope]
  struct Link *dst_link, *src_link;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1778:25: style: Condition 'cd->lambda==0.0' is always true [knownConditionTrueFalse]
    else if (cd->lambda == 0.0) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\list_sort_impl.h:176:0: information: Skipping configuration 'SORT_IMPL_LINKTYPE_DATA' since the value of 'SORT_IMPL_LINKTYPE_DATA' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (func(THUNK_PREPEND2(thunk, SORT_ARG(first), SORT_ARG(second))) > 0) {
^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\list_sort_impl.h:298:0: information: Skipping configuration 'SORT_IMPL_LINKTYPE_DATA' since the value of 'SORT_IMPL_LINKTYPE_DATA' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (func(THUNK_PREPEND2(thunk, SORT_ARG(list), SORT_ARG(next))) > 0) {
^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2084:24: style: Variable 'tot_edge_constraints' is reassigned a value before the old one has been used. [redundantAssignment]
  tot_edge_constraints = edges_len + tot_face_edges;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2076:24: note: tot_edge_constraints is assigned
  tot_edge_constraints = edges_len;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2084:24: note: tot_edge_constraints is overwritten
  tot_edge_constraints = edges_len + tot_face_edges;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:250:7: style: The scope of the variable 'id' can be reduced. [variableScope]
  int id;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:646:12: style: The scope of the variable 'v1' can be reduced. [variableScope]
  CDTVert *v1, *v2, *v3;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:646:17: style: The scope of the variable 'v2' can be reduced. [variableScope]
  CDTVert *v1, *v2, *v3;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:646:22: style: The scope of the variable 'v3' can be reduced. [variableScope]
  CDTVert *v1, *v2, *v3;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:648:64: style: The scope of the variable 'rcand' can be reduced. [variableScope]
  SymEdge *ldo, *ldi, *rdi, *rdo, *basel, *basel_sym, *lcand, *rcand, *t;
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:649:10: style: The scope of the variable 'orient' can be reduced. [variableScope]
  double orient;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:650:8: style: The scope of the variable 'valid_lcand' can be reduced. [variableScope]
  bool valid_lcand, valid_rcand;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:650:21: style: The scope of the variable 'valid_rcand' can be reduced. [variableScope]
  bool valid_lcand, valid_rcand;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:913:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j, n;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:916:10: style: The scope of the variable 'xend' can be reduced. [variableScope]
  double xend, yend, xcur;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:916:16: style: The scope of the variable 'yend' can be reduced. [variableScope]
  double xend, yend, xcur;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1362:19: style: The scope of the variable 'va' can be reduced. [variableScope]
  CDTVert *vcur, *va, *vb;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1362:24: style: The scope of the variable 'vb' can be reduced. [variableScope]
  CDTVert *vcur, *va, *vb;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1363:10: style: The scope of the variable 'orient1' can be reduced. [variableScope]
  double orient1, orient2;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1532:29: style: The scope of the variable 'cd_next' can be reduced. [variableScope]
  CrossData *cd, *cd_prev, *cd_next;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2036:7: style: The scope of the variable 'e' can be reduced. [variableScope]
  int e, eprev, e1, e2, f, fi, flen, start, i, j;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2036:10: style: The scope of the variable 'eprev' can be reduced. [variableScope]
  int e, eprev, e1, e2, f, fi, flen, start, i, j;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2036:45: style: The scope of the variable 'i' can be reduced. [variableScope]
  int e, eprev, e1, e2, f, fi, flen, start, i, j;
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2036:48: style: The scope of the variable 'j' can be reduced. [variableScope]
  int e, eprev, e1, e2, f, fi, flen, start, i, j;
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2037:7: style: The scope of the variable 'i_new' can be reduced. [variableScope]
  int i_new, i_old, i_evl;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2037:14: style: The scope of the variable 'i_old' can be reduced. [variableScope]
  int i_new, i_old, i_evl;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2037:21: style: The scope of the variable 'i_evl' can be reduced. [variableScope]
  int i_new, i_old, i_evl;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2044:7: style: The scope of the variable 'new_tot_face_edges' can be reduced. [variableScope]
  int new_tot_face_edges, new_tot_con_edges;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2044:27: style: The scope of the variable 'new_tot_con_edges' can be reduced. [variableScope]
  int new_tot_face_edges, new_tot_con_edges;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2045:7: style: The scope of the variable 'delta_con_edges' can be reduced. [variableScope]
  int delta_con_edges, delta_face_edges, cur_e_cnt;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2045:24: style: The scope of the variable 'delta_face_edges' can be reduced. [variableScope]
  int delta_con_edges, delta_face_edges, cur_e_cnt;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2045:42: style: The scope of the variable 'cur_e_cnt' can be reduced. [variableScope]
  int delta_con_edges, delta_face_edges, cur_e_cnt;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2707:12: style: The scope of the variable 'se' can be reduced. [variableScope]
  SymEdge *se;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2756:8: style: The scope of the variable 'dissolve' can be reduced. [variableScope]
  bool dissolve;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2842:10: style: The scope of the variable 'dissolvable' can be reduced. [variableScope]
    bool dissolvable;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4408:21: style: The scope of the variable 'sum' can be reduced. [variableScope]
  INEXACT double Q, sum;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4410:18: style: The scope of the variable 'product1' can be reduced. [variableScope]
  INEXACT double product1;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4411:10: style: The scope of the variable 'product0' can be reduced. [variableScope]
  double product0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4413:10: style: The scope of the variable 'enow' can be reduced. [variableScope]
  double enow;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4414:18: style: The scope of the variable 'bvirt' can be reduced. [variableScope]
  INEXACT double bvirt;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4415:10: style: The scope of the variable 'avirt' can be reduced. [variableScope]
  double avirt, bround, around;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4415:17: style: The scope of the variable 'bround' can be reduced. [variableScope]
  double avirt, bround, around;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4415:25: style: The scope of the variable 'around' can be reduced. [variableScope]
  double avirt, bround, around;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4633:18: style: The scope of the variable 'adxadx1' can be reduced. [variableScope]
  INEXACT double adxadx1, adyady1, bdxbdx1, bdybdy1, cdxcdx1, cdycdy1;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4633:27: style: The scope of the variable 'adyady1' can be reduced. [variableScope]
  INEXACT double adxadx1, adyady1, bdxbdx1, bdybdy1, cdxcdx1, cdycdy1;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4633:36: style: The scope of the variable 'bdxbdx1' can be reduced. [variableScope]
  INEXACT double adxadx1, adyady1, bdxbdx1, bdybdy1, cdxcdx1, cdycdy1;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4633:45: style: The scope of the variable 'bdybdy1' can be reduced. [variableScope]
  INEXACT double adxadx1, adyady1, bdxbdx1, bdybdy1, cdxcdx1, cdycdy1;
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4633:54: style: The scope of the variable 'cdxcdx1' can be reduced. [variableScope]
  INEXACT double adxadx1, adyady1, bdxbdx1, bdybdy1, cdxcdx1, cdycdy1;
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4633:63: style: The scope of the variable 'cdycdy1' can be reduced. [variableScope]
  INEXACT double adxadx1, adyady1, bdxbdx1, bdybdy1, cdxcdx1, cdycdy1;
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4634:10: style: The scope of the variable 'adxadx0' can be reduced. [variableScope]
  double adxadx0, adyady0, bdxbdx0, bdybdy0, cdxcdx0, cdycdy0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4634:19: style: The scope of the variable 'adyady0' can be reduced. [variableScope]
  double adxadx0, adyady0, bdxbdx0, bdybdy0, cdxcdx0, cdycdy0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4634:28: style: The scope of the variable 'bdxbdx0' can be reduced. [variableScope]
  double adxadx0, adyady0, bdxbdx0, bdybdy0, cdxcdx0, cdycdy0;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4634:37: style: The scope of the variable 'bdybdy0' can be reduced. [variableScope]
  double adxadx0, adyady0, bdxbdx0, bdybdy0, cdxcdx0, cdycdy0;
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:149:48: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
        const float *float_data = float_buffer + width * y1 * components + components * x1;
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:260:33: note: Calling function 'bicubic_interpolation', 2nd argument 'NULL' value is 0
  bicubic_interpolation(buffer, NULL, output, NULL, width, height, components, u, v);
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:149:48: note: Null pointer addition
        const float *float_data = float_buffer + width * y1 * components + components * x1;
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:154:54: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
        const unsigned char *byte_data = byte_buffer + width * y1 * components + components * x1;
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:249:25: note: Calling function 'bicubic_interpolation', 1st argument 'NULL' value is 0
  bicubic_interpolation(NULL, buffer, NULL, output, width, height, components, u, v);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:154:54: note: Null pointer addition
        const unsigned char *byte_data = byte_buffer + width * y1 * components + components * x1;
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4634:46: style: The scope of the variable 'cdxcdx0' can be reduced. [variableScope]
  double adxadx0, adyady0, bdxbdx0, bdybdy0, cdxcdx0, cdycdy0;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:323:27: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      row1 = float_buffer + width * y1 * components + components * x1;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:477:15: note: Calling function 'bilinear_interpolation', 2nd argument 'NULL' value is 0
      buffer, NULL, output, NULL, width, height, components, u, v, false, false);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:323:27: note: Null pointer addition
      row1 = float_buffer + width * y1 * components + components * x1;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:330:27: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      row2 = float_buffer + width * y2 * components + components * x1;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:477:15: note: Calling function 'bilinear_interpolation', 2nd argument 'NULL' value is 0
      buffer, NULL, output, NULL, width, height, components, u, v, false, false);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:330:27: note: Null pointer addition
      row2 = float_buffer + width * y2 * components + components * x1;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4634:55: style: The scope of the variable 'cdycdy0' can be reduced. [variableScope]
  double adxadx0, adyady0, bdxbdx0, bdybdy0, cdxcdx0, cdycdy0;
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:337:27: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      row3 = float_buffer + width * y1 * components + components * x2;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:477:15: note: Calling function 'bilinear_interpolation', 2nd argument 'NULL' value is 0
      buffer, NULL, output, NULL, width, height, components, u, v, false, false);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:337:27: note: Null pointer addition
      row3 = float_buffer + width * y1 * components + components * x2;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:344:27: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      row4 = float_buffer + width * y2 * components + components * x2;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:477:15: note: Calling function 'bilinear_interpolation', 2nd argument 'NULL' value is 0
      buffer, NULL, output, NULL, width, height, components, u, v, false, false);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:344:27: note: Null pointer addition
      row4 = float_buffer + width * y2 * components + components * x2;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4636:18: style: The scope of the variable 'aa3' can be reduced. [variableScope]
  INEXACT double aa3, bb3, cc3;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:405:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      row1 = byte_buffer + width * y1 * components + components * x1;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:465:7: note: Calling function 'bilinear_interpolation', 1st argument 'NULL' value is 0
      NULL, buffer, NULL, output, width, height, components, u, v, false, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:405:26: note: Null pointer addition
      row1 = byte_buffer + width * y1 * components + components * x1;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4636:23: style: The scope of the variable 'bb3' can be reduced. [variableScope]
  INEXACT double aa3, bb3, cc3;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:412:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      row2 = byte_buffer + width * y2 * components + components * x1;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:465:7: note: Calling function 'bilinear_interpolation', 1st argument 'NULL' value is 0
      NULL, buffer, NULL, output, width, height, components, u, v, false, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:412:26: note: Null pointer addition
      row2 = byte_buffer + width * y2 * components + components * x1;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4636:28: style: The scope of the variable 'cc3' can be reduced. [variableScope]
  INEXACT double aa3, bb3, cc3;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:419:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      row3 = byte_buffer + width * y1 * components + components * x2;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:465:7: note: Calling function 'bilinear_interpolation', 1st argument 'NULL' value is 0
      NULL, buffer, NULL, output, width, height, components, u, v, false, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:419:26: note: Null pointer addition
      row3 = byte_buffer + width * y1 * components + components * x2;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:426:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      row4 = byte_buffer + width * y2 * components + components * x2;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:465:7: note: Calling function 'bilinear_interpolation', 1st argument 'NULL' value is 0
      NULL, buffer, NULL, output, width, height, components, u, v, false, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:426:26: note: Null pointer addition
      row4 = byte_buffer + width * y2 * components + components * x2;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4645:10: style: The scope of the variable 'axtbb' can be reduced. [variableScope]
  double axtbb[8], axtcc[8], aytbb[8], aytcc[8];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:104:19: style: The scope of the variable 'x1' can be reduced. [variableScope]
  int i, j, n, m, x1, y1;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:105:18: style: The scope of the variable 'wx' can be reduced. [variableScope]
  float a, b, w, wx, wy[4], out[4];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4645:20: style: The scope of the variable 'axtcc' can be reduced. [variableScope]
  double axtbb[8], axtcc[8], aytbb[8], aytcc[8];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:618:24: style: The scope of the variable 'a2' can be reduced. [variableScope]
  float a, b, th, ecc, a2, b2, ue, ve, U0, V0, DDQ, U, ac1, ac2, BU, d;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4645:30: style: The scope of the variable 'aytbb' can be reduced. [variableScope]
  double axtbb[8], axtcc[8], aytbb[8], aytcc[8];
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4645:40: style: The scope of the variable 'aytcc' can be reduced. [variableScope]
  double axtbb[8], axtcc[8], aytbb[8], aytcc[8];
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_interp.c:631:11: style: Variable 'b2' is assigned a value that is never used. [unreadVariable]
  if ((b2 = b * b) < rmin) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4646:7: style: The scope of the variable 'axtbblen' can be reduced. [variableScope]
  int axtbblen, axtcclen, aytbblen, aytcclen;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4646:17: style: The scope of the variable 'axtcclen' can be reduced. [variableScope]
  int axtbblen, axtcclen, aytbblen, aytcclen;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4646:27: style: The scope of the variable 'aytbblen' can be reduced. [variableScope]
  int axtbblen, axtcclen, aytbblen, aytcclen;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4646:37: style: The scope of the variable 'aytcclen' can be reduced. [variableScope]
  int axtbblen, axtcclen, aytbblen, aytcclen;
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4647:10: style: The scope of the variable 'bxtaa' can be reduced. [variableScope]
  double bxtaa[8], bxtcc[8], bytaa[8], bytcc[8];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4647:20: style: The scope of the variable 'bxtcc' can be reduced. [variableScope]
  double bxtaa[8], bxtcc[8], bytaa[8], bytcc[8];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4647:30: style: The scope of the variable 'bytaa' can be reduced. [variableScope]
  double bxtaa[8], bxtcc[8], bytaa[8], bytcc[8];
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4647:40: style: The scope of the variable 'bytcc' can be reduced. [variableScope]
  double bxtaa[8], bxtcc[8], bytaa[8], bytcc[8];
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4648:7: style: The scope of the variable 'bxtaalen' can be reduced. [variableScope]
  int bxtaalen, bxtcclen, bytaalen, bytcclen;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4648:17: style: The scope of the variable 'bxtcclen' can be reduced. [variableScope]
  int bxtaalen, bxtcclen, bytaalen, bytcclen;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4648:27: style: The scope of the variable 'bytaalen' can be reduced. [variableScope]
  int bxtaalen, bxtcclen, bytaalen, bytcclen;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_solvers.c:91:19: warning: Either the condition '!c1' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
  double *d1 = c1 + count;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_solvers.c:93:7: note: Assuming that condition '!c1' is not redundant
  if (!c1) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_solvers.c:91:19: note: Null pointer addition
  double *d1 = c1 + count;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4648:37: style: The scope of the variable 'bytcclen' can be reduced. [variableScope]
  int bxtaalen, bxtcclen, bytaalen, bytcclen;
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_solvers.c:149:19: warning: Either the condition '!tmp' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
  float *b2 = tmp + count;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_solvers.c:151:7: note: Assuming that condition '!tmp' is not redundant
  if (!tmp) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_solvers.c:149:19: note: Null pointer addition
  float *b2 = tmp + count;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4649:10: style: The scope of the variable 'cxtaa' can be reduced. [variableScope]
  double cxtaa[8], cxtbb[8], cytaa[8], cytbb[8];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_solvers.c:207:29: style: The scope of the variable 'next_fdeltav' can be reduced. [variableScope]
  float fdelta[3], fdeltav, next_fdeltav;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4649:20: style: The scope of the variable 'cxtbb' can be reduced. [variableScope]
  double cxtaa[8], cxtbb[8], cytaa[8], cytbb[8];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4649:30: style: The scope of the variable 'cytaa' can be reduced. [variableScope]
  double cxtaa[8], cxtbb[8], cytaa[8], cytbb[8];
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4649:40: style: The scope of the variable 'cytbb' can be reduced. [variableScope]
  double cxtaa[8], cxtbb[8], cytaa[8], cytbb[8];
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4650:7: style: The scope of the variable 'cxtaalen' can be reduced. [variableScope]
  int cxtaalen, cxtbblen, cytaalen, cytbblen;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4650:17: style: The scope of the variable 'cxtbblen' can be reduced. [variableScope]
  int cxtaalen, cxtbblen, cytaalen, cytbblen;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4650:27: style: The scope of the variable 'cytaalen' can be reduced. [variableScope]
  int cxtaalen, cxtbblen, cytaalen, cytbblen;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4650:37: style: The scope of the variable 'cytbblen' can be reduced. [variableScope]
  int cxtaalen, cxtbblen, cytaalen, cytbblen;
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4653:10: style: The scope of the variable 'axtbct' can be reduced. [variableScope]
  double axtbct[16], aytbct[16], bxtcat[16], bytcat[16], cxtabt[16], cytabt[16];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4653:22: style: The scope of the variable 'aytbct' can be reduced. [variableScope]
  double axtbct[16], aytbct[16], bxtcat[16], bytcat[16], cxtabt[16], cytabt[16];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4653:34: style: The scope of the variable 'bxtcat' can be reduced. [variableScope]
  double axtbct[16], aytbct[16], bxtcat[16], bytcat[16], cxtabt[16], cytabt[16];
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4653:46: style: The scope of the variable 'bytcat' can be reduced. [variableScope]
  double axtbct[16], aytbct[16], bxtcat[16], bytcat[16], cxtabt[16], cytabt[16];
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4653:58: style: The scope of the variable 'cxtabt' can be reduced. [variableScope]
  double axtbct[16], aytbct[16], bxtcat[16], bytcat[16], cxtabt[16], cytabt[16];
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4653:70: style: The scope of the variable 'cytabt' can be reduced. [variableScope]
  double axtbct[16], aytbct[16], bxtcat[16], bytcat[16], cxtabt[16], cytabt[16];
                                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4654:7: style: The scope of the variable 'axtbctlen' can be reduced. [variableScope]
  int axtbctlen, aytbctlen, bxtcatlen, bytcatlen, cxtabtlen, cytabtlen;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4654:18: style: The scope of the variable 'aytbctlen' can be reduced. [variableScope]
  int axtbctlen, aytbctlen, bxtcatlen, bytcatlen, cxtabtlen, cytabtlen;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4654:29: style: The scope of the variable 'bxtcatlen' can be reduced. [variableScope]
  int axtbctlen, aytbctlen, bxtcatlen, bytcatlen, cxtabtlen, cytabtlen;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4654:40: style: The scope of the variable 'bytcatlen' can be reduced. [variableScope]
  int axtbctlen, aytbctlen, bxtcatlen, bytcatlen, cxtabtlen, cytabtlen;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4654:51: style: The scope of the variable 'cxtabtlen' can be reduced. [variableScope]
  int axtbctlen, aytbctlen, bxtcatlen, bytcatlen, cxtabtlen, cytabtlen;
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4654:62: style: The scope of the variable 'cytabtlen' can be reduced. [variableScope]
  int axtbctlen, aytbctlen, bxtcatlen, bytcatlen, cxtabtlen, cytabtlen;
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4655:10: style: The scope of the variable 'axtbctt' can be reduced. [variableScope]
  double axtbctt[8], aytbctt[8], bxtcatt[8];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4655:22: style: The scope of the variable 'aytbctt' can be reduced. [variableScope]
  double axtbctt[8], aytbctt[8], bxtcatt[8];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4655:34: style: The scope of the variable 'bxtcatt' can be reduced. [variableScope]
  double axtbctt[8], aytbctt[8], bxtcatt[8];
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4656:10: style: The scope of the variable 'bytcatt' can be reduced. [variableScope]
  double bytcatt[8], cxtabtt[8], cytabtt[8];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4656:22: style: The scope of the variable 'cxtabtt' can be reduced. [variableScope]
  double bytcatt[8], cxtabtt[8], cytabtt[8];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4656:34: style: The scope of the variable 'cytabtt' can be reduced. [variableScope]
  double bytcatt[8], cxtabtt[8], cytabtt[8];
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4657:7: style: The scope of the variable 'axtbcttlen' can be reduced. [variableScope]
  int axtbcttlen, aytbcttlen, bxtcattlen, bytcattlen, cxtabttlen, cytabttlen;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4657:19: style: The scope of the variable 'aytbcttlen' can be reduced. [variableScope]
  int axtbcttlen, aytbcttlen, bxtcattlen, bytcattlen, cxtabttlen, cytabttlen;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4657:31: style: The scope of the variable 'bxtcattlen' can be reduced. [variableScope]
  int axtbcttlen, aytbcttlen, bxtcattlen, bytcattlen, cxtabttlen, cytabttlen;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4657:43: style: The scope of the variable 'bytcattlen' can be reduced. [variableScope]
  int axtbcttlen, aytbcttlen, bxtcattlen, bytcattlen, cxtabttlen, cytabttlen;
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4657:55: style: The scope of the variable 'cxtabttlen' can be reduced. [variableScope]
  int axtbcttlen, aytbcttlen, bxtcattlen, bytcattlen, cxtabttlen, cytabttlen;
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4657:67: style: The scope of the variable 'cytabttlen' can be reduced. [variableScope]
  int axtbcttlen, aytbcttlen, bxtcattlen, bytcattlen, cxtabttlen, cytabttlen;
                                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4658:10: style: The scope of the variable 'abt' can be reduced. [variableScope]
  double abt[8], bct[8], cat[8];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4658:18: style: The scope of the variable 'bct' can be reduced. [variableScope]
  double abt[8], bct[8], cat[8];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4658:26: style: The scope of the variable 'cat' can be reduced. [variableScope]
  double abt[8], bct[8], cat[8];
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4659:7: style: The scope of the variable 'abtlen' can be reduced. [variableScope]
  int abtlen, bctlen, catlen;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4659:15: style: The scope of the variable 'bctlen' can be reduced. [variableScope]
  int abtlen, bctlen, catlen;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4659:23: style: The scope of the variable 'catlen' can be reduced. [variableScope]
  int abtlen, bctlen, catlen;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4660:10: style: The scope of the variable 'abtt' can be reduced. [variableScope]
  double abtt[4], bctt[4], catt[4];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4660:19: style: The scope of the variable 'bctt' can be reduced. [variableScope]
  double abtt[4], bctt[4], catt[4];
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4660:28: style: The scope of the variable 'catt' can be reduced. [variableScope]
  double abtt[4], bctt[4], catt[4];
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4661:7: style: The scope of the variable 'abttlen' can be reduced. [variableScope]
  int abttlen, bcttlen, cattlen;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4661:16: style: The scope of the variable 'bcttlen' can be reduced. [variableScope]
  int abttlen, bcttlen, cattlen;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4661:25: style: The scope of the variable 'cattlen' can be reduced. [variableScope]
  int abttlen, bcttlen, cattlen;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4662:18: style: The scope of the variable 'abtt3' can be reduced. [variableScope]
  INEXACT double abtt3, bctt3, catt3;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4662:25: style: The scope of the variable 'bctt3' can be reduced. [variableScope]
  INEXACT double abtt3, bctt3, catt3;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:4662:32: style: The scope of the variable 'catt3' can be reduced. [variableScope]
  INEXACT double abtt3, bctt3, catt3;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_rotation.c:691:9: style: The scope of the variable 'angle' can be reduced. [variableScope]
  float angle, si, co, len;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_rotation.c:691:16: style: The scope of the variable 'si' can be reduced. [variableScope]
  float angle, si, co, len;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_rotation.c:1940:38: style: The scope of the variable 'basequat' can be reduced. [variableScope]
  float *t, *q, dscale[3], scale[3], basequat[4], mat3[3][3];
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_rotation.c:1941:23: style: The scope of the variable 'baseinv' can be reduced. [variableScope]
  float baseRS[4][4], baseinv[4][4], baseR[4][4], baseRinv[4][4];
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_rotation.c:1941:38: style: The scope of the variable 'baseR' can be reduced. [variableScope]
  float baseRS[4][4], baseinv[4][4], baseR[4][4], baseRinv[4][4];
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_rotation.c:1941:51: style: The scope of the variable 'baseRinv' can be reduced. [variableScope]
  float baseRS[4][4], baseinv[4][4], baseR[4][4], baseRinv[4][4];
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_rotation.c:1942:18: style: The scope of the variable 'S' can be reduced. [variableScope]
  float R[4][4], S[4][4];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_rotation.c:2092:24: style: The scope of the variable 'scalemat' can be reduced. [variableScope]
  float M[3][3], t[3], scalemat[3][3], len2;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\path_util.c:175:13: style: The scope of the variable 'a' can be reduced. [variableScope]
  ptrdiff_t a;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\path_util.c:1018:8: style: The scope of the variable 'base' can be reduced. [variableScope]
  char base[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\polyfill_2d.c:454:3: portability: Returning an integer in a function with pointer return type is not portable. [CastIntegerToAddressAtReturn]
  return pf->tris[pf->tris_tot++];
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\polyfill_2d_beautify.c:379:31: style: Same expression on both sides of '=='. [duplicateExpression]
    BLI_assert(oe_a->verts[0] == oe_a->verts[0] && oe_a->verts[1] == oe_a->verts[1]);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\noise.c:1247:14: style: The scope of the variable 't' can be reduced. [variableScope]
  float sum, t, amp = 1, fscale = 1;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\noise.c:1551:17: style: The scope of the variable 'signal' can be reduced. [variableScope]
  float result, signal, weight, rmd;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\noise.c:1638:25: style: The scope of the variable 'weight' can be reduced. [variableScope]
  float result, signal, weight;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:5125:16: style: Variable 'finother' is assigned a value that is never used. [unreadVariable]
      finother = finswap;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_matrix.c:1125:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, b;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_matrix.c:1125:10: style: The scope of the variable 'b' can be reduced. [variableScope]
  int a, b;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_matrix.c:1161:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, b;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_matrix.c:1161:10: style: The scope of the variable 'b' can be reduced. [variableScope]
  int a, b;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_matrix.c:1212:10: style: The scope of the variable 'temp' can be reduced. [variableScope]
  double temp;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_matrix.c:1214:9: style: The scope of the variable 'max' can be reduced. [variableScope]
  float max;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_matrix.c:1215:7: style: The scope of the variable 'maxj' can be reduced. [variableScope]
  int maxj;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_matrix.c:1613:33: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  float norm_v2[3], norm_v3[3], tmp[3];
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\path_util.c:1636:10: warning: Either the condition 'if(dir)' is redundant or there is possible null pointer dereference: dir. [nullPointerRedundantCheck]
  memset(dir, 0xff, sizeof(*dir) * dirlen);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\path_util.c:1642:6: note: Assuming that condition 'if(dir)' is not redundant
  if (dir) {
     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\path_util.c:1636:10: note: Null pointer dereference
  memset(dir, 0xff, sizeof(*dir) * dirlen);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\path_util.c:1637:10: warning: Either the condition 'if(file)' is redundant or there is possible null pointer dereference: file. [nullPointerRedundantCheck]
  memset(file, 0xff, sizeof(*file) * filelen);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\path_util.c:1652:6: note: Assuming that condition 'if(file)' is not redundant
  if (file) {
     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\path_util.c:1637:10: note: Null pointer dereference
  memset(file, 0xff, sizeof(*file) * filelen);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:2700:30: style: The scope of the variable 'point' can be reduced. [variableScope]
  float e1[3], e2[3], e3[3], point[3], vel[3], /*dist[3],*/ nor[3], temp[3], bv[3];
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:2701:18: style: The scope of the variable 'd' can be reduced. [variableScope]
  float a, b, c, d, e, x, y, z, radius2 = radius * radius;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:2701:24: style: The scope of the variable 'x' can be reduced. [variableScope]
  float a, b, c, d, e, x, y, z, radius2 = radius * radius;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:2701:27: style: The scope of the variable 'y' can be reduced. [variableScope]
  float a, b, c, d, e, x, y, z, radius2 = radius * radius;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:2701:30: style: The scope of the variable 'z' can be reduced. [variableScope]
  float a, b, c, d, e, x, y, z, radius2 = radius * radius;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:4223:18: style: The scope of the variable 'ht' can be reduced. [variableScope]
  float ht_prev, ht; /* half tangents */
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:4296:18: style: The scope of the variable 'ht' can be reduced. [variableScope]
  float ht_prev, ht; /* half tangents */
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:4967:10: style: The scope of the variable 'fl' can be reduced. [variableScope]
  int a, fl, flag = -1;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:5301:9: style: The scope of the variable 'accu_com' can be reduced. [variableScope]
  float accu_com[3] = {0.0f, 0.0f, 0.0f}, accu_rcom[3] = {0.0f, 0.0f, 0.0f};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:5301:43: style: The scope of the variable 'accu_rcom' can be reduced. [variableScope]
  float accu_com[3] = {0.0f, 0.0f, 0.0f}, accu_rcom[3] = {0.0f, 0.0f, 0.0f};
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:5302:9: style: The scope of the variable 'accu_weight' can be reduced. [variableScope]
  float accu_weight = 0.0f, accu_rweight = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:5302:29: style: The scope of the variable 'accu_rweight' can be reduced. [variableScope]
  float accu_weight = 0.0f, accu_rweight = 0.0f;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\math_geom.c:5305:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\path_util.c:473:11: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  wchar_t tmp[PATH_MAX];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\scanfill_utils.c:385:16: style: The scope of the variable 'eed_index' can be reduced. [variableScope]
  unsigned int eed_index = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\scanfill_utils.c:386:7: style: The scope of the variable 'totvert_new' can be reduced. [variableScope]
  int totvert_new = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\scanfill_utils.c:340:14: style: Variable 'v_prev' is assigned a value that is never used. [unreadVariable]
      v_prev = e_curr->v1;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\smallhash.c:165:19: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
    buckets_old = alloca(size);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\scanfill.c:277:9: style: The scope of the variable 'fac' can be reduced. [variableScope]
  float fac, fac1, x, y;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\scanfill.c:363:21: style: The scope of the variable 'miny' can be reduced. [variableScope]
  float minx, maxx, miny, maxy;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\scanfill.c:363:27: style: The scope of the variable 'maxy' can be reduced. [variableScope]
  float minx, maxx, miny, maxy;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\scanfill.c:843:10: style: The scope of the variable 'min_xy_p' can be reduced. [variableScope]
  float *min_xy_p, *max_xy_p;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\sort.c:151:14: style: Variable 'swap_cnt' is reassigned a value before the old one has been used. [redundantAssignment]
    swap_cnt = 1;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\sort.c:133:18: note: swap_cnt is assigned
        swap_cnt = 1;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\sort.c:151:14: note: swap_cnt is overwritten
    swap_cnt = 1;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\scanfill.c:843:21: style: The scope of the variable 'max_xy_p' can be reduced. [variableScope]
  float *min_xy_p, *max_xy_p;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\sort.c:151:14: style: Variable 'swap_cnt' is reassigned a value before the old one has been used. [redundantAssignment]
    swap_cnt = 1;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\sort.c:141:18: note: swap_cnt is assigned
        swap_cnt = 1;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\sort.c:151:14: note: swap_cnt is overwritten
    swap_cnt = 1;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\scanfill.c:845:21: style: The scope of the variable 'c' can be reduced. [variableScope]
  unsigned short a, c, poly = 0;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\storage.c:140:28: style: The scope of the variable 'slash' can be reduced. [variableScope]
  char name[FILE_MAXDIR], *slash;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string.c:382:28: style: The scope of the variable 'endMatch' can be reduced. [variableScope]
  const char *startMatch, *endMatch;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string.c:516:11: style: The scope of the variable 'sc' can be reduced. [variableScope]
  char c, sc;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string.c:517:10: style: The scope of the variable 'len' can be reduced. [variableScope]
  size_t len;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string.c:540:11: style: The scope of the variable 'sc' can be reduced. [variableScope]
  char c, sc;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string.c:572:8: style: The scope of the variable 'c1' can be reduced. [variableScope]
  char c1, c2;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string.c:572:12: style: The scope of the variable 'c2' can be reduced. [variableScope]
  char c1, c2;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string.c:595:8: style: The scope of the variable 'c1' can be reduced. [variableScope]
  char c1, c2;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string.c:595:12: style: The scope of the variable 'c2' can be reduced. [variableScope]
  char c1, c2;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string.c:674:8: style: The scope of the variable 'c1' can be reduced. [variableScope]
  char c1, c2;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string.c:674:12: style: The scope of the variable 'c2' can be reduced. [variableScope]
  char c1, c2;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utf8.c:933:8: style: Variable '*suf' is reassigned a value before the old one has been used. [redundantAssignment]
  *suf = *sep = NULL;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utf8.c:916:12: note: *suf is assigned
      *suf = *sep = NULL;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utf8.c:933:8: note: *suf is overwritten
  *suf = *sep = NULL;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utf8.c:973:28: style: The scope of the variable 'col' can be reduced. [variableScope]
  int offset = 0, pos = 0, col;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utils.c:165:18: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  char *prefix = alloca(name_len);  /* The part before the facing */
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utils.c:166:18: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  char *suffix = alloca(name_len);  /* The part after the facing */
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utils.c:167:19: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  char *replace = alloca(name_len); /* The replacement string */
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utils.c:168:18: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  char *number = alloca(name_len);  /* The number extension string */
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utils.c:307:22: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
    char *tempname = alloca(name_len);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utils.c:308:18: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
    char *left = alloca(name_len);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utils.c:254:14: style: Variable 'is_set' is assigned a value that is never used. [unreadVariable]
      is_set = true;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\string_utils.c:265:14: style: Variable 'is_set' is assigned a value that is never used. [unreadVariable]
      is_set = true;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\path_util.c:1177:24: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
      char *filename = alloca(name_len + ext_max);
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\system.c:168:8: style: The scope of the variable 'buf' can be reduced. [variableScope]
  char buf[48] = {0};
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\threads.c:189:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:744:17: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
  if (dbg_level > 1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:744:17: note: Condition 'dbg_level>1' is always false
  if (dbg_level > 1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:763:19: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:763:19: note: Condition 'dbg_level>1' is always false
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:772:21: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:772:21: note: Condition 'dbg_level>1' is always false
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:782:23: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:782:23: note: Condition 'dbg_level>1' is always false
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:795:21: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:795:21: note: Condition 'dbg_level>1' is always false
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:859:19: style: Condition 'dbg_level>2' is always false [knownConditionTrueFalse]
    if (dbg_level > 2) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:859:19: note: Condition 'dbg_level>2' is always false
    if (dbg_level > 2) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\task.c:1250:29: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
      flatten_tls_storage = MALLOCA(tls_data_size);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1088:17: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
  if (dbg_level > 1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\task.c:1340:55: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
    state.flatten_tls_storage = flatten_tls_storage = MALLOCA(tls_data_size * (size_t)num_tasks);
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1102:21: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\task.c:1491:57: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
    state->flatten_tls_storage = userdata_chunk_array = MALLOCA(userdata_chunk_size *
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1122:19: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\task.c:1613:25: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  current_chunk_items = MALLOCA(items_size);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1131:19: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\task.c:1614:27: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  current_chunk_indices = MALLOCA(indices_size);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1396:19: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1366:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1396:19: note: Condition 'dbg_level>1' is always false
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\task.c:1670:28: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
    userdata_chunk_local = MALLOCA(userdata_chunk_size);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1405:21: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1366:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1405:21: note: Condition 'dbg_level>1' is always false
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\task.c:1725:28: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
    userdata_chunk_array = MALLOCA(userdata_chunk_size * num_tasks);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1416:21: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1366:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1416:21: note: Condition 'dbg_level>1' is always false
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1423:23: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1366:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1423:23: note: Condition 'dbg_level>1' is always false
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1482:17: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
  if (dbg_level > 1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1461:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1482:17: note: Condition 'dbg_level>1' is always false
  if (dbg_level > 1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1490:19: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1461:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1490:19: note: Condition 'dbg_level>1' is always false
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1498:19: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1461:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1498:19: note: Condition 'dbg_level>1' is always false
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1506:19: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1461:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1506:19: note: Condition 'dbg_level>1' is always false
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1609:19: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1609:19: note: Condition 'dbg_level>1' is always false
    if (dbg_level > 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1739:21: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1739:21: note: Condition 'dbg_level>1' is always false
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\task.c:1615:22: style: Variable 'current_chunk_size' is assigned a value that is never used. [unreadVariable]
  current_chunk_size = 0;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1755:21: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1755:21: note: Condition 'dbg_level>1' is always false
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1792:23: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1792:23: note: Condition 'dbg_level>1' is always false
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1802:21: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1802:21: note: Condition 'dbg_level>1' is always false
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1813:23: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1813:23: note: Condition 'dbg_level>1' is always false
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1823:21: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1823:21: note: Condition 'dbg_level>1' is always false
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1838:23: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1838:23: note: Condition 'dbg_level>1' is always false
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2868:21: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2815:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2868:21: note: Condition 'dbg_level>1' is always false
      if (dbg_level > 1) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2876:23: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2815:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2876:23: note: Condition 'dbg_level>1' is always false
        if (dbg_level > 1) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2984:17: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
  if (dbg_level > 1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2969:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2984:17: note: Condition 'dbg_level>1' is always false
  if (dbg_level > 1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3211:17: style: Condition 'dbg_level==-1' is always false [knownConditionTrueFalse]
  if (dbg_level == -1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3211:17: note: Condition 'dbg_level==-1' is always false
  if (dbg_level == -1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3273:19: style: Condition 'dbg_level>3' is always false [knownConditionTrueFalse]
    if (dbg_level > 3) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3273:19: note: Condition 'dbg_level>3' is always false
    if (dbg_level > 3) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3316:21: style: Condition 'dbg_level>2' is always false [knownConditionTrueFalse]
      if (dbg_level > 2) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3316:21: note: Condition 'dbg_level>2' is always false
      if (dbg_level > 2) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3326:21: style: Condition 'dbg_level>2' is always false [knownConditionTrueFalse]
      if (dbg_level > 2) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3326:21: note: Condition 'dbg_level>2' is always false
      if (dbg_level > 2) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3352:17: style: Condition 'dbg_level>1' is always false [knownConditionTrueFalse]
  if (dbg_level > 1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3352:17: note: Condition 'dbg_level>1' is always false
  if (dbg_level > 1) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3363:19: style: Condition 'dbg_level>2' is always false [knownConditionTrueFalse]
    if (dbg_level > 2) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: Assignment 'dbg_level=0', assigned value is 0
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3363:19: note: Condition 'dbg_level>2' is always false
    if (dbg_level > 2) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3975:7: warning: Either the condition 'cdt!=NULL' is redundant or there is possible null pointer dereference: cdt. [nullPointerRedundantCheck]
  if (cdt->output_prepared) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3982:18: note: Assuming that condition 'cdt!=NULL' is not redundant
  BLI_assert(cdt != NULL);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3975:7: note: Null pointer dereference
  if (cdt->output_prepared) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3978:7: warning: Either the condition 'cdt!=NULL' is redundant or there is possible null pointer dereference: cdt. [nullPointerRedundantCheck]
  if (cdt->edges == NULL || cdt->edges->next == NULL) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3982:18: note: Assuming that condition 'cdt!=NULL' is not redundant
  BLI_assert(cdt != NULL);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3978:7: note: Null pointer dereference
  if (cdt->edges == NULL || cdt->edges->next == NULL) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:655:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:655:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:707:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:707:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:734:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:734:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:805:23: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
        if (dbg_level > 0) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:805:23: note: The expression 'dbg_level > 0' is always false.
        if (dbg_level > 0) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:819:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:819:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:837:21: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:837:21: note: The expression 'dbg_level > 0' is always false.
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:847:21: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:653:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:847:21: note: The expression 'dbg_level > 0' is always false.
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:926:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:924:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:926:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:946:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:924:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:946:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1002:23: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
        if (dbg_level > 0) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:924:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1002:23: note: The expression 'dbg_level > 0' is always false.
        if (dbg_level > 0) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1060:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1053:25: note: 'dbg_level' is assigned value '0' here.
  const int dbg_level = 0;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1060:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1072:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1053:25: note: 'dbg_level' is assigned value '0' here.
  const int dbg_level = 0;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1072:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\system.c:128:5: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
    fprintf(fp, "%u: %s - 0x%0llX\n", nframes - i - 1, symbolinfo->Name, symbolinfo->Address);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1110:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1053:25: note: 'dbg_level' is assigned value '0' here.
  const int dbg_level = 0;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1110:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1225:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1202:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1225:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1269:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1257:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1269:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1294:21: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1257:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1294:21: note: The expression 'dbg_level > 0' is always false.
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1368:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1366:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1368:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\voronoi_2d.c:859:16: portability: Assigning a pointer to an integer is not portable. [AssignmentAddressToInteger]
  *r_triangles = triangles;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1463:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1461:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1463:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1474:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1461:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1474:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1540:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1540:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\voronoi_2d.c:270:9: style: The scope of the variable 'x' can be reduced. [variableScope]
  float x = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1561:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1561:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\voronoi_2d.c:592:18: style: The scope of the variable 'cur_distance' can be reduced. [variableScope]
    float co[2], cur_distance;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1625:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1625:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1685:25: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
          if (dbg_level > 0) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1685:25: note: The expression 'dbg_level > 0' is always false.
          if (dbg_level > 0) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\voronoi_2d.c:270:11: style: Variable 'x' is assigned a value that is never used. [unreadVariable]
  float x = 0.0f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1718:23: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
        if (dbg_level > 0) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1538:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:1718:23: note: The expression 'dbg_level > 0' is always false.
        if (dbg_level > 0) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2054:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2052:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2054:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2141:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2052:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2141:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2177:21: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2052:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2177:21: note: The expression 'dbg_level > 0' is always false.
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2358:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2052:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2358:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2468:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2460:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2468:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2485:21: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2460:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2485:21: note: The expression 'dbg_level > 0' is always false.
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2493:21: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2460:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2493:21: note: The expression 'dbg_level > 0' is always false.
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2510:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2460:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2510:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2521:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2460:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2521:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2540:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2460:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2540:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2612:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2610:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2612:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2620:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2610:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2620:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2632:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2610:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2632:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2666:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2664:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2666:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2690:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2664:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2690:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2817:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2815:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2817:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\winstuff.c:89:8: style: The scope of the variable 'MBox' can be reduced. [variableScope]
  char MBox[256];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2830:23: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
        if (dbg_level > 0) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2815:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2830:23: note: The expression 'dbg_level > 0' is always false.
        if (dbg_level > 0) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\winstuff.c:92:8: style: Unused variable: IsWOW64 [unusedVariable]
  BOOL IsWOW64;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2846:21: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2815:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2846:21: note: The expression 'dbg_level > 0' is always false.
      if (dbg_level > 0) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2854:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2815:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2854:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2883:25: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
          if (dbg_level > 0) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2815:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2883:25: note: The expression 'dbg_level > 0' is always false.
          if (dbg_level > 0) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2971:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2969:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2971:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3203:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3203:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3232:19: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3232:19: note: The expression 'dbg_level > 0' is always false.
    if (dbg_level > 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3240:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3240:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3349:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3349:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\winstuff_dir.c:49:8: style: struct member '__dirstream::dd_loc' is never used. [unusedStructMember]
  long dd_loc;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3374:17: style: The expression 'dbg_level > 0' is always false. [knownConditionTrueFalse]
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3193:19: note: 'dbg_level' is assigned value '0' here.
  int dbg_level = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3374:17: note: The expression 'dbg_level > 0' is always false.
  if (dbg_level > 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\winstuff_dir.c:50:8: style: struct member '__dirstream::dd_size' is never used. [unusedStructMember]
  long dd_size;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\winstuff_dir.c:51:8: style: struct member '__dirstream::dd_buf' is never used. [unusedStructMember]
  char dd_buf[4096];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\winstuff_dir.c:52:9: style: struct member '__dirstream::dd_direct' is never used. [unusedStructMember]
  void *dd_direct;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:652:8: style: The scope of the variable 'label_buf' can be reduced. [variableScope]
  char label_buf[100];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2051:19: style: The scope of the variable 'evl' can be reduced. [variableScope]
  EdgeVertLambda *evl;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:2911:12: style: The scope of the variable 'f' can be reduced. [variableScope]
  CDTFace *f;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3537:12: style: The scope of the variable 'f' can be reduced. [variableScope]
  CDTFace *f;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3929:20: style: The scope of the variable 'c' can be reduced. [variableScope]
  CDTVert *a, *b, *c;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3969:17: style: The scope of the variable 'sesym' can be reduced. [variableScope]
  SymEdge *se, *sesym, *s;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readblenentry.c:151:36: style: Obsolete function 'strdup' called. It is recommended to use '_strdup' instead. [strdupCalled]
      BLI_linklist_prepend(&names, strdup(idname + 2));
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readblenentry.c:276:40: style: Obsolete function 'strdup' called. It is recommended to use '_strdup' instead. [strdupCalled]
          BLI_linklist_prepend(&names, strdup(str));
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\undofile.c:176:0: information: Skipping configuration 'O_NOFOLLOW' since the value of 'O_NOFOLLOW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  oflags |= O_NOFOLLOW;
^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3937:5: style: Variable 'a' is assigned a value that is never used. [unreadVariable]
  a = se->vert;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:3938:5: style: Variable 'b' is assigned a value that is never used. [unreadVariable]
  b = se->next->vert;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_250.c:1770:26: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (bmain->versionfile < 253) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_250.c:1569:26: note: First condition
  if (bmain->versionfile < 253) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_250.c:1770:26: note: Second condition
  if (bmain->versionfile < 253) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_250.c:786:19: style: The scope of the variable 'ts' can be reduced. [variableScope]
    ToolSettings *ts;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_250.c:1104:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i, convert = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:1741:32: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (bmain->versionfile < 264 || (bmain->versionfile == 264 && bmain->subversionfile < 7)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:1717:32: note: First condition
  if (bmain->versionfile < 264 || (bmain->versionfile == 264 && bmain->subversionfile < 7)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:1741:32: note: Second condition
  if (bmain->versionfile < 264 || (bmain->versionfile == 264 && bmain->subversionfile < 7)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:2053:26: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (bmain->versionfile < 267) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:2025:26: note: First condition
  if (bmain->versionfile < 267) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:2053:26: note: Second condition
  if (bmain->versionfile < 267) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_270.c:906:22: style: The scope of the variable 'srv' can be reduced. [variableScope]
    SceneRenderView *srv;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:2115:26: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (bmain->versionfile < 267) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:2053:26: note: First condition
  if (bmain->versionfile < 267) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:2115:26: note: Second condition
  if (bmain->versionfile < 267) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:360:20: style: The scope of the variable 'layer' can be reduced. [variableScope]
  CustomDataLayer *layer;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:2266:18: style: The scope of the variable 'region' can be reduced. [variableScope]
        ARegion *region, *arnew;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_260.c:2266:27: style: The scope of the variable 'arnew' can be reduced. [variableScope]
        ARegion *region, *arnew;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_280.c:1211:16: warning: Possible null pointer dereference: collection_hidden [nullPointer]
          if (*collection_hidden == NULL) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_280.c:1201:44: note: Assignment 'collection_hidden=NULL', assigned value is 0
          Collection **collection_hidden = NULL;
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_280.c:1211:16: note: Null pointer dereference
          if (*collection_hidden == NULL) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_280.c:1178:8: style: The scope of the variable 'use_collection_compat_28' can be reduced. [variableScope]
  bool use_collection_compat_28 = true;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_280.c:1709:8: style: The scope of the variable 'use_collection_compat_28' can be reduced. [variableScope]
  bool use_collection_compat_28 = true;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:10180:5: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
    fd->mainlist = &mainlist;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:12434:24: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (mainptr->curlib->filedata) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:12424:24: note: First condition
    if (mainptr->curlib->filedata) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:12434:24: note: Second condition
    if (mainptr->curlib->filedata) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:696:26: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (bmain->versionfile <= 169) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:686:26: note: First condition
  if (bmain->versionfile <= 169) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:696:26: note: Second condition
  if (bmain->versionfile <= 169) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:2502:32: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (bmain->versionfile < 246 || (bmain->versionfile == 246 && bmain->subversionfile < 1)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:2481:32: note: First condition
  if (bmain->versionfile < 246 || (bmain->versionfile == 246 && bmain->subversionfile < 1)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:2502:32: note: Second condition
  if (bmain->versionfile < 246 || (bmain->versionfile == 246 && bmain->subversionfile < 1)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\blentranslation\intern\blt_lang.c:130:26: style: The scope of the variable 'sep2' can be reduced. [variableScope]
      char *loc, *sep1, *sep2, *sep3;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\blentranslation\intern\blt_lang.c:130:33: style: The scope of the variable 'sep3' can be reduced. [variableScope]
      char *loc, *sep1, *sep2, *sep3;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:218:7: style: The scope of the variable 'nodeid' can be reduced. [variableScope]
  ID *nodeid;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:219:10: style: The scope of the variable 'image' can be reduced. [variableScope]
  Image *image;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:220:14: style: The scope of the variable 'iuser' can be reduced. [variableScope]
  ImageUser *iuser;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:281:20: style: The scope of the variable 'layer' can be reduced. [variableScope]
  CustomDataLayer *layer;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:282:11: style: The scope of the variable 'mtf' can be reduced. [variableScope]
  MTFace *mtf;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:283:9: style: The scope of the variable 'mcol' can be reduced. [variableScope]
  MCol *mcol;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:284:10: style: The scope of the variable 'tf' can be reduced. [variableScope]
  TFace *tf;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:408:12: style: The scope of the variable 'paf' can be reduced. [variableScope]
  PartEff *paf;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:717:14: style: The scope of the variable 'paf' can be reduced. [variableScope]
    PartEff *paf;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:1242:14: style: The scope of the variable 'ed' can be reduced. [variableScope]
    Editing *ed;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:2375:11: style: The scope of the variable 'a' can be reduced. [variableScope]
      int a;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\versioning_legacy.c:2590:14: style: The scope of the variable 'ed' can be reduced. [variableScope]
    Editing *ed;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:4114:41: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
          BLI_endian_switch_float_array((float *)poin, b);
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:787:7: style: The scope of the variable 'readsize' can be reduced. [variableScope]
  int readsize;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:1021:37: style: The scope of the variable 'num' can be reduced. [variableScope]
  char header[SIZEOFBLENDERHEADER], num[4];
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:1225:10: style: The scope of the variable 'chunkoffset' can be reduced. [variableScope]
  size_t chunkoffset, readsize, totread;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:1225:23: style: The scope of the variable 'readsize' can be reduced. [variableScope]
  size_t chunkoffset, readsize, totread;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:1225:33: style: The scope of the variable 'totread' can be reduced. [variableScope]
  size_t chunkoffset, readsize, totread;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:2456:12: style: The scope of the variable 'lpoin' can be reduced. [variableScope]
  int64_t *lpoin, *lmat;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:2457:8: style: The scope of the variable 'ipoin' can be reduced. [variableScope]
  int *ipoin, *imat;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:2458:10: style: The scope of the variable 'len' can be reduced. [variableScope]
  size_t len;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:2532:16: style: The scope of the variable 'array' can be reduced. [variableScope]
  IDProperty **array;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:2533:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:9268:13: style: The scope of the variable 'lb' can be reduced. [variableScope]
  ListBase *lb;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:9269:15: style: The scope of the variable 'allocname' can be reduced. [variableScope]
  const char *allocname;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\readfile.c:11463:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\writefile.c:2247:5: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
    mesh = old_mesh;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\writefile.c:3749:5: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
    hair = old_hair;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\writefile.c:2256:9: style: Condition 'flayers' is always true [knownConditionTrueFalse]
    if (flayers && flayers != flayers_buff) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\writefile.c:3811:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, tot;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\writefile.c:3811:10: style: The scope of the variable 'tot' can be reduced. [variableScope]
  int a, tot;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\writefile.c:2247:10: style: Variable 'mesh' is assigned a value that is never used. [unreadVariable]
    mesh = old_mesh;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\blenloader\intern\writefile.c:3749:10: style: Variable 'hair' is assigned a value that is never used. [unreadVariable]
    hair = old_hair;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_delete.c:109:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_delete.c:285:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_core.c:1619:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_core.c:1802:11: style: The scope of the variable 'v_old' can be reduced. [variableScope]
  BMVert *v_old, *v_target;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_core.c:1805:7: style: The scope of the variable 'radlen' can be reduced. [variableScope]
  int radlen, i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_core.c:1805:15: style: The scope of the variable 'i' can be reduced. [variableScope]
  int radlen, i;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_core.c:1806:8: style: The scope of the variable 'edok' can be reduced. [variableScope]
  bool edok;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_core.c:1817:9: style: The scope of the variable 'valence1' can be reduced. [variableScope]
    int valence1, valence2;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_core.c:1817:19: style: The scope of the variable 'valence2' can be reduced. [variableScope]
    int valence1, valence2;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_core.c:2573:11: style: The scope of the variable 'l' can be reduced. [variableScope]
  BMLoop *l;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_edgeloop.c:612:15: style: Variable 'node_prev' is assigned a value that is never used. [unreadVariable]
    node_prev = node_curr;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_edgeloop.c:781:20: style: Variable 'split_swap' is assigned a value that is never used. [unreadVariable]
        split_swap = !split_swap;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_edgeloop.c:784:17: style: Variable 'iter_prev' is assigned a value that is never used. [unreadVariable]
      iter_prev += 1;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_interp.c:1240:20: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  void *data_tmp = alloca(size);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_interp.c:1258:20: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  void *data_tmp = alloca(size);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_core.c:1801:11: style: The scope of the variable 'e_old' can be reduced. [variableScope]
  BMEdge *e_old;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_marking.c:242:11: style: The scope of the variable 'e' can be reduced. [variableScope]
  BMEdge *e;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_marking.c:358:8: style: The scope of the variable 'ok' can be reduced. [variableScope]
  bool ok;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_marking.c:1184:15: style: The scope of the variable 'ele' can be reduced. [variableScope]
      BMElem *ele;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:426:11: portability: Casting from const float * to const unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
      if (FLT_EQ_NONAN(vl, virtual_lock) && vl != FLT_MAX) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:426:11: portability: Casting from float * to const unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
      if (FLT_EQ_NONAN(vl, virtual_lock) && vl != FLT_MAX) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:186:11: style: The scope of the variable 'v' can be reduced. [variableScope]
  BMVert *v;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:187:11: style: The scope of the variable 'e' can be reduced. [variableScope]
  BMEdge *e;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:188:11: style: The scope of the variable 'l' can be reduced. [variableScope]
  BMLoop *l;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:189:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:606:24: style: The scope of the variable 'no' can be reduced. [variableScope]
          const float *no;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:1316:11: style: The scope of the variable 'e' can be reduced. [variableScope]
  BMEdge *e;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:1578:11: style: The scope of the variable 'l' can be reduced. [variableScope]
  BMLoop *l;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:1579:11: style: The scope of the variable 'v' can be reduced. [variableScope]
  BMVert *v;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh.c:1611:18: style: Variable 'lnor_ed' is assigned a value that is never used. [unreadVariable]
          lnor_ed++;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh_conv.c:658:5: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
  i = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh_conv.c:650:6: note: i is assigned
    i++;
     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh_conv.c:658:5: note: i is overwritten
  i = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh_conv.c:685:5: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
  i = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh_conv.c:679:6: note: i is assigned
    i++;
     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh_conv.c:685:5: note: i is overwritten
  i = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh_conv.c:798:12: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
    for (i = 0, selected = bm->selected.first; selected; i++, selected = selected->next) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh_conv.c:716:6: note: i is assigned
    i++;
     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh_conv.c:798:12: note: i is overwritten
    for (i = 0, selected = bm->selected.first; selected; i++, selected = selected->next) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mods.c:386:18: warning: Either the condition 'v_new!=NULL' is redundant or there is possible null pointer dereference: v_new. [nullPointerRedundantCheck]
      copy_v3_v3(v_new->co, cos[i]);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mods.c:383:24: note: Assuming that condition 'v_new!=NULL' is not redundant
      BLI_assert(v_new != NULL);
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mods.c:382:48: note: Assignment 'v_new=bmesh_kernel_split_edge_make_vert(bm,v_b,e,&e_new)', assigned value is 0
      v_new = bmesh_kernel_split_edge_make_vert(bm, v_b, e, &e_new);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mods.c:386:18: note: Null pointer dereference
      copy_v3_v3(v_new->co, cos[i]);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mods.c:350:11: style: The scope of the variable 'e' can be reduced. [variableScope]
  BMEdge *e, *e_new;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mods.c:351:11: style: The scope of the variable 'v_new' can be reduced. [variableScope]
  BMVert *v_new;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mods.c:354:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, j;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mods.c:354:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mods.c:712:9: style: The scope of the variable 'percent' can be reduced. [variableScope]
  float percent;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_mesh_validate.c:73:3: error: syntax error [syntaxError]
  ERRMSG("This is a debugging function and not intended for general use, running slow test!");
  ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:920:12: style: Unused variable: e [unusedVariable]
  CDTEdge *e;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:921:12: style: Unused variable: va [unusedVariable]
  CDTVert *va, *vb;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\blenlib\intern\delaunay_2d.c:921:17: style: Unused variable: vb [unusedVariable]
  CDTVert *va, *vb;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:123:13: style: The scope of the variable 'slot' can be reduced. [variableScope]
  BMOpSlot *slot;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:150:13: style: The scope of the variable 'slot' can be reduced. [variableScope]
  BMOpSlot *slot;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:773:12: style: The scope of the variable 'ele_f' can be reduced. [variableScope]
  BMElemF *ele_f;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:820:23: style: The scope of the variable 'i' can be reduced. [variableScope]
  int totelement = 0, i = 0;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:881:23: style: The scope of the variable 'i' can be reduced. [variableScope]
  int totelement = 0, i = 0;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:1049:19: style: The scope of the variable 'i' can be reduced. [variableScope]
  int totelement, i = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:421:7: error: Uninitialized variable: size [uninitvar]
  if (size == 4) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:1832:80: note: Calling function 'BMO_slot_mat_set', 5th argument 'size' value is <Uninit>
          BMO_slot_mat_set(op, op->slots_in, slot_name, va_arg(vlist, void *), size);
                                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:421:7: note: Uninitialized variable: size
  if (size == 4) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:1832:80: error: Uninitialized variable: size [uninitvar]
          BMO_slot_mat_set(op, op->slots_in, slot_name, va_arg(vlist, void *), size);
                                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:860:10: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
        i++;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:929:12: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
          i++;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_operators.c:1097:12: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
          i++;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_polygon.c:1770:27: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
        unsigned int *tri = tris[j];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_polygon_edgenet.c:663:20: style: Variable 'l_first' is reassigned a value before the old one has been used. [redundantAssignment]
  l_iter = l_first = BM_FACE_FIRST_LOOP(f);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_polygon_edgenet.c:643:25: note: l_first is assigned
                l_first = l_iter;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_polygon_edgenet.c:663:20: note: l_first is overwritten
  l_iter = l_first = BM_FACE_FIRST_LOOP(f);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_polygon_edgenet.c:1573:21: style: Variable 'vert_range[0]' is assigned a value that is never used. [unreadVariable]
      vert_range[0] = vert_range[1];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_structure.c:205:20: style: The scope of the variable 'e_first' can be reduced. [variableScope]
  BMEdge *e_iter, *e_first;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:2628:16: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    group_item = group_index[group_curr];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:2684:18: portability: Assigning a pointer to an integer is not portable. [AssignmentAddressToInteger]
  *r_group_index = group_index;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:2784:16: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    group_item = group_index[group_curr];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:2820:18: portability: Assigning a pointer to an integer is not portable. [AssignmentAddressToInteger]
  *r_group_index = group_index;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:2913:13: portability: Assigning a pointer to an integer is not portable. [AssignmentAddressToInteger]
  *r_groups = groups;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:71:30: warning: Either the condition 'l!=NULL' is redundant or there is possible null pointer dereference: l. [nullPointerRedundantCheck]
  BLI_assert(BM_vert_in_edge(l->e, v));
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:61:16: note: Assuming that condition 'l!=NULL' is not redundant
  BLI_assert(l != NULL);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:60:38: note: Assignment 'l=BM_face_edge_share_loop(f,e)', assigned value is 0
  BMLoop *l = BM_face_edge_share_loop(f, e);
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:62:34: note: Calling function 'BM_loop_other_edge_loop', 1st argument 'l' value is 0
  return BM_loop_other_edge_loop(l, v);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:71:30: note: Null pointer dereference
  BLI_assert(BM_vert_in_edge(l->e, v));
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:72:10: warning: Either the condition 'l!=NULL' is redundant or there is possible null pointer dereference: l. [nullPointerRedundantCheck]
  return l->v == v ? l->prev : l->next;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:61:16: note: Assuming that condition 'l!=NULL' is not redundant
  BLI_assert(l != NULL);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:60:38: note: Assignment 'l=BM_face_edge_share_loop(f,e)', assigned value is 0
  BMLoop *l = BM_face_edge_share_loop(f, e);
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:62:34: note: Calling function 'BM_loop_other_edge_loop', 1st argument 'l' value is 0
  return BM_loop_other_edge_loop(l, v);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:72:10: note: Null pointer dereference
  return l->v == v ? l->prev : l->next;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:1307:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:1328:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_query.c:377:22: style: Variable 'dot_best' is assigned a value that is never used. [unreadVariable]
            dot_best = dot;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_walkers_impl.c:140:11: style: The scope of the variable 'v' can be reduced. [variableScope]
  BMVert *v;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_walkers_impl.c:179:11: style: The scope of the variable 'v' can be reduced. [variableScope]
  BMVert *v;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_walkers_impl.c:556:15: style: The scope of the variable 'e2' can be reduced. [variableScope]
  BMEdge *e, *e2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_walkers_impl.c:622:15: style: The scope of the variable 'v2' can be reduced. [variableScope]
  BMVert *v, *v2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\intern\bmesh_walkers_impl.c:696:5: style: Variable 'f' is assigned a value that is never used. [unreadVariable]
  f = l->f;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_connect_concave.c:91:7: style: Same expression used in consecutive assignments of 'faces_array_tot' and 'edges_array_tot'. [duplicateAssignExpression]
  int faces_array_tot = f_base_len - 3;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_connect_concave.c:92:7: note: Same expression used in consecutive assignments of 'faces_array_tot' and 'edges_array_tot'.
  int edges_array_tot = f_base_len - 3;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_connect_concave.c:91:7: note: Same expression used in consecutive assignments of 'faces_array_tot' and 'edges_array_tot'.
  int faces_array_tot = f_base_len - 3;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_connect_nonplanar.c:41:17: style: The scope of the variable 'z_curr' can be reduced. [variableScope]
  float z_prev, z_curr;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_create.c:69:13: style: The scope of the variable 'e' can be reduced. [variableScope]
    BMEdge *e;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_connect_pair.c:561:15: style: The scope of the variable 'angle_cos_test' can be reduced. [variableScope]
        float angle_cos_test;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_dissolve.c:405:16: error: Uninitialized variable: l_first [uninitvar]
      l_iter = l_first;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_dissolve.c:409:43: error: Uninitialized variable: l_first [uninitvar]
      } while ((l_iter = l_iter->next) != l_first);
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_dissolve.c:411:17: error: Uninitialized variable: l_first [uninitvar]
      e_first = l_first->e;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_edgenet.c:259:13: style: The scope of the variable 'v1' can be reduced. [variableScope]
    BMVert *v1, *v2;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_edgenet.c:259:18: style: The scope of the variable 'v2' can be reduced. [variableScope]
    BMVert *v1, *v2;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_extrude.c:179:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_extrude.c:247:15: style: The scope of the variable 'dupev' can be reduced. [variableScope]
  BMVert *v, *dupev;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_extrude.c:248:11: style: The scope of the variable 'e' can be reduced. [variableScope]
  BMEdge *e;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_fill_grid.c:219:65: warning: Found suspicious operator ',' [constStatement]
  BMLoop *((*larr_x_a)[2]), *((*larr_x_b)[2]), *((*larr_y_a)[2]), *((*larr_y_b)[2]);
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_hull.c:261:10: style: The scope of the variable 'f_on_hull' can be reduced. [variableScope]
    bool f_on_hull;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_inset.c:1083:21: warning: Identical inner 'if' condition is always true. [identicalInnerCondition]
                if (use_even_offset) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_inset.c:687:34: note: 'use_even_boundary' is assigned value 'use_even_offset' here.
  const bool use_even_boundary = use_even_offset; /* could make own option */
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_inset.c:1022:19: note: outer condition: use_even_boundary
              if (use_even_boundary) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_inset.c:1083:21: note: identical inner condition: use_even_offset
                if (use_even_offset) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_inset.c:796:18: style: Variable 'es' is reassigned a value before the old one has been used. [redundantAssignment]
  for (i = 0, es = edge_info; i < edge_info_len; i++, es++) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_inset.c:773:9: note: es is assigned
      es++;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_inset.c:796:18: note: es is overwritten
  for (i = 0, es = edge_info; i < edge_info_len; i++, es++) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_offset_edgeloops.c:243:13: style: The scope of the variable 'v' can be reduced. [variableScope]
    BMVert *v;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_poke.c:69:13: style: The scope of the variable 'f_new' can be reduced. [variableScope]
    BMFace *f_new;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_poke.c:70:24: style: The scope of the variable 'f_center_mean' can be reduced. [variableScope]
    float f_center[3], f_center_mean[3];
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_rotate_edges.c:236:11: style: The scope of the variable 'e' can be reduced. [variableScope]
  BMEdge *e;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_removedoubles.c:322:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (use_targetmap_all) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_removedoubles.c:202:34: note: 'use_targetmap_all' is assigned value 'has_selected' here.
  const bool use_targetmap_all = has_selected;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_removedoubles.c:318:7: note: First condition
  if (has_selected) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_removedoubles.c:322:7: note: Second condition
  if (use_targetmap_all) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_removedoubles.c:485:13: style: The scope of the variable 'v_tar' can be reduced. [variableScope]
    BMVert *v_tar;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:245:11: style: The if condition is the same as the previous if condition [duplicateCondition]
      if (has_4_vert) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:241:11: note: First condition
      if (has_4_vert) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:245:11: note: Second condition
      if (has_4_vert) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:408:9: style: The scope of the variable 'beta' can be reduced. [variableScope]
  float beta;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:410:11: style: The scope of the variable 'v' can be reduced. [variableScope]
  BMVert *v;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:431:7: style: The scope of the variable 'm_vertex_id' can be reduced. [variableScope]
  int m_vertex_id;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:432:9: style: The scope of the variable 'leni' can be reduced. [variableScope]
  float leni, lene;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:432:15: style: The scope of the variable 'lene' can be reduced. [variableScope]
  float leni, lene;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:433:15: style: The scope of the variable 'vend' can be reduced. [variableScope]
  float vini, vend;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:434:10: style: The scope of the variable 'vi1' can be reduced. [variableScope]
  float *vi1, *vi2, ve1[3], ve2[3];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_smooth_laplacian.c:434:16: style: The scope of the variable 'vi2' can be reduced. [variableScope]
  float *vi1, *vi2, ve1[3], ve2[3];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide.c:252:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide.c:446:11: style: The scope of the variable 'v' can be reduced. [variableScope]
  BMVert *v, v1_tmp = *edge->v1, v2_tmp = *edge->v2, *v1 = edge->v1, *v2 = edge->v2;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide.c:569:11: style: The scope of the variable 'e' can be reduced. [variableScope]
  BMEdge *e, *e_new, e_tmp;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide.c:922:11: style: The scope of the variable 'edge' can be reduced. [variableScope]
  BMEdge *edge;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide.c:1028:11: style: The scope of the variable 'vec1' can be reduced. [variableScope]
    float vec1[3], vec2[3];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide.c:1028:20: style: The scope of the variable 'vec2' can be reduced. [variableScope]
    float vec1[3], vec2[3];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:873:27: warning: Either the condition 'v_iter_a_step?v_iter_a_step->prev:lb_a->last' is redundant or there is possible null pointer dereference: v_iter_a_step. [nullPointerRedundantCheck]
  return !(BM_edge_exists(v_iter_a_step->data, v_iter_b_step->data) ||
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:870:33: note: Assuming that condition 'v_iter_a_step?v_iter_a_step->prev:lb_a->last' is not redundant
  v_iter_a_step = v_iter_a_step ? v_iter_a_step->prev : lb_a->last;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:870:33: note: Assignment 'v_iter_a_step=v_iter_a_step?v_iter_a_step->prev:lb_a->last', assigned value is 0
  v_iter_a_step = v_iter_a_step ? v_iter_a_step->prev : lb_a->last;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:873:27: note: Null pointer dereference
  return !(BM_edge_exists(v_iter_a_step->data, v_iter_b_step->data) ||
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:873:48: warning: Either the condition 'v_iter_b_step?v_iter_b_step->prev:lb_b->last' is redundant or there is possible null pointer dereference: v_iter_b_step. [nullPointerRedundantCheck]
  return !(BM_edge_exists(v_iter_a_step->data, v_iter_b_step->data) ||
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:871:33: note: Assuming that condition 'v_iter_b_step?v_iter_b_step->prev:lb_b->last' is not redundant
  v_iter_b_step = v_iter_b_step ? v_iter_b_step->prev : lb_b->last;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:871:33: note: Assignment 'v_iter_b_step=v_iter_b_step?v_iter_b_step->prev:lb_b->last', assigned value is 0
  v_iter_b_step = v_iter_b_step ? v_iter_b_step->prev : lb_b->last;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:873:48: note: Null pointer dereference
  return !(BM_edge_exists(v_iter_a_step->data, v_iter_b_step->data) ||
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:874:55: warning: Either the condition 'v_iter_b_step?v_iter_b_step->prev:lb_b->last' is redundant or there is possible null pointer dereference: v_iter_b_step. [nullPointerRedundantCheck]
           BM_edge_exists(v_iter_a_first->next->data, v_iter_b_step->data) ||
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:871:33: note: Assuming that condition 'v_iter_b_step?v_iter_b_step->prev:lb_b->last' is not redundant
  v_iter_b_step = v_iter_b_step ? v_iter_b_step->prev : lb_b->last;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:871:33: note: Assignment 'v_iter_b_step=v_iter_b_step?v_iter_b_step->prev:lb_b->last', assigned value is 0
  v_iter_b_step = v_iter_b_step ? v_iter_b_step->prev : lb_b->last;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:874:55: note: Null pointer dereference
           BM_edge_exists(v_iter_a_first->next->data, v_iter_b_step->data) ||
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:875:55: warning: Either the condition 'v_iter_a_step?v_iter_a_step->prev:lb_a->last' is redundant or there is possible null pointer dereference: v_iter_a_step. [nullPointerRedundantCheck]
           BM_edge_exists(v_iter_b_first->next->data, v_iter_a_step->data));
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:870:33: note: Assuming that condition 'v_iter_a_step?v_iter_a_step->prev:lb_a->last' is not redundant
  v_iter_a_step = v_iter_a_step ? v_iter_a_step->prev : lb_a->last;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:870:33: note: Assignment 'v_iter_a_step=v_iter_a_step?v_iter_a_step->prev:lb_a->last', assigned value is 0
  v_iter_a_step = v_iter_a_step ? v_iter_a_step->prev : lb_a->last;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_subdivide_edgering.c:875:55: note: Null pointer dereference
           BM_edge_exists(v_iter_b_first->next->data, v_iter_a_step->data));
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_primitive.c:1502:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (calc_uvs) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_primitive.c:1498:7: note: First condition
  if (calc_uvs) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_primitive.c:1502:7: note: Second condition
  if (calc_uvs) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:410:5: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
  i = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:407:6: note: i is assigned
    i++;
     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:410:5: note: i is overwritten
  i = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:53:37: style: The scope of the variable 'imat_space' can be reduced. [variableScope]
  float mat[4][4], mat_space[4][4], imat_space[4][4];
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:362:10: style: The scope of the variable 'co' can be reduced. [variableScope]
  float *co, *co2, clip_dist = BMO_slot_float_get(op->slots_in, "clip_dist");
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:364:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j, clipx, clipy, clipz;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:435:11: style: The scope of the variable 'fs' can be reduced. [variableScope]
  BMFace *fs;      /* current face */
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:521:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:538:11: style: The scope of the variable 'fs' can be reduced. [variableScope]
  BMFace *fs;      /* current face */
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:572:19: style: The scope of the variable 'p_lcol' can be reduced. [variableScope]
        MLoopCol *p_lcol; /* previous loop color */
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:623:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:462:12: style: Variable 'n' is assigned a value that is never used. [unreadVariable]
          n++;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:478:19: style: Variable 'p_luv' is assigned a value that is never used. [unreadVariable]
            p_luv = luv;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:483:19: style: Variable 'p_luv' is assigned a value that is never used. [unreadVariable]
            p_luv = luv;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:485:12: style: Variable 'n' is assigned a value that is never used. [unreadVariable]
          n++;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:565:12: style: Variable 'n' is assigned a value that is never used. [unreadVariable]
          n++;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:581:20: style: Variable 'p_lcol' is assigned a value that is never used. [unreadVariable]
            p_lcol = lcol;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:586:20: style: Variable 'p_lcol' is assigned a value that is never used. [unreadVariable]
            p_lcol = lcol;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\operators\bmo_utils.c:588:12: style: Variable 'n' is assigned a value that is never used. [unreadVariable]
          n++;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_decimate_unsubdivide.c:275:43: style: Condition '(offset+depth)%nth' is always true [knownConditionTrueFalse]
                        ((offset + depth) % nth) ? VERT_INDEX_IGNORE :
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_decimate_unsubdivide.c:186:23: note: Assignment 'offset=0', assigned value is 0
  const uint offset = 0;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_decimate_unsubdivide.c:275:43: note: Condition '(offset+depth)%nth' is always true
                        ((offset + depth) % nth) ? VERT_INDEX_IGNORE :
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_decimate_unsubdivide.c:181:24: style: Variable 'vert_seek_b_tot' is assigned a value that is never used. [unreadVariable]
  uint vert_seek_b_tot = 0;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_edgenet.c:341:26: style: Argument 'v_ls_prev==NULL' to function BLI_assert is always 1 [constArgument]
    BLI_assert(v_ls_prev == NULL);
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_edgenet.c:314:12: note: Assuming that condition 'v_ls_prev' is not redundant
    while (v_ls_prev) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_edgenet.c:341:26: note: Argument 'v_ls_prev==NULL' to function BLI_assert is always 1
    BLI_assert(v_ls_prev == NULL);
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_decimate_collapse.c:491:7: style: Same expression used in consecutive assignments of 'faces_array_tot' and 'edges_array_tot'. [duplicateAssignExpression]
  int faces_array_tot = f_base_len - 3;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_decimate_collapse.c:492:7: note: Same expression used in consecutive assignments of 'faces_array_tot' and 'edges_array_tot'.
  int edges_array_tot = f_base_len - 3;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_decimate_collapse.c:491:7: note: Same expression used in consecutive assignments of 'faces_array_tot' and 'edges_array_tot'.
  int faces_array_tot = f_base_len - 3;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_intersect.c:359:53: error: syntax error [syntaxError]
  const int ti[3] = {UNPACK3_EX(BM_elem_index_get, t, )};
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_decimate_collapse.c:721:10: style: The scope of the variable 'is_seam' can be reduced. [variableScope]
    bool is_seam = false;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_intersect_edges.c:798:15: style: The scope of the variable 'lambda' can be reduced. [variableScope]
        float lambda, lambda_prev = 0.0f;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_intersect_edges.c:887:30: style: Clarify calculation precedence for '%' and '?'. [clarifyCalculation]
          v_cut += v_cut % 2 ? -1 : 1;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_intersect_edges.c:902:46: style: Clarify calculation precedence for '%' and '?'. [clarifyCalculation]
              v_cut_other += v_cut_other % 2 ? -1 : 1;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_wireframe.c:40:17: warning: Either the condition 'e_a' is redundant or there is possible null pointer dereference: e. [nullPointerRedundantCheck]
  l = l_first = e->l;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_wireframe.c:79:7: note: Assuming that condition 'e_a' is not redundant
  if (e_a && e_b) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_wireframe.c:109:32: note: Calling function 'bm_edge_tag_faceloop', 1st argument 'e_a' value is 0
    l_a = bm_edge_tag_faceloop(e_a);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_wireframe.c:40:17: note: Null pointer dereference
  l = l_first = e->l;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_wireframe.c:60:17: style: The scope of the variable 'l_b' can be reduced. [variableScope]
  BMLoop *l_a, *l_b;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_wireframe.c:63:20: style: The scope of the variable 'tvec_b' can be reduced. [variableScope]
  float tvec_a[3], tvec_b[3];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_CompositorContext.cpp:23:20: warning: Member variable 'CompositorContext::m_rendering' is not initialized in the constructor. [uninitMemberVar]
CompositorContext::CompositorContext()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_CompositorContext.cpp:23:20: warning: Member variable 'CompositorContext::m_bnodetree' is not initialized in the constructor. [uninitMemberVar]
CompositorContext::CompositorContext()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_CompositorContext.cpp:23:20: warning: Member variable 'CompositorContext::m_previews' is not initialized in the constructor. [uninitMemberVar]
CompositorContext::CompositorContext()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_CompositorContext.cpp:23:20: warning: Member variable 'CompositorContext::m_viewName' is not initialized in the constructor. [uninitMemberVar]
CompositorContext::CompositorContext()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_MemoryProxy.h:68:3: style: Class 'MemoryProxy' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MemoryProxy(DataType type);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeConverter.h:44:3: style: Class 'NodeConverter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  NodeConverter(NodeOperationBuilder *builder);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_CPUDevice.h:31:3: style: Class 'CPUDevice' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CPUDevice(int thread_id);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_CPUDevice.h:37:8: style: The function 'execute' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void execute(WorkPackage *work);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_Device.h:59:16: note: Virtual function in base class
  virtual void execute(WorkPackage *work) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_CPUDevice.h:37:8: note: Function in derived class
  void execute(WorkPackage *work);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionGroup.cpp:132:36: style: C-style pointer casting [cstyleCast]
    this->m_chunkExecutionStates = (ChunkExecutionState *)MEM_mallocN(
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionGroup.cpp:144:44: style: C-style pointer casting [cstyleCast]
      ReadBufferOperation *readOperation = (ReadBufferOperation *)operation;
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionGroup.cpp:227:31: style: C-style pointer casting [cstyleCast]
    ViewerOperation *viewer = (ViewerOperation *)operation;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionGroup.cpp:250:33: style: C-style pointer casting [cstyleCast]
      ChunkOrder *chunkOrders = (ChunkOrder *)MEM_mallocN(
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionGroup.cpp:289:33: style: C-style pointer casting [cstyleCast]
      ChunkOrder *chunkOrders = (ChunkOrder *)MEM_mallocN(
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionGroup.cpp:387:9: style: C-style pointer casting [cstyleCast]
        (ReadBufferOperation *)this->m_cachedReadOperations[index];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionGroup.cpp:477:44: style: C-style pointer casting [cstyleCast]
    WriteBufferOperation *writeOperation = (WriteBufferOperation *)operation;
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionGroup.cpp:559:9: style: C-style pointer casting [cstyleCast]
        (ReadBufferOperation *)this->m_cachedReadOperations[index];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionGroup.cpp:594:9: style: C-style pointer casting [cstyleCast]
        (ReadBufferOperation *)this->m_cachedReadOperations[index];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_Debug.cpp:131:38: style: C-style pointer casting [cstyleCast]
    const ViewerOperation *viewer = (const ViewerOperation *)operation;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_Debug.cpp:395:35: style: C-style pointer casting [cstyleCast]
      ReadBufferOperation *read = (ReadBufferOperation *)operation;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6053:13: warning: Either the condition 'e!=NULL' is redundant or there is possible null pointer dereference: e. [nullPointerRedundantCheck]
      bme = e->e;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6052:20: note: Assuming that condition 'e!=NULL' is not redundant
      BLI_assert(e != NULL);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6051:25: note: Assignment 'e=find_edge_half(bv,l->e)', assigned value is 0
      e = find_edge_half(bv, l->e);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6053:13: note: Null pointer dereference
      bme = e->e;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6058:11: warning: Either the condition 'e!=NULL' is redundant or there is possible null pointer dereference: e. [nullPointerRedundantCheck]
      if (e->prev == eprev) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6052:20: note: Assuming that condition 'e!=NULL' is not redundant
      BLI_assert(e != NULL);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6051:25: note: Assignment 'e=find_edge_half(bv,l->e)', assigned value is 0
      e = find_edge_half(bv, l->e);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6058:11: note: Null pointer dereference
      if (e->prev == eprev) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6437:10: warning: Either the condition 'e1&&e2' is redundant or there is possible null pointer dereference: e2. [nullPointerRedundantCheck]
  bmv2 = e2->rightv->nv.v;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6420:17: note: Assuming that condition 'e1&&e2' is not redundant
  BLI_assert(e1 && e2);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6418:22: note: Assignment 'e2=find_edge_half(bv2,bme)', assigned value is 0
  e2 = find_edge_half(bv2, bme);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6437:10: note: Null pointer dereference
  bmv2 = e2->rightv->nv.v;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionSystem.cpp:144:44: style: C-style pointer casting [cstyleCast]
      ReadBufferOperation *readOperation = (ReadBufferOperation *)operation;
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6438:10: warning: Either the condition 'e1&&e2' is redundant or there is possible null pointer dereference: e2. [nullPointerRedundantCheck]
  bmv3 = e2->leftv->nv.v;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6420:17: note: Assuming that condition 'e1&&e2' is not redundant
  BLI_assert(e1 && e2);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6418:22: note: Assignment 'e2=find_edge_half(bv2,bme)', assigned value is 0
  e2 = find_edge_half(bv2, bme);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6438:10: note: Null pointer dereference
  bmv3 = e2->leftv->nv.v;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_ExecutionSystem.cpp:163:44: style: C-style pointer casting [cstyleCast]
      ReadBufferOperation *readOperation = (ReadBufferOperation *)operation;
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_MemoryBuffer.cpp:205:26: style: C-style pointer casting [cstyleCast]
  MemoryBuffer *buffer = (MemoryBuffer *)userdata;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6447:8: warning: Either the condition 'e1&&e2' is redundant or there is possible null pointer dereference: e2. [nullPointerRedundantCheck]
  i2 = e2->leftv->index;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6420:17: note: Assuming that condition 'e1&&e2' is not redundant
  BLI_assert(e1 && e2);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6418:22: note: Assignment 'e2=find_edge_half(bv2,bme)', assigned value is 0
  e2 = find_edge_half(bv2, bme);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6447:8: note: Null pointer dereference
  i2 = e2->leftv->index;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_MemoryBuffer.cpp:164:7: style: The scope of the variable 'offset' can be reduced. [variableScope]
  int offset;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_MemoryProxy.cpp:21:14: warning: Member variable 'MemoryProxy::m_buffer' is not initialized in the constructor. [uninitMemberVar]
MemoryProxy::MemoryProxy(DataType datatype)
             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6449:9: warning: Either the condition 'bv1&&bv2' is redundant or there is possible null pointer dereference: bv2. [nullPointerRedundantCheck]
  vm2 = bv2->vmesh;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6415:18: note: Assuming that condition 'bv1&&bv2' is not redundant
  BLI_assert(bv1 && bv2);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6413:21: note: Assignment 'bv2=find_bevvert(bp,bme->v2)', assigned value is 0
  bv2 = find_bevvert(bp, bme->v2);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6449:9: note: Null pointer dereference
  vm2 = bv2->vmesh;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_MemoryBuffer.cpp:165:7: style: The scope of the variable 'otherOffset' can be reduced. [variableScope]
  int otherOffset;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6514:8: warning: Either the condition 'bv1&&bv2' is redundant or there is possible null pointer dereference: bv2. [nullPointerRedundantCheck]
  if (!bv2->any_seam && bv2->vmesh->mesh_kind == M_NONE) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6415:18: note: Assuming that condition 'bv1&&bv2' is not redundant
  BLI_assert(bv1 && bv2);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6413:21: note: Assignment 'bv2=find_bevvert(bp,bme->v2)', assigned value is 0
  bv2 = find_bevvert(bp, bme->v2);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6514:8: note: Null pointer dereference
  if (!bv2->any_seam && bv2->vmesh->mesh_kind == M_NONE) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:7063:9: style: Variable 'limit' is reassigned a value before the old one has been used. [redundantAssignment]
  limit = la / kab;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:7051:9: note: limit is assigned
  limit = no_collide_offset = bp->offset + 1e6;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:7063:9: note: limit is overwritten
  limit = la / kab;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:505:13: style: The scope of the variable 'eother' can be reduced. [variableScope]
  EdgeHalf *eother;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:653:11: style: The scope of the variable 'l' can be reduced. [variableScope]
  BMLoop *l;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:654:15: style: The scope of the variable 'interp_f' can be reduced. [variableScope]
  BMFace *f, *interp_f;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:656:9: style: The scope of the variable 'save_co' can be reduced. [variableScope]
  float save_co[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:657:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:813:7: style: The scope of the variable 'n' can be reduced. [variableScope]
  int n;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:846:12: style: The scope of the variable 'luv' can be reduced. [variableScope]
  MLoopUV *luv;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1014:47: style: The scope of the variable 'norm_v' can be reduced. [variableScope]
  float dir1[3], dir2[3], dir1n[3], dir2p[3], norm_v[3], norm_v1[3], norm_v2[3];
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1019:17: style: The scope of the variable 'e1next' can be reduced. [variableScope]
  EdgeHalf *e, *e1next, *e2prev;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1019:26: style: The scope of the variable 'e2prev' can be reduced. [variableScope]
  EdgeHalf *e, *e1next, *e2prev;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1332:27: style: The scope of the variable 'co3' can be reduced. [variableScope]
  float start[3], end[3], co3[3], d1[3], d2[3];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1332:35: style: The scope of the variable 'd1' can be reduced. [variableScope]
  float start[3], end[3], co3[3], d1[3], d2[3];
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1332:42: style: The scope of the variable 'd2' can be reduced. [variableScope]
  float start[3], end[3], co3[3], d1[3], d2[3];
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1370:29: style: The scope of the variable 'co4' can be reduced. [variableScope]
        float d3[3], d4[3], co4[3], meetco[3], isect2[3];
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1370:37: style: The scope of the variable 'meetco' can be reduced. [variableScope]
        float d3[3], d4[3], co4[3], meetco[3], isect2[3];
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1370:48: style: The scope of the variable 'isect2' can be reduced. [variableScope]
        float d3[3], d4[3], co4[3], meetco[3], isect2[3];
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1371:13: style: The scope of the variable 'isect_kind' can be reduced. [variableScope]
        int isect_kind;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1456:46: style: The scope of the variable 'dot2' can be reduced. [variableScope]
  float d1[3], d2[3], no[3], no2[3], no3[3], dot2, dot3;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1456:52: style: The scope of the variable 'dot3' can be reduced. [variableScope]
  float d1[3], d2[3], no[3], no2[3], no3[3], dot2, dot3;
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1492:46: style: The scope of the variable 'dot1' can be reduced. [variableScope]
  float d1[3], d2[3], no[3], no2[3], no3[3], dot1, dot2, l1, l2, l3;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1492:52: style: The scope of the variable 'dot2' can be reduced. [variableScope]
  float d1[3], d2[3], no[3], no2[3], no3[3], dot1, dot2, l1, l2, l3;
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1716:41: style: The scope of the variable 'bottom_corner' can be reduced. [variableScope]
  float co[3], co2[3], p[3], map[4][4], bottom_corner[3], top_corner[3];
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1716:59: style: The scope of the variable 'top_corner' can be reduced. [variableScope]
  float co[3], co2[3], p[3], map[4][4], bottom_corner[3], top_corner[3];
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1828:30: style: The scope of the variable 'rinv' can be reduced. [variableScope]
  float a, b, c, x, y, z, r, rinv, dx, dy;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1828:36: style: The scope of the variable 'dx' can be reduced. [variableScope]
  float a, b, c, x, y, z, r, rinv, dx, dy;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:1828:40: style: The scope of the variable 'dy' can be reduced. [variableScope]
  float a, b, c, x, y, z, r, rinv, dx, dy;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:2221:8: style: The scope of the variable 'do_set_strength' can be reduced. [variableScope]
  bool do_set_strength;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:2309:9: style: The scope of the variable 'dot' can be reduced. [variableScope]
  float dot;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:2397:16: style: The scope of the variable 'no' can be reduced. [variableScope]
  const float *no;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:2398:16: style: The scope of the variable 'd' can be reduced. [variableScope]
  float co[3], d;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:2399:8: style: The scope of the variable 'use_tri_fan' can be reduced. [variableScope]
  bool use_tri_fan;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:2619:7: style: The scope of the variable 'in_plane' can be reduced. [variableScope]
  int in_plane, not_in_plane, miter_outer, miter_inner;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:2619:17: style: The scope of the variable 'not_in_plane' can be reduced. [variableScope]
  int in_plane, not_in_plane, miter_outer, miter_inner;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3049:9: style: The scope of the variable 'dir_start_edge' can be reduced. [variableScope]
  float dir_start_edge[3], dir_new_edge[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3049:28: style: The scope of the variable 'dir_new_edge' can be reduced. [variableScope]
  float dir_start_edge[3], dir_new_edge[3];
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3050:9: style: The scope of the variable 'second_best_dot' can be reduced. [variableScope]
  float second_best_dot = 0.0f, best_dot = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3050:33: style: The scope of the variable 'best_dot' can be reduced. [variableScope]
  float second_best_dot = 0.0f, best_dot = 0.0f;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3051:9: style: The scope of the variable 'new_dot' can be reduced. [variableScope]
  float new_dot;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3148:8: style: The scope of the variable 'toward_bv' can be reduced. [variableScope]
  bool toward_bv;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3150:13: style: The scope of the variable 'edgehalf' can be reduced. [variableScope]
  EdgeHalf *edgehalf;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3192:18: style: The scope of the variable 'val' can be reduced. [variableScope]
  double weight, val;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3467:24: style: The scope of the variable 'v3' can be reduced. [variableScope]
  BoundVert *v1, *v2, *v3;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3596:15: style: The scope of the variable 'i' can be reduced. [variableScope]
  int n, ns2, i;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3741:28: style: The scope of the variable 'center' can be reduced. [variableScope]
  float quad[4][3], co[3], center[3];
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3813:16: style: The scope of the variable 'inext' can be reduced. [variableScope]
  int i, j, k, inext;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4158:9: style: The scope of the variable 'ang' can be reduced. [variableScope]
  float ang, absang, totang, angdiff;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4158:14: style: The scope of the variable 'absang' can be reduced. [variableScope]
  float ang, absang, totang, angdiff;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4159:13: style: The scope of the variable 'e' can be reduced. [variableScope]
  EdgeHalf *e;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4307:46: style: The scope of the variable 'snap' can be reduced. [variableScope]
  float plane[4], m[4][4], minv[4][4], p[3], snap[3];
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4455:9: style: The scope of the variable 'd2' can be reduced. [variableScope]
  float d2, beste_d2;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4477:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, ns2;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4580:45: style: The scope of the variable 'im1' can be reduced. [variableScope]
  int n_bndv, ns, ns2, odd, i, j, k, ikind, im1, clstride, iprev, ang_kind;
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4580:67: style: The scope of the variable 'ang_kind' can be reduced. [variableScope]
  int n_bndv, ns, ns2, odd, i, j, k, ikind, im1, clstride, iprev, ang_kind;
                                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4582:39: style: The scope of the variable 'p' can be reduced. [variableScope]
  float *on_edge_cur, *on_edge_prev, *p;
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4585:18: style: The scope of the variable 'e2' can be reduced. [variableScope]
  EdgeHalf *e1, *e2;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4810:38: style: The scope of the variable 'ring' can be reduced. [variableScope]
  int n_bndv, ns, ns2, odd, i, j, k, ring;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4814:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f, *f2, *r_f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4814:15: style: The scope of the variable 'f2' can be reduced. [variableScope]
  BMFace *f, *f2, *r_f;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4815:11: style: The scope of the variable 'bme' can be reduced. [variableScope]
  BMEdge *bme, *bme1, *bme2, *bme3;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5000:9: style: The scope of the variable 'length' can be reduced. [variableScope]
  float length;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5309:11: style: The scope of the variable 'e_eg' can be reduced. [variableScope]
  BMEdge *e_eg, *bme;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5309:18: style: The scope of the variable 'bme' can be reduced. [variableScope]
  BMEdge *e_eg, *bme;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5310:12: style: The scope of the variable 'pro' can be reduced. [variableScope]
  Profile *pro;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5311:9: style: The scope of the variable 'co' can be reduced. [variableScope]
  float co[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5367:10: style: The scope of the variable 'v_weld1' can be reduced. [variableScope]
  float *v_weld1, *v_weld2, co[3];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5367:20: style: The scope of the variable 'v_weld2' can be reduced. [variableScope]
  float *v_weld1, *v_weld2, co[3];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5523:17: style: The scope of the variable 'bme2' can be reduced. [variableScope]
  BMEdge *bme, *bme2, *nextbme;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5526:10: style: The scope of the variable 'tryj' can be reduced. [variableScope]
  int j, tryj, bestj, nsucs, sucindex, k;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5633:19: style: The scope of the variable 'num_shared_face' can be reduced. [variableScope]
  int i, k, ntot, num_shared_face;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeGraph.cpp:114:22: style: C-style pointer casting [cstyleCast]
  for (bNode *node = (bNode *)tree->nodes.first; node; node = node->next) {
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5686:17: style: The scope of the variable 'bme2' can be reduced. [variableScope]
  BMEdge *bme, *bme2;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeGraph.cpp:315:27: style: C-style pointer casting [cstyleCast]
  for (bNode *b_node_io = (bNode *)b_group_tree->nodes.first; b_node_io;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5762:10: style: The scope of the variable 'ccw_test_sum' can be reduced. [variableScope]
  int i, ccw_test_sum;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5766:7: style: The scope of the variable 'fcnt' can be reduced. [variableScope]
  int fcnt;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6033:13: style: The scope of the variable 'n' can be reduced. [variableScope]
  int i, k, n, kstart, kend;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6035:32: style: The scope of the variable 'keep' can be reduced. [variableScope]
  bool go_ccw, corner3special, keep, on_profile_start;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6037:17: style: The scope of the variable 'bme_new' can be reduced. [variableScope]
  BMEdge *bme, *bme_new, *bme_prev;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6037:27: style: The scope of the variable 'bme_prev' can be reduced. [variableScope]
  BMEdge *bme, *bme_new, *bme_prev;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6038:11: style: The scope of the variable 'f_new' can be reduced. [variableScope]
  BMFace *f_new, *f_other;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6038:19: style: The scope of the variable 'f_other' can be reduced. [variableScope]
  BMFace *f_new, *f_other;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6236:18: style: The scope of the variable 'f_index' can be reduced. [variableScope]
  int faces_len, f_index;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6257:11: style: The scope of the variable 'e' can be reduced. [variableScope]
  BMEdge *e;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6258:11: style: The scope of the variable 'vclosest' can be reduced. [variableScope]
  BMVert *vclosest, *vother, *votherclosest;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6258:31: style: The scope of the variable 'votherclosest' can be reduced. [variableScope]
  BMVert *vclosest, *vother, *votherclosest;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6261:12: style: The scope of the variable 'dclosest' can be reduced. [variableScope]
  float d, dclosest;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6355:33: style: The scope of the variable 'bme' can be reduced. [variableScope]
  BMEdge *bme_prev, *bme_next, *bme;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6540:52: style: The scope of the variable 'dnewerr' can be reduced. [variableScope]
  double xmin, xmax, ymin, ymax, dmaxerr, dminerr, dnewerr, xnew, ynew;
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6540:67: style: The scope of the variable 'ynew' can be reduced. [variableScope]
  double xmin, xmax, ymin, ymax, dmaxerr, dminerr, dnewerr, xnew, ynew;
                                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6615:13: style: The scope of the variable 'dmin' can be reduced. [variableScope]
  double d, dmin, dmax;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6615:19: style: The scope of the variable 'dmax' can be reduced. [variableScope]
  double d, dmin, dmax;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6618:10: style: The scope of the variable 'sum' can be reduced. [variableScope]
  double sum;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6619:10: style: The scope of the variable 'temp' can be reduced. [variableScope]
  double temp;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6949:21: style: The scope of the variable 'g' can be reduced. [variableScope]
  float ka, kb, kc, g, h, t, den, no_collide_offset, th1, th2, sin1, sin2, tan1, tan2, limit;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6949:24: style: The scope of the variable 'h' can be reduced. [variableScope]
  float ka, kb, kc, g, h, t, den, no_collide_offset, th1, th2, sin1, sin2, tan1, tan2, limit;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6949:30: style: The scope of the variable 'den' can be reduced. [variableScope]
  float ka, kb, kc, g, h, t, den, no_collide_offset, th1, th2, sin1, sin2, tan1, tan2, limit;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6949:76: style: The scope of the variable 'tan1' can be reduced. [variableScope]
  float ka, kb, kc, g, h, t, den, no_collide_offset, th1, th2, sin1, sin2, tan1, tan2, limit;
                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6949:82: style: The scope of the variable 'tan2' can be reduced. [variableScope]
  float ka, kb, kc, g, h, t, den, no_collide_offset, th1, th2, sin1, sin2, tan1, tan2, limit;
                                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:7078:25: style: The scope of the variable 'offset_factor' can be reduced. [variableScope]
  float limited_offset, offset_factor, collision_offset;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:7171:11: style: The scope of the variable 'v' can be reduced. [variableScope]
  BMVert *v, *v_next;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:7171:15: style: The scope of the variable 'v_next' can be reduced. [variableScope]
  BMVert *v, *v_next;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:7172:11: style: The scope of the variable 'e' can be reduced. [variableScope]
  BMEdge *e;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:7173:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:7174:11: style: The scope of the variable 'l' can be reduced. [variableScope]
  BMLoop *l;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:7175:12: style: The scope of the variable 'bv' can be reduced. [variableScope]
  BevVert *bv;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3402:26: style: Argument 'enext!=NULL' to function BLI_assert is always 1 [constArgument]
        BLI_assert(enext != NULL);
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3399:13: note: Assuming that condition '!enext' is not redundant
        if (!enext) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3402:26: note: Argument 'enext!=NULL' to function BLI_assert is always 1
        BLI_assert(enext != NULL);
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_OpenCLDevice.h:78:8: style: The function 'initialize' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool initialize();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_Device.h:43:16: note: Virtual function in base class
  virtual bool initialize()
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_OpenCLDevice.h:78:8: note: Function in derived class
  bool initialize();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_OpenCLDevice.h:84:8: style: The function 'deinitialize' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void deinitialize();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_Device.h:51:16: note: Virtual function in base class
  virtual void deinitialize()
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_OpenCLDevice.h:84:8: note: Function in derived class
  void deinitialize();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_OpenCLDevice.h:90:8: style: The function 'execute' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void execute(WorkPackage *work);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_Device.h:59:16: note: Virtual function in base class
  virtual void execute(WorkPackage *work) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_OpenCLDevice.h:90:8: note: Function in derived class
  void execute(WorkPackage *work);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_OpenCLDevice.cpp:91:52: style: C-style pointer casting [cstyleCast]
                                                   (ReadBufferOperation *)reader);
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SingleThreadedOperation.h:39:8: style: The function 'executePixel' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void executePixel(float output[4], int x, int y, void *data);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SocketReader.h:77:16: note: Virtual function in base class
  virtual void executePixel(float output[4], int x, int y, void * /*chunkData*/)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SingleThreadedOperation.h:39:8: note: Function in derived class
  void executePixel(float output[4], int x, int y, void *data);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SingleThreadedOperation.h:44:8: style: The function 'initExecution' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void initExecution();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeOperation.h:193:16: note: Virtual function in base class
  virtual void initExecution();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SingleThreadedOperation.h:44:8: note: Function in derived class
  void initExecution();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SingleThreadedOperation.h:49:8: style: The function 'deinitExecution' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void deinitExecution();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeOperation.h:249:16: note: Virtual function in base class
  virtual void deinitExecution();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SingleThreadedOperation.h:49:8: note: Function in derived class
  void deinitExecution();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SingleThreadedOperation.h:51:9: style: The function 'initializeTileData' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void *initializeTileData(rcti *rect);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SocketReader.h:111:17: note: Virtual function in base class
  virtual void *initializeTileData(rcti * /*rect*/)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SingleThreadedOperation.h:51:9: note: Function in derived class
  void *initializeTileData(rcti *rect);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SingleThreadedOperation.h:55:7: style: The function 'isSingleThreaded' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int isSingleThreaded()
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeOperation.h:184:15: note: Virtual function in base class
  virtual int isSingleThreaded()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_SingleThreadedOperation.h:55:7: note: Function in derived class
  int isSingleThreaded()
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeOperationBuilder.cpp:58:18: style: C-style pointer casting [cstyleCast]
    Node *node = (Node *)m_graph.nodes()[index];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeOperationBuilder.cpp:620:36: style: C-style pointer casting [cstyleCast]
    ReadBufferOperation *read_op = (ReadBufferOperation *)op;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeOperationBuilder.cpp:730:38: style: C-style pointer casting [cstyleCast]
      ReadBufferOperation *read_op = (ReadBufferOperation *)op;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeOperationBuilder.cpp:95:35: style: Local variable 'it' shadows outer variable [shadowVariable]
    for (OpInputs::const_iterator it = op_to_list.begin(); it != op_to_list.end(); ++it) {
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeOperationBuilder.cpp:77:41: note: Shadowed declaration
  for (NodeGraph::Links::const_iterator it = m_graph.links().begin(); it != m_graph.links().end();
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_NodeOperationBuilder.cpp:95:35: note: Shadow variable
    for (OpInputs::const_iterator it = op_to_list.begin(); it != op_to_list.end(); ++it) {
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:688:10: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
        i++;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3230:13: style: Variable 'eleft' is assigned a value that is never used. [unreadVariable]
      eleft = v->elast;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:3283:13: style: Variable 'eleft' is assigned a value that is never used. [unreadVariable]
      eleft = v->elast;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4623:10: style: Variable 'e1' is assigned a value that is never used. [unreadVariable]
      e1 = bndv->efirst;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:4624:10: style: Variable 'e2' is assigned a value that is never used. [unreadVariable]
      e2 = bndv->next->efirst;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6573:12: style: Variable 'ymin' is assigned a value that is never used. [unreadVariable]
      ymin = ynew;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:6585:12: style: Variable 'ymax' is assigned a value that is never used. [unreadVariable]
      ymax = ynew;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_WorkScheduler.cpp:77:23: style: C-style pointer casting [cstyleCast]
  CPUDevice *device = (CPUDevice *)data;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_WorkScheduler.cpp:80:18: style: C-style pointer casting [cstyleCast]
  while ((work = (WorkPackage *)BLI_thread_queue_pop(g_cpuqueue))) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_WorkScheduler.cpp:90:20: style: C-style pointer casting [cstyleCast]
  Device *device = (Device *)data;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_WorkScheduler.cpp:93:18: style: C-style pointer casting [cstyleCast]
  while ((work = (WorkPackage *)BLI_thread_queue_pop(g_gpuqueue))) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_WorkScheduler.cpp:371:23: style: C-style pointer casting [cstyleCast]
  CPUDevice *device = (CPUDevice *)BLI_thread_local_get(g_thread_device);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_WorkScheduler.cpp:211:13: style: The scope of the variable 'device' can be reduced. [variableScope]
    Device *device;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_WorkScheduler.cpp:333:13: style: The scope of the variable 'device' can be reduced. [variableScope]
    Device *device;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_AlphaOverNode.h:30:3: style: Class 'AlphaOverNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AlphaOverNode(bNode *editorNode) : Node(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_BilateralBlurNode.h:30:3: style: Class 'BilateralBlurNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BilateralBlurNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_WorkScheduler.cpp:347:13: style: The scope of the variable 'device' can be reduced. [variableScope]
    Device *device;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\intern\COM_WorkScheduler.cpp:123:46: style: Parameter 'context' can be declared with const [constParameter]
void WorkScheduler::start(CompositorContext &context)
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_BokehImageNode.h:30:3: style: Class 'BokehImageNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BokehImageNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_BlurNode.h:30:3: style: Class 'BlurNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BlurNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_BokehBlurNode.h:30:3: style: Class 'BokehBlurNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BokehBlurNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_BoxMaskNode.h:30:3: style: Class 'BoxMaskNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BoxMaskNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_BrightnessNode.h:30:3: style: Class 'BrightnessNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BrightnessNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ChannelMatteNode.h:30:3: style: Class 'ChannelMatteNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ChannelMatteNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ColorBalanceNode.h:30:3: style: Class 'ColorBalanceNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ColorBalanceNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ChromaMatteNode.h:30:3: style: Class 'ChromaMatteNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ChromaMatteNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ColorCorrectionNode.h:30:3: style: Class 'ColorCorrectionNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ColorCorrectionNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ColorCurveNode.h:30:3: style: Class 'ColorCurveNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ColorCurveNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ColorSpillNode.h:30:3: style: Class 'ColorSpillNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ColorSpillNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ColorRampNode.h:30:3: style: Class 'ColorRampNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ColorRampNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ColorToBWNode.h:30:3: style: Class 'ColorToBWNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ColorToBWNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ColorMatteNode.h:30:3: style: Class 'ColorMatteNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ColorMatteNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:35:3: style: Class 'CombineRGBANode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CombineRGBANode(bNode *editorNode) : CombineColorNode(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:44:3: style: Class 'CombineHSVANode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CombineHSVANode(bNode *editorNode) : CombineColorNode(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:53:3: style: Class 'CombineYCCANode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CombineYCCANode(bNode *editorNode) : CombineColorNode(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:62:3: style: Class 'CombineYUVANode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CombineYUVANode(bNode *editorNode) : CombineColorNode(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:39:18: style: The function 'getColorConverter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:30:26: note: Virtual function in base class
  virtual NodeOperation *getColorConverter(const CompositorContext &context) const = 0;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:39:18: note: Function in derived class
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:48:18: style: The function 'getColorConverter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:30:26: note: Virtual function in base class
  virtual NodeOperation *getColorConverter(const CompositorContext &context) const = 0;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:48:18: note: Function in derived class
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:57:18: style: The function 'getColorConverter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:30:26: note: Virtual function in base class
  virtual NodeOperation *getColorConverter(const CompositorContext &context) const = 0;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:57:18: note: Function in derived class
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:66:18: style: The function 'getColorConverter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:30:26: note: Virtual function in base class
  virtual NodeOperation *getColorConverter(const CompositorContext &context) const = 0;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CombineColorNode.h:66:18: note: Function in derived class
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ColorNode.h:30:3: style: Class 'ColorNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ColorNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CompositorNode.h:30:3: style: Class 'CompositorNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CompositorNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ConvertAlphaNode.h:30:3: style: Class 'ConvertAlphaNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ConvertAlphaNode(bNode *editorNode) : Node(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CornerPinNode.h:33:3: style: Class 'CornerPinNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CornerPinNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CropNode.h:30:3: style: Class 'CropNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CropNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_DespeckleNode.h:30:3: style: Class 'DespeckleNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DespeckleNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_CryptomatteNode.h:30:3: style: Class 'CryptomatteNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CryptomatteNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_DenoiseNode.h:30:3: style: Class 'DenoiseNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DenoiseNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_DefocusNode.h:30:3: style: Class 'DefocusNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DefocusNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_DifferenceMatteNode.h:30:3: style: Class 'DifferenceMatteNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DifferenceMatteNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_DilateErodeNode.h:33:3: style: Class 'DilateErodeNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DilateErodeNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_DirectionalBlurNode.h:30:3: style: Class 'DirectionalBlurNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DirectionalBlurNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_DisplaceNode.h:30:3: style: Class 'DisplaceNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DisplaceNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_DistanceMatteNode.h:30:3: style: Class 'DistanceMatteNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DistanceMatteNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_DoubleEdgeMaskNode.h:30:3: style: Class 'DoubleEdgeMaskNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DoubleEdgeMaskNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_EllipseMaskNode.h:30:3: style: Class 'EllipseMaskNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  EllipseMaskNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_FilterNode.h:30:3: style: Class 'FilterNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  FilterNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_FlipNode.h:30:3: style: Class 'FlipNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  FlipNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_GammaNode.h:30:3: style: Class 'GammaNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  GammaNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_GlareNode.h:30:3: style: Class 'GlareNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  GlareNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_HueSaturationValueCorrectNode.h:30:3: style: Class 'HueSaturationValueCorrectNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  HueSaturationValueCorrectNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_HueSaturationValueNode.h:30:3: style: Class 'HueSaturationValueNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  HueSaturationValueNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_IDMaskNode.h:30:3: style: Class 'IDMaskNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  IDMaskNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_InpaintNode.h:30:3: style: Class 'InpaintNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InpaintNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_KeyingScreenNode.h:31:3: style: Class 'KeyingScreenNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  KeyingScreenNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_InvertNode.h:30:3: style: Class 'InvertNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  InvertNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_LensDistortionNode.h:30:3: style: Class 'LensDistortionNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  LensDistortionNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ImageNode.h:47:3: style: Class 'ImageNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ImageNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:35:3: style: Class 'SeparateRGBANode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SeparateRGBANode(bNode *editorNode) : SeparateColorNode(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:44:3: style: Class 'SeparateHSVANode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SeparateHSVANode(bNode *editorNode) : SeparateColorNode(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:53:3: style: Class 'SeparateYCCANode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SeparateYCCANode(bNode *editorNode) : SeparateColorNode(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:62:3: style: Class 'SeparateYUVANode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SeparateYUVANode(bNode *editorNode) : SeparateColorNode(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:39:18: style: The function 'getColorConverter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:30:26: note: Virtual function in base class
  virtual NodeOperation *getColorConverter(const CompositorContext &context) const = 0;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:39:18: note: Function in derived class
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:48:18: style: The function 'getColorConverter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:30:26: note: Virtual function in base class
  virtual NodeOperation *getColorConverter(const CompositorContext &context) const = 0;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:48:18: note: Function in derived class
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:57:18: style: The function 'getColorConverter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:30:26: note: Virtual function in base class
  virtual NodeOperation *getColorConverter(const CompositorContext &context) const = 0;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:57:18: note: Function in derived class
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:66:18: style: The function 'getColorConverter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:30:26: note: Virtual function in base class
  virtual NodeOperation *getColorConverter(const CompositorContext &context) const = 0;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SeparateColorNode.h:66:18: note: Function in derived class
  NodeOperation *getColorConverter(const CompositorContext &context) const;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_KeyingNode.h:58:3: style: Class 'KeyingNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  KeyingNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_LuminanceMatteNode.h:30:3: style: Class 'LuminanceMatteNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  LuminanceMatteNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_MapRangeNode.h:30:3: style: Class 'MapRangeNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MapRangeNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_MapUVNode.h:30:3: style: Class 'MapUVNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MapUVNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_MapValueNode.h:30:3: style: Class 'MapValueNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MapValueNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_MaskNode.h:31:3: style: Class 'MaskNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MaskNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_MathNode.h:30:3: style: Class 'MathNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MathNode(bNode *editorNode) : Node(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_MixNode.h:30:3: style: Class 'MixNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MixNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_MovieClipNode.h:31:3: style: Class 'MovieClipNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MovieClipNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_MovieDistortionNode.h:30:3: style: Class 'MovieDistortionNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MovieDistortionNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_NormalNode.h:30:3: style: Class 'NormalNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  NormalNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_NormalizeNode.h:30:3: style: Class 'NormalizeNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  NormalizeNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_OutputFileNode.h:31:3: style: Class 'OutputFileNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  OutputFileNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_PixelateNode.h:30:3: style: Class 'PixelateNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  PixelateNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_PlaneTrackDeformNode.h:35:3: style: Class 'PlaneTrackDeformNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  PlaneTrackDeformNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_RenderLayersNode.h:34:3: style: Class 'RenderLayersNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  RenderLayersNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_RotateNode.h:30:3: style: Class 'RotateNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  RotateNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ScaleNode.h:30:3: style: Class 'ScaleNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ScaleNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SetAlphaNode.h:30:3: style: Class 'SetAlphaNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SetAlphaNode(bNode *editorNode) : Node(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SplitViewerNode.h:30:3: style: Class 'SplitViewerNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SplitViewerNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_Stabilize2dNode.h:31:3: style: Class 'Stabilize2dNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Stabilize2dNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SwitchNode.h:31:3: style: Class 'SwitchNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SwitchNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SunBeamsNode.h:29:3: style: Class 'SunBeamsNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SunBeamsNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_SwitchViewNode.h:31:3: style: Class 'SwitchViewNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SwitchViewNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_TextureNode.h:31:3: style: Class 'TextureNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TextureNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_TimeNode.h:30:3: style: Class 'TimeNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TimeNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_TrackPositionNode.h:31:3: style: Class 'TrackPositionNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TrackPositionNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_TonemapNode.h:30:3: style: Class 'TonemapNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TonemapNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_TransformNode.h:31:3: style: Class 'TransformNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TransformNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_TranslateNode.h:30:3: style: Class 'TranslateNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TranslateNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ValueNode.h:30:3: style: Class 'ValueNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ValueNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_VectorBlurNode.h:30:3: style: Class 'VectorBlurNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  VectorBlurNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_VectorCurveNode.h:30:3: style: Class 'VectorCurveNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  VectorCurveNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ViewerNode.h:30:3: style: Class 'ViewerNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ViewerNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ViewLevelsNode.h:30:3: style: Class 'ViewLevelsNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ViewLevelsNode(bNode *editorNode);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\nodes\COM_ZCombineNode.h:30:3: style: Class 'ZCombineNode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ZCombineNode(bNode *editorNode) : Node(editorNode)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BilateralBlurOperation.cpp:26:25: warning: Member variable 'BilateralBlurOperation::m_data' is not initialized in the constructor. [uninitMemberVar]
BilateralBlurOperation::BilateralBlurOperation() : NodeOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BilateralBlurOperation.cpp:26:25: warning: Member variable 'BilateralBlurOperation::m_space' is not initialized in the constructor. [uninitMemberVar]
BilateralBlurOperation::BilateralBlurOperation() : NodeOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BlurBaseOperation.cpp:27:20: warning: Member variable 'BlurBaseOperation::m_inputSize' is not initialized in the constructor. [uninitMemberVar]
BlurBaseOperation::BlurBaseOperation(DataType data_type) : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BlurBaseOperation.h:33:3: style: Class 'BlurBaseOperation' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BlurBaseOperation(DataType data_type);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BlurBaseOperation.cpp:70:25: style: The scope of the variable 'val' can be reduced. [variableScope]
  float *gausstab, sum, val;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BlurBaseOperation.cpp:109:27: style: The scope of the variable 'val' can be reduced. [variableScope]
  float *dist_fac_invert, val;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BokehBlurOperation.cpp:27:21: warning: Member variable 'BokehBlurOperation::m_bokehMidX' is not initialized in the constructor. [uninitMemberVar]
BokehBlurOperation::BokehBlurOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BokehBlurOperation.cpp:27:21: warning: Member variable 'BokehBlurOperation::m_bokehMidY' is not initialized in the constructor. [uninitMemberVar]
BokehBlurOperation::BokehBlurOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BokehBlurOperation.cpp:27:21: warning: Member variable 'BokehBlurOperation::m_bokehDimension' is not initialized in the constructor. [uninitMemberVar]
BokehBlurOperation::BokehBlurOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BokehImageOperation.cpp:22:22: warning: Member variable 'BokehImageOperation::m_data' is not initialized in the constructor. [uninitMemberVar]
BokehImageOperation::BokehImageOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BokehBlurOperation.cpp:79:9: style: The scope of the variable 'bokeh' can be reduced. [variableScope]
  float bokeh[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BokehImageOperation.cpp:22:22: warning: Member variable 'BokehImageOperation::m_center' is not initialized in the constructor. [uninitMemberVar]
BokehImageOperation::BokehImageOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BokehImageOperation.cpp:22:22: warning: Member variable 'BokehImageOperation::m_inverseRounding' is not initialized in the constructor. [uninitMemberVar]
BokehImageOperation::BokehImageOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BokehImageOperation.cpp:22:22: warning: Member variable 'BokehImageOperation::m_circularDistance' is not initialized in the constructor. [uninitMemberVar]
BokehImageOperation::BokehImageOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BokehImageOperation.cpp:22:22: warning: Member variable 'BokehImageOperation::m_flapRad' is not initialized in the constructor. [uninitMemberVar]
BokehImageOperation::BokehImageOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BokehImageOperation.cpp:22:22: warning: Member variable 'BokehImageOperation::m_flapRadAdd' is not initialized in the constructor. [uninitMemberVar]
BokehImageOperation::BokehImageOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BoxMaskOperation.cpp:23:19: warning: Member variable 'BoxMaskOperation::m_aspectRatio' is not initialized in the constructor. [uninitMemberVar]
BoxMaskOperation::BoxMaskOperation() : NodeOperation()
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BoxMaskOperation.cpp:23:19: warning: Member variable 'BoxMaskOperation::m_maskType' is not initialized in the constructor. [uninitMemberVar]
BoxMaskOperation::BoxMaskOperation() : NodeOperation()
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BoxMaskOperation.cpp:23:19: warning: Member variable 'BoxMaskOperation::m_data' is not initialized in the constructor. [uninitMemberVar]
BoxMaskOperation::BoxMaskOperation() : NodeOperation()
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BrightnessOperation.cpp:21:22: warning: Member variable 'BrightnessOperation::m_inputBrightnessProgram' is not initialized in the constructor. [uninitMemberVar]
BrightnessOperation::BrightnessOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_BrightnessOperation.cpp:21:22: warning: Member variable 'BrightnessOperation::m_inputContrastProgram' is not initialized in the constructor. [uninitMemberVar]
BrightnessOperation::BrightnessOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_CalculateMeanOperation.cpp:27:25: warning: Member variable 'CalculateMeanOperation::m_result' is not initialized in the constructor. [uninitMemberVar]
CalculateMeanOperation::CalculateMeanOperation() : NodeOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_CalculateStandardDeviationOperation.cpp:27:38: warning: Member variable 'CalculateStandardDeviationOperation::m_standardDeviation' is not initialized in the constructor. [uninitMemberVar]
CalculateStandardDeviationOperation::CalculateStandardDeviationOperation()
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChangeHSVOperation.cpp:21:21: warning: Member variable 'ChangeHSVOperation::m_hueOperation' is not initialized in the constructor. [uninitMemberVar]
ChangeHSVOperation::ChangeHSVOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChangeHSVOperation.cpp:21:21: warning: Member variable 'ChangeHSVOperation::m_saturationOperation' is not initialized in the constructor. [uninitMemberVar]
ChangeHSVOperation::ChangeHSVOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChangeHSVOperation.cpp:21:21: warning: Member variable 'ChangeHSVOperation::m_valueOperation' is not initialized in the constructor. [uninitMemberVar]
ChangeHSVOperation::ChangeHSVOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChannelMatteOperation.cpp:22:24: warning: Member variable 'ChannelMatteOperation::m_matte_channel' is not initialized in the constructor. [uninitMemberVar]
ChannelMatteOperation::ChannelMatteOperation() : NodeOperation()
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChannelMatteOperation.cpp:22:24: warning: Member variable 'ChannelMatteOperation::m_limit_method' is not initialized in the constructor. [uninitMemberVar]
ChannelMatteOperation::ChannelMatteOperation() : NodeOperation()
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChannelMatteOperation.cpp:22:24: warning: Member variable 'ChannelMatteOperation::m_limit_channel' is not initialized in the constructor. [uninitMemberVar]
ChannelMatteOperation::ChannelMatteOperation() : NodeOperation()
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChannelMatteOperation.cpp:22:24: warning: Member variable 'ChannelMatteOperation::m_limit_max' is not initialized in the constructor. [uninitMemberVar]
ChannelMatteOperation::ChannelMatteOperation() : NodeOperation()
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChannelMatteOperation.cpp:22:24: warning: Member variable 'ChannelMatteOperation::m_limit_min' is not initialized in the constructor. [uninitMemberVar]
ChannelMatteOperation::ChannelMatteOperation() : NodeOperation()
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChannelMatteOperation.cpp:22:24: warning: Member variable 'ChannelMatteOperation::m_limit_range' is not initialized in the constructor. [uninitMemberVar]
ChannelMatteOperation::ChannelMatteOperation() : NodeOperation()
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChannelMatteOperation.cpp:22:24: warning: Member variable 'ChannelMatteOperation::m_ids' is not initialized in the constructor. [uninitMemberVar]
ChannelMatteOperation::ChannelMatteOperation() : NodeOperation()
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChromaMatteOperation.cpp:22:23: warning: Member variable 'ChromaMatteOperation::m_settings' is not initialized in the constructor. [uninitMemberVar]
ChromaMatteOperation::ChromaMatteOperation() : NodeOperation()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChromaMatteOperation.cpp:56:27: style: The scope of the variable 'alpha' can be reduced. [variableScope]
  float x_angle, z_angle, alpha;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ChromaMatteOperation.cpp:57:16: style: The scope of the variable 'beta' can be reduced. [variableScope]
  float theta, beta;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorBalanceASCCDLOperation.cpp:34:30: warning: Member variable 'ColorBalanceASCCDLOperation::m_offset' is not initialized in the constructor. [uninitMemberVar]
ColorBalanceASCCDLOperation::ColorBalanceASCCDLOperation() : NodeOperation()
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorBalanceASCCDLOperation.cpp:34:30: warning: Member variable 'ColorBalanceASCCDLOperation::m_power' is not initialized in the constructor. [uninitMemberVar]
ColorBalanceASCCDLOperation::ColorBalanceASCCDLOperation() : NodeOperation()
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorBalanceASCCDLOperation.cpp:34:30: warning: Member variable 'ColorBalanceASCCDLOperation::m_slope' is not initialized in the constructor. [uninitMemberVar]
ColorBalanceASCCDLOperation::ColorBalanceASCCDLOperation() : NodeOperation()
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorBalanceLGGOperation.cpp:39:27: warning: Member variable 'ColorBalanceLGGOperation::m_gain' is not initialized in the constructor. [uninitMemberVar]
ColorBalanceLGGOperation::ColorBalanceLGGOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorBalanceLGGOperation.cpp:39:27: warning: Member variable 'ColorBalanceLGGOperation::m_lift' is not initialized in the constructor. [uninitMemberVar]
ColorBalanceLGGOperation::ColorBalanceLGGOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorBalanceLGGOperation.cpp:39:27: warning: Member variable 'ColorBalanceLGGOperation::m_gamma_inv' is not initialized in the constructor. [uninitMemberVar]
ColorBalanceLGGOperation::ColorBalanceLGGOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorCorrectionOperation.cpp:26:27: warning: Member variable 'ColorCorrectionOperation::m_data' is not initialized in the constructor. [uninitMemberVar]
ColorCorrectionOperation::ColorCorrectionOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorSpillOperation.cpp:23:22: warning: Member variable 'ColorSpillOperation::m_settings' is not initialized in the constructor. [uninitMemberVar]
ColorSpillOperation::ColorSpillOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorSpillOperation.cpp:23:22: warning: Member variable 'ColorSpillOperation::m_channel2' is not initialized in the constructor. [uninitMemberVar]
ColorSpillOperation::ColorSpillOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorSpillOperation.cpp:23:22: warning: Member variable 'ColorSpillOperation::m_channel3' is not initialized in the constructor. [uninitMemberVar]
ColorSpillOperation::ColorSpillOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorSpillOperation.cpp:23:22: warning: Member variable 'ColorSpillOperation::m_rmut' is not initialized in the constructor. [uninitMemberVar]
ColorSpillOperation::ColorSpillOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorSpillOperation.cpp:23:22: warning: Member variable 'ColorSpillOperation::m_gmut' is not initialized in the constructor. [uninitMemberVar]
ColorSpillOperation::ColorSpillOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorSpillOperation.cpp:23:22: warning: Member variable 'ColorSpillOperation::m_bmut' is not initialized in the constructor. [uninitMemberVar]
ColorSpillOperation::ColorSpillOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorMatteOperation.cpp:22:22: warning: Member variable 'ColorMatteOperation::m_settings' is not initialized in the constructor. [uninitMemberVar]
ColorMatteOperation::ColorMatteOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorCurveOperation.cpp:106:35: warning: Member variable 'ConstantLevelColorCurveOperation::m_black' is not initialized in the constructor. [uninitMemberVar]
ConstantLevelColorCurveOperation::ConstantLevelColorCurveOperation() : CurveBaseOperation()
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ColorCurveOperation.cpp:106:35: warning: Member variable 'ConstantLevelColorCurveOperation::m_white' is not initialized in the constructor. [uninitMemberVar]
ConstantLevelColorCurveOperation::ConstantLevelColorCurveOperation() : CurveBaseOperation()
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertColorProfileOperation.cpp:24:31: warning: Member variable 'ConvertColorProfileOperation::m_fromProfile' is not initialized in the constructor. [uninitMemberVar]
ConvertColorProfileOperation::ConvertColorProfileOperation() : NodeOperation()
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertColorProfileOperation.cpp:24:31: warning: Member variable 'ConvertColorProfileOperation::m_toProfile' is not initialized in the constructor. [uninitMemberVar]
ConvertColorProfileOperation::ConvertColorProfileOperation() : NodeOperation()
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvolutionFilterOperation.cpp:25:29: warning: Member variable 'ConvolutionFilterOperation::m_filterWidth' is not initialized in the constructor. [uninitMemberVar]
ConvolutionFilterOperation::ConvolutionFilterOperation() : NodeOperation()
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvolutionFilterOperation.cpp:25:29: warning: Member variable 'ConvolutionFilterOperation::m_filterHeight' is not initialized in the constructor. [uninitMemberVar]
ConvolutionFilterOperation::ConvolutionFilterOperation() : NodeOperation()
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvolutionFilterOperation.cpp:25:29: warning: Member variable 'ConvolutionFilterOperation::m_inputValueOperation' is not initialized in the constructor. [uninitMemberVar]
ConvolutionFilterOperation::ConvolutionFilterOperation() : NodeOperation()
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvolutionFilterOperation.cpp:25:29: warning: Member variable 'ConvolutionFilterOperation::m_filter' is not initialized in the constructor. [uninitMemberVar]
ConvolutionFilterOperation::ConvolutionFilterOperation() : NodeOperation()
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_CropOperation.cpp:22:20: warning: Member variable 'CropBaseOperation::m_relative' is not initialized in the constructor. [uninitMemberVar]
CropBaseOperation::CropBaseOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_CropOperation.cpp:22:20: warning: Member variable 'CropBaseOperation::m_xmax' is not initialized in the constructor. [uninitMemberVar]
CropBaseOperation::CropBaseOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertOperation.cpp:168:27: warning: Member variable 'ConvertRGBToYCCOperation::m_mode' is not initialized in the constructor. [uninitMemberVar]
ConvertRGBToYCCOperation::ConvertRGBToYCCOperation() : ConvertBaseOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_CropOperation.cpp:22:20: warning: Member variable 'CropBaseOperation::m_xmin' is not initialized in the constructor. [uninitMemberVar]
CropBaseOperation::CropBaseOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertOperation.cpp:210:27: warning: Member variable 'ConvertYCCToRGBOperation::m_mode' is not initialized in the constructor. [uninitMemberVar]
ConvertYCCToRGBOperation::ConvertYCCToRGBOperation() : ConvertBaseOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_CropOperation.cpp:22:20: warning: Member variable 'CropBaseOperation::m_ymax' is not initialized in the constructor. [uninitMemberVar]
CropBaseOperation::CropBaseOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertOperation.cpp:402:27: warning: Member variable 'SeparateChannelOperation::m_channel' is not initialized in the constructor. [uninitMemberVar]
SeparateChannelOperation::SeparateChannelOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_CropOperation.cpp:22:20: warning: Member variable 'CropBaseOperation::m_ymin' is not initialized in the constructor. [uninitMemberVar]
CropBaseOperation::CropBaseOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_CryptomatteOperation.cpp:61:17: style: Local variable 'i' shadows outer variable [shadowVariable]
    for (size_t i = 0; i < m_objectIndex.size(); i++) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_CryptomatteOperation.cpp:49:15: note: Shadowed declaration
  for (size_t i = 0; i < inputs.size(); i++) {
              ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_CryptomatteOperation.cpp:61:17: note: Shadow variable
    for (size_t i = 0; i < m_objectIndex.size(); i++) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertDepthToRadiusOperation.cpp:24:32: warning: Member variable 'ConvertDepthToRadiusOperation::m_aspect' is not initialized in the constructor. [uninitMemberVar]
ConvertDepthToRadiusOperation::ConvertDepthToRadiusOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertDepthToRadiusOperation.cpp:24:32: warning: Member variable 'ConvertDepthToRadiusOperation::m_inverseFocalDistance' is not initialized in the constructor. [uninitMemberVar]
ConvertDepthToRadiusOperation::ConvertDepthToRadiusOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertDepthToRadiusOperation.cpp:24:32: warning: Member variable 'ConvertDepthToRadiusOperation::m_aperture' is not initialized in the constructor. [uninitMemberVar]
ConvertDepthToRadiusOperation::ConvertDepthToRadiusOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertDepthToRadiusOperation.cpp:24:32: warning: Member variable 'ConvertDepthToRadiusOperation::m_cam_lens' is not initialized in the constructor. [uninitMemberVar]
ConvertDepthToRadiusOperation::ConvertDepthToRadiusOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertDepthToRadiusOperation.cpp:24:32: warning: Member variable 'ConvertDepthToRadiusOperation::m_dof_sp' is not initialized in the constructor. [uninitMemberVar]
ConvertDepthToRadiusOperation::ConvertDepthToRadiusOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ConvertDepthToRadiusOperation.cpp:84:9: style: The scope of the variable 'radius' can be reduced. [variableScope]
  float radius;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DenoiseOperation.cpp:29:19: warning: Member variable 'DenoiseOperation::m_inputProgramColor' is not initialized in the constructor. [uninitMemberVar]
DenoiseOperation::DenoiseOperation() : SingleThreadedOperation()
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DenoiseOperation.cpp:29:19: warning: Member variable 'DenoiseOperation::m_inputProgramAlbedo' is not initialized in the constructor. [uninitMemberVar]
DenoiseOperation::DenoiseOperation() : SingleThreadedOperation()
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DenoiseOperation.cpp:29:19: warning: Member variable 'DenoiseOperation::m_inputProgramNormal' is not initialized in the constructor. [uninitMemberVar]
DenoiseOperation::DenoiseOperation() : SingleThreadedOperation()
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DespeckleOperation.cpp:25:21: warning: Member variable 'DespeckleOperation::m_threshold' is not initialized in the constructor. [uninitMemberVar]
DespeckleOperation::DespeckleOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DespeckleOperation.cpp:25:21: warning: Member variable 'DespeckleOperation::m_threshold_neighbor' is not initialized in the constructor. [uninitMemberVar]
DespeckleOperation::DespeckleOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DespeckleOperation.cpp:25:21: warning: Member variable 'DespeckleOperation::m_inputValueOperation' is not initialized in the constructor. [uninitMemberVar]
DespeckleOperation::DespeckleOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DifferenceMatteOperation.cpp:22:27: warning: Member variable 'DifferenceMatteOperation::m_settings' is not initialized in the constructor. [uninitMemberVar]
DifferenceMatteOperation::DifferenceMatteOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DirectionalBlurOperation.cpp:26:27: warning: Member variable 'DirectionalBlurOperation::m_data' is not initialized in the constructor. [uninitMemberVar]
DirectionalBlurOperation::DirectionalBlurOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DirectionalBlurOperation.cpp:26:27: warning: Member variable 'DirectionalBlurOperation::m_center_x_pix' is not initialized in the constructor. [uninitMemberVar]
DirectionalBlurOperation::DirectionalBlurOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DirectionalBlurOperation.cpp:26:27: warning: Member variable 'DirectionalBlurOperation::m_center_y_pix' is not initialized in the constructor. [uninitMemberVar]
DirectionalBlurOperation::DirectionalBlurOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DirectionalBlurOperation.cpp:26:27: warning: Member variable 'DirectionalBlurOperation::m_tx' is not initialized in the constructor. [uninitMemberVar]
DirectionalBlurOperation::DirectionalBlurOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DirectionalBlurOperation.cpp:26:27: warning: Member variable 'DirectionalBlurOperation::m_ty' is not initialized in the constructor. [uninitMemberVar]
DirectionalBlurOperation::DirectionalBlurOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DirectionalBlurOperation.cpp:26:27: warning: Member variable 'DirectionalBlurOperation::m_sc' is not initialized in the constructor. [uninitMemberVar]
DirectionalBlurOperation::DirectionalBlurOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DirectionalBlurOperation.cpp:26:27: warning: Member variable 'DirectionalBlurOperation::m_rot' is not initialized in the constructor. [uninitMemberVar]
DirectionalBlurOperation::DirectionalBlurOperation() : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DilateErodeOperation.cpp:26:32: warning: Member variable 'DilateErodeThresholdOperation::m_scope' is not initialized in the constructor. [uninitMemberVar]
DilateErodeThresholdOperation::DilateErodeThresholdOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DilateErodeOperation.cpp:162:26: warning: Member variable 'DilateDistanceOperation::m_scope' is not initialized in the constructor. [uninitMemberVar]
DilateDistanceOperation::DilateDistanceOperation() : NodeOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DilateErodeOperation.cpp:320:22: warning: Member variable 'DilateStepOperation::m_iterations' is not initialized in the constructor. [uninitMemberVar]
DilateStepOperation::DilateStepOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DisplaceOperation.cpp:23:20: warning: Member variable 'DisplaceOperation::m_width_x4' is not initialized in the constructor. [uninitMemberVar]
DisplaceOperation::DisplaceOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DisplaceOperation.cpp:23:20: warning: Member variable 'DisplaceOperation::m_height_x4' is not initialized in the constructor. [uninitMemberVar]
DisplaceOperation::DisplaceOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DilateErodeOperation.cpp:199:7: style: The scope of the variable 'offset' can be reduced. [variableScope]
  int offset;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DilateErodeOperation.cpp:278:7: style: The scope of the variable 'offset' can be reduced. [variableScope]
  int offset;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DisplaceSimpleOperation.cpp:23:26: warning: Member variable 'DisplaceSimpleOperation::m_width_x4' is not initialized in the constructor. [uninitMemberVar]
DisplaceSimpleOperation::DisplaceSimpleOperation() : NodeOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DistanceRGBMatteOperation.cpp:22:28: warning: Member variable 'DistanceRGBMatteOperation::m_settings' is not initialized in the constructor. [uninitMemberVar]
DistanceRGBMatteOperation::DistanceRGBMatteOperation() : NodeOperation()
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DisplaceSimpleOperation.cpp:23:26: warning: Member variable 'DisplaceSimpleOperation::m_height_x4' is not initialized in the constructor. [uninitMemberVar]
DisplaceSimpleOperation::DisplaceSimpleOperation() : NodeOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DistanceYCCMatteOperation.h:30:17: style: The function 'calculateDistance' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float calculateDistance(float key[4], float image[4]);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DistanceRGBMatteOperation.h:33:17: note: Virtual function in base class
  virtual float calculateDistance(float key[4], float image[4]);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DistanceYCCMatteOperation.h:30:17: note: Function in derived class
  virtual float calculateDistance(float key[4], float image[4]);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_EllipseMaskOperation.cpp:23:23: warning: Member variable 'EllipseMaskOperation::m_aspectRatio' is not initialized in the constructor. [uninitMemberVar]
EllipseMaskOperation::EllipseMaskOperation() : NodeOperation()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_EllipseMaskOperation.cpp:23:23: warning: Member variable 'EllipseMaskOperation::m_maskType' is not initialized in the constructor. [uninitMemberVar]
EllipseMaskOperation::EllipseMaskOperation() : NodeOperation()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_EllipseMaskOperation.cpp:23:23: warning: Member variable 'EllipseMaskOperation::m_data' is not initialized in the constructor. [uninitMemberVar]
EllipseMaskOperation::EllipseMaskOperation() : NodeOperation()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_FastGaussianBlurOperation.cpp:25:28: warning: Member variable 'FastGaussianBlurOperation::m_sx' is not initialized in the constructor. [uninitMemberVar]
FastGaussianBlurOperation::FastGaussianBlurOperation() : BlurBaseOperation(COM_DT_COLOR)
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_FastGaussianBlurOperation.cpp:25:28: warning: Member variable 'FastGaussianBlurOperation::m_sy' is not initialized in the constructor. [uninitMemberVar]
FastGaussianBlurOperation::FastGaussianBlurOperation() : BlurBaseOperation(COM_DT_COLOR)
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_FastGaussianBlurOperation.cpp:218:9: style: The scope of the variable 'offset' can be reduced. [variableScope]
    int offset;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_FastGaussianBlurOperation.cpp:235:9: style: The scope of the variable 'offset' can be reduced. [variableScope]
    int offset;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1309:26: warning: Member variable 'DoubleEdgeMaskOperation::m_cachedInstance' is not initialized in the constructor. [uninitMemberVar]
DoubleEdgeMaskOperation::DoubleEdgeMaskOperation() : NodeOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1162:12: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    rsl = *(unsigned int *)&odist;  // use some peculiar properties of the way bits are stored
           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1164:14: portability: Casting between unsigned int * and float * which have an incompatible binary data representation. [invalidPointerCast]
    odist = *(float *)&rsl;         // reciprocal square root
             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1180:12: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    rsl = *(unsigned int *)&idist;                    //
           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1182:14: portability: Casting between unsigned int * and float * which have an incompatible binary data representation. [invalidPointerCast]
    idist = *(float *)&rsl;                           //
             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1230:12: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    lres = (unsigned int *)res;      // unsigned int pointer to output buffer (for bit level ops)
           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1231:14: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    limask = (unsigned int *)imask;  // unsigned int pointer to input mask (for bit level ops)
             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1232:14: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    lomask = (unsigned int *)omask;  // unsigned int pointer to output mask (for bit level ops)
             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:806:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;            // a = pixel loop counter
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:808:7: style: The scope of the variable 'pix_prevRow' can be reduced. [variableScope]
  int pix_prevRow;  // pix_prevRow = pixel one row behind the one we are testing in a loop
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:809:7: style: The scope of the variable 'pix_nextRow' can be reduced. [variableScope]
  int pix_nextRow;  // pix_nextRow = pixel one row in front of the one we are testing in a loop
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:810:7: style: The scope of the variable 'pix_prevCol' can be reduced. [variableScope]
  int pix_prevCol;  // pix_prevCol = pixel one column behind the one we are testing in a loop
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:811:7: style: The scope of the variable 'pix_nextCol' can be reduced. [variableScope]
  int pix_nextCol;  // pix_nextCol = pixel one column in front of the one we are testing in a loop
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:876:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;            // a = pixel loop counter
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianAlphaXBlurOperation.cpp:27:30: warning: Member variable 'GaussianAlphaXBlurOperation::m_distbuf_inv' is not initialized in the constructor. [uninitMemberVar]
GaussianAlphaXBlurOperation::GaussianAlphaXBlurOperation() : BlurBaseOperation(COM_DT_VALUE)
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:878:7: style: The scope of the variable 'pix_prevRow' can be reduced. [variableScope]
  int pix_prevRow;  // pix_prevRow = pixel one row behind the one we are testing in a loop
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianAlphaXBlurOperation.cpp:27:30: warning: Member variable 'GaussianAlphaXBlurOperation::m_do_subtract' is not initialized in the constructor. [uninitMemberVar]
GaussianAlphaXBlurOperation::GaussianAlphaXBlurOperation() : BlurBaseOperation(COM_DT_VALUE)
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:879:7: style: The scope of the variable 'pix_nextRow' can be reduced. [variableScope]
  int pix_nextRow;  // pix_nextRow = pixel one row in front of the one we are testing in a loop
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:880:7: style: The scope of the variable 'pix_prevCol' can be reduced. [variableScope]
  int pix_prevCol;  // pix_prevCol = pixel one column behind the one we are testing in a loop
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:881:7: style: The scope of the variable 'pix_nextCol' can be reduced. [variableScope]
  int pix_nextCol;  // pix_nextCol = pixel one column in front of the one we are testing in a loop
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1072:7: style: The scope of the variable 'fsz' can be reduced. [variableScope]
  int fsz;                   // size of the frame
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1074:9: style: The scope of the variable 'rsf' can be reduced. [variableScope]
  float rsf;                 // float used for finding fast 1.0/sqrt
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianAlphaYBlurOperation.cpp:27:30: warning: Member variable 'GaussianAlphaYBlurOperation::m_distbuf_inv' is not initialized in the constructor. [uninitMemberVar]
GaussianAlphaYBlurOperation::GaussianAlphaYBlurOperation() : BlurBaseOperation(COM_DT_VALUE)
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1077:16: style: The scope of the variable 'gradientFillOffset' can be reduced. [variableScope]
  unsigned int gradientFillOffset;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianAlphaYBlurOperation.cpp:27:30: warning: Member variable 'GaussianAlphaYBlurOperation::m_do_subtract' is not initialized in the constructor. [uninitMemberVar]
GaussianAlphaYBlurOperation::GaussianAlphaYBlurOperation() : BlurBaseOperation(COM_DT_VALUE)
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1078:16: style: The scope of the variable 't' can be reduced. [variableScope]
  unsigned int t;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1080:16: style: The scope of the variable 'dmin' can be reduced. [variableScope]
  unsigned int dmin;  // dmin = minimum edge distance
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1203:17: style: The scope of the variable 'lres' can be reduced. [variableScope]
  unsigned int *lres;    // lres = unsigned int pointer to output pixel buffer (for bit operations)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1204:17: style: The scope of the variable 'limask' can be reduced. [variableScope]
  unsigned int *limask;  // limask = unsigned int pointer to inner mask (for bit operations)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1205:17: style: The scope of the variable 'lomask' can be reduced. [variableScope]
  unsigned int *lomask;  // lomask = unsigned int pointer to outer mask (for bit operations)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1207:7: style: The scope of the variable 'rw' can be reduced. [variableScope]
  int rw;   // rw = pixel row width
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1208:7: style: The scope of the variable 't' can be reduced. [variableScope]
  int t;    // t = total number of pixels in buffer - 1 (used for loop starts)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1209:7: style: The scope of the variable 'fsz' can be reduced. [variableScope]
  int fsz;  // size of the frame
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1211:16: style: The scope of the variable 'isz' can be reduced. [variableScope]
  unsigned int isz = 0;   // size (in pixels) of inside edge pixel index buffer
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1212:16: style: The scope of the variable 'osz' can be reduced. [variableScope]
  unsigned int osz = 0;   // size (in pixels) of outside edge pixel index buffer
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1213:16: style: The scope of the variable 'gsz' can be reduced. [variableScope]
  unsigned int gsz = 0;   // size (in pixels) of gradient pixel index buffer
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1220:19: style: The scope of the variable 'gbuf' can be reduced. [variableScope]
  unsigned short *gbuf;  // gradient/inner/outer pixel location index buffer
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1211:20: style: Variable 'isz' is assigned a value that is never used. [unreadVariable]
  unsigned int isz = 0;   // size (in pixels) of inside edge pixel index buffer
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1212:20: style: Variable 'osz' is assigned a value that is never used. [unreadVariable]
  unsigned int osz = 0;   // size (in pixels) of outside edge pixel index buffer
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_DoubleEdgeMaskOperation.cpp:1213:20: style: Variable 'gsz' is assigned a value that is never used. [unreadVariable]
  unsigned int gsz = 0;   // size (in pixels) of gradient pixel index buffer
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:26:29: warning: Member variable 'GaussianBokehBlurOperation::m_radx' is not initialized in the constructor. [uninitMemberVar]
GaussianBokehBlurOperation::GaussianBokehBlurOperation() : BlurBaseOperation(COM_DT_COLOR)
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:26:29: warning: Member variable 'GaussianBokehBlurOperation::m_rady' is not initialized in the constructor. [uninitMemberVar]
GaussianBokehBlurOperation::GaussianBokehBlurOperation() : BlurBaseOperation(COM_DT_COLOR)
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:200:33: warning: Member variable 'GaussianBlurReferenceOperation::m_filtersizex' is not initialized in the constructor. [uninitMemberVar]
GaussianBlurReferenceOperation::GaussianBlurReferenceOperation() : BlurBaseOperation(COM_DT_COLOR)
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:200:33: warning: Member variable 'GaussianBlurReferenceOperation::m_filtersizey' is not initialized in the constructor. [uninitMemberVar]
GaussianBlurReferenceOperation::GaussianBlurReferenceOperation() : BlurBaseOperation(COM_DT_COLOR)
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:200:33: warning: Member variable 'GaussianBlurReferenceOperation::m_radx' is not initialized in the constructor. [uninitMemberVar]
GaussianBlurReferenceOperation::GaussianBlurReferenceOperation() : BlurBaseOperation(COM_DT_COLOR)
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:200:33: warning: Member variable 'GaussianBlurReferenceOperation::m_rady' is not initialized in the constructor. [uninitMemberVar]
GaussianBlurReferenceOperation::GaussianBlurReferenceOperation() : BlurBaseOperation(COM_DT_COLOR)
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:134:7: style: The scope of the variable 'index' can be reduced. [variableScope]
  int index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:273:22: style: The scope of the variable 'gausstabcentx' can be reduced. [variableScope]
  float *gausstaby, *gausstabcentx;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:274:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, j;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:274:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:275:10: style: The scope of the variable 'src' can be reduced. [variableScope]
  float *src;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:276:9: style: The scope of the variable 'sum' can be reduced. [variableScope]
  float sum, val;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:276:14: style: The scope of the variable 'val' can be reduced. [variableScope]
  float sum, val;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:277:9: style: The scope of the variable 'rval' can be reduced. [variableScope]
  float rval, gval, bval, aval;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:277:15: style: The scope of the variable 'gval' can be reduced. [variableScope]
  float rval, gval, bval, aval;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:277:21: style: The scope of the variable 'bval' can be reduced. [variableScope]
  float rval, gval, bval, aval;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianBokehBlurOperation.cpp:277:27: style: The scope of the variable 'aval' can be reduced. [variableScope]
  float rval, gval, bval, aval;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareBaseOperation.cpp:22:21: warning: Member variable 'GlareBaseOperation::m_inputProgram' is not initialized in the constructor. [uninitMemberVar]
GlareBaseOperation::GlareBaseOperation() : SingleThreadedOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GaussianYBlurOperation.cpp:94:7: style: The scope of the variable 'index' can be reduced. [variableScope]
  int index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareFogGlowOperation.h:32:8: style: The function 'generateGlare' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareBaseOperation.h:73:16: note: Virtual function in base class
  virtual void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareFogGlowOperation.h:32:8: note: Function in derived class
  void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareSimpleStarOperation.h:32:8: style: The function 'generateGlare' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareBaseOperation.h:73:16: note: Virtual function in base class
  virtual void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareSimpleStarOperation.h:32:8: note: Function in derived class
  void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareGhostOperation.h:32:8: style: The function 'generateGlare' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareBaseOperation.h:73:16: note: Virtual function in base class
  virtual void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareGhostOperation.h:32:8: note: Function in derived class
  void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareFogGlowOperation.cpp:60:7: style: The scope of the variable 'n2' can be reduced. [variableScope]
  int n2, bd, bl, istep, k, len = 1 << M, n = 1;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareGhostOperation.cpp:51:7: style: Condition '!breaked' is always true [knownConditionTrueFalse]
  if (!breaked) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareGhostOperation.cpp:48:18: note: Assignment 'breaked=false', assigned value is 0
  bool breaked = false;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareGhostOperation.cpp:51:7: note: Condition '!breaked' is always true
  if (!breaked) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareFogGlowOperation.cpp:60:19: style: The scope of the variable 'istep' can be reduced. [variableScope]
  int n2, bd, bl, istep, k, len = 1 << M, n = 1;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareFogGlowOperation.cpp:410:19: style: The scope of the variable 'v' can be reduced. [variableScope]
  float scale, u, v, r, w, d;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareStreaksOperation.h:32:8: style: The function 'generateGlare' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareBaseOperation.h:73:16: note: Virtual function in base class
  virtual void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareStreaksOperation.h:32:8: note: Function in derived class
  void generateGlare(float *data, MemoryBuffer *inputTile, NodeGlare *settings);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_GlareThresholdOperation.cpp:26:26: warning: Member variable 'GlareThresholdOperation::m_settings' is not initialized in the constructor. [uninitMemberVar]
GlareThresholdOperation::GlareThresholdOperation() : NodeOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_IDMaskOperation.cpp:21:18: warning: Member variable 'IDMaskOperation::m_objectIndex' is not initialized in the constructor. [uninitMemberVar]
IDMaskOperation::IDMaskOperation() : NodeOperation()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_InpaintOperation.cpp:30:25: warning: Member variable 'InpaintSimpleOperation::m_iterations' is not initialized in the constructor. [uninitMemberVar]
InpaintSimpleOperation::InpaintSimpleOperation() : NodeOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_InpaintOperation.cpp:30:25: warning: Member variable 'InpaintSimpleOperation::m_area_size' is not initialized in the constructor. [uninitMemberVar]
InpaintSimpleOperation::InpaintSimpleOperation() : NodeOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MapValueOperation.cpp:21:20: warning: Member variable 'MapValueOperation::m_settings' is not initialized in the constructor. [uninitMemberVar]
MapValueOperation::MapValueOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_KeyingScreenOperation.cpp:205:21: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      int *triangle = triangulation->triangles[i];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_KeyingScreenOperation.cpp:330:23: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
        int *triangle = triangulation->triangles[triangle_idx];
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_KeyingScreenOperation.cpp:35:24: warning: Member variable 'KeyingScreenOperation::m_cachedTriangulation' is not initialized in the constructor. [uninitMemberVar]
KeyingScreenOperation::KeyingScreenOperation() : NodeOperation()
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_KeyingScreenOperation.cpp:138:14: style: Variable 'track' is reassigned a value before the old one has been used. [redundantAssignment]
  for (track = (MovieTrackingTrack *)tracksbase->first, site = sites; track; track = track->next) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_KeyingScreenOperation.cpp:137:9: note: track is assigned
  track = (MovieTrackingTrack *)tracksbase->first;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_KeyingScreenOperation.cpp:138:14: note: track is overwritten
  for (track = (MovieTrackingTrack *)tracksbase->first, site = sites; track; track = track->next) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_KeyingScreenOperation.cpp:84:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_KeyingScreenOperation.cpp:141:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_LuminanceMatteOperation.cpp:26:26: warning: Member variable 'LuminanceMatteOperation::m_settings' is not initialized in the constructor. [uninitMemberVar]
LuminanceMatteOperation::LuminanceMatteOperation() : NodeOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MapRangeOperation.cpp:21:20: warning: Member variable 'MapRangeOperation::m_sourceMinOperation' is not initialized in the constructor. [uninitMemberVar]
MapRangeOperation::MapRangeOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MapRangeOperation.cpp:21:20: warning: Member variable 'MapRangeOperation::m_sourceMaxOperation' is not initialized in the constructor. [uninitMemberVar]
MapRangeOperation::MapRangeOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MapRangeOperation.cpp:21:20: warning: Member variable 'MapRangeOperation::m_destMinOperation' is not initialized in the constructor. [uninitMemberVar]
MapRangeOperation::MapRangeOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MapRangeOperation.cpp:21:20: warning: Member variable 'MapRangeOperation::m_destMaxOperation' is not initialized in the constructor. [uninitMemberVar]
MapRangeOperation::MapRangeOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MaskOperation.cpp:30:16: warning: Member variable 'MaskOperation::m_mask_px_ofs' is not initialized in the constructor. [uninitMemberVar]
MaskOperation::MaskOperation() : NodeOperation()
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MaskOperation.cpp:30:16: warning: Member variable 'MaskOperation::m_do_feather' is not initialized in the constructor. [uninitMemberVar]
MaskOperation::MaskOperation() : NodeOperation()
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MaskOperation.cpp:71:25: style: The scope of the variable 'masklay_shape' can be reduced. [variableScope]
        MaskLayerShape *masklay_shape;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MovieClipAttributeOperation.cpp:24:30: warning: Member variable 'MovieClipAttributeOperation::m_clip' is not initialized in the constructor. [uninitMemberVar]
MovieClipAttributeOperation::MovieClipAttributeOperation() : NodeOperation()
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MovieClipAttributeOperation.cpp:24:30: warning: Member variable 'MovieClipAttributeOperation::m_value' is not initialized in the constructor. [uninitMemberVar]
MovieClipAttributeOperation::MovieClipAttributeOperation() : NodeOperation()
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MovieClipOperation.cpp:29:25: warning: Member variable 'MovieClipBaseOperation::m_cacheFrame' is not initialized in the constructor. [uninitMemberVar]
MovieClipBaseOperation::MovieClipBaseOperation() : NodeOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MultilayerImageOperation.cpp:25:26: warning: Member variable 'MultilayerBaseOperation::m_renderlayer' is not initialized in the constructor. [uninitMemberVar]
MultilayerBaseOperation::MultilayerBaseOperation(int passindex, int view) : BaseImageOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MultilayerImageOperation.h:31:10: style: The function 'getImBuf' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  ImBuf *getImBuf();
         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ImageOperation.h:57:18: note: Virtual function in base class
  virtual ImBuf *getImBuf();
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MultilayerImageOperation.h:31:10: note: Function in derived class
  ImBuf *getImBuf();
         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MovieDistortionOperation.cpp:27:27: warning: Member variable 'MovieDistortionOperation::m_margin' is not initialized in the constructor. [uninitMemberVar]
MovieDistortionOperation::MovieDistortionOperation(bool distortion) : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MovieDistortionOperation.cpp:27:27: warning: Member variable 'MovieDistortionOperation::m_framenumber' is not initialized in the constructor. [uninitMemberVar]
MovieDistortionOperation::MovieDistortionOperation(bool distortion) : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MovieDistortionOperation.cpp:27:27: warning: Member variable 'MovieDistortionOperation::m_distortion' is not initialized in the constructor. [uninitMemberVar]
MovieDistortionOperation::MovieDistortionOperation(bool distortion) : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MovieDistortionOperation.cpp:27:27: warning: Member variable 'MovieDistortionOperation::m_calibration_width' is not initialized in the constructor. [uninitMemberVar]
MovieDistortionOperation::MovieDistortionOperation(bool distortion) : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MovieDistortionOperation.cpp:27:27: warning: Member variable 'MovieDistortionOperation::m_calibration_height' is not initialized in the constructor. [uninitMemberVar]
MovieDistortionOperation::MovieDistortionOperation(bool distortion) : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MovieDistortionOperation.cpp:27:27: warning: Member variable 'MovieDistortionOperation::m_pixel_aspect' is not initialized in the constructor. [uninitMemberVar]
MovieDistortionOperation::MovieDistortionOperation(bool distortion) : NodeOperation()
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_MovieDistortionOperation.h:45:3: style: Class 'MovieDistortionOperation' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MovieDistortionOperation(bool distortion);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_NormalizeOperation.cpp:102:11: style: The scope of the variable 'value' can be reduced. [variableScope]
    float value;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_OpenCLKernels.cl:135:9: style: Redundant initialization for 'color'. The initialized value is overwritten before it is read. [redundantInitialization]
  color = color_accum * (1.0f / multiplier_accum);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_OpenCLKernels.cl:88:15: note: color is initialized
 float4 color = {1.0f, 0.0f, 0.0f, 1.0f};
              ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_OpenCLKernels.cl:135:9: note: color is overwritten
  color = color_accum * (1.0f / multiplier_accum);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_OpenCLKernels.cl:96:8: style: The scope of the variable 'size' can be reduced. [variableScope]
 float size;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_PixelateOperation.h:43:3: style: Class 'PixelateOperation' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  PixelateOperation(DataType dataType);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_OutputFileMultiViewOperation.cpp:285:15: style: The scope of the variable 'names' can be reduced. [variableScope]
  const char *names[2] = {STEREO_LEFT_NAME, STEREO_RIGHT_NAME};
              ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_OutputFileMultiViewOperation.cpp:286:10: style: The scope of the variable 'i' can be reduced. [variableScope]
  size_t i;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ReadBufferOperation.h:34:3: style: Class 'ReadBufferOperation' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ReadBufferOperation(DataType datetype);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_PlaneCornerPinOperation.cpp:33:10: style: The scope of the variable 'next' can be reduced. [variableScope]
  int i, next, prev;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_PlaneCornerPinOperation.cpp:33:16: style: The scope of the variable 'prev' can be reduced. [variableScope]
  int i, next, prev;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_PlaneDistortCommonOperation.cpp:49:33: warning: Member variable 'PlaneDistortWarpImageOperation::m_samples' is not initialized in the constructor. [uninitMemberVar]
PlaneDistortWarpImageOperation::PlaneDistortWarpImageOperation() : NodeOperation()
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_PlaneDistortCommonOperation.cpp:150:28: warning: Member variable 'PlaneDistortMaskOperation::m_samples' is not initialized in the constructor. [uninitMemberVar]
PlaneDistortMaskOperation::PlaneDistortMaskOperation() : NodeOperation()
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_PlaneDistortCommonOperation.cpp:150:28: warning: Member variable 'PlaneDistortMaskOperation::m_jitter' is not initialized in the constructor. [uninitMemberVar]
PlaneDistortMaskOperation::PlaneDistortMaskOperation() : NodeOperation()
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_PreviewOperation.cpp:87:7: style: The scope of the variable 'offset' can be reduced. [variableScope]
  int offset;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ProjectorLensDistortionOperation.cpp:23:35: warning: Member variable 'ProjectorLensDistortionOperation::m_kr' is not initialized in the constructor. [uninitMemberVar]
ProjectorLensDistortionOperation::ProjectorLensDistortionOperation() : NodeOperation()
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ProjectorLensDistortionOperation.cpp:23:35: warning: Member variable 'ProjectorLensDistortionOperation::m_kr2' is not initialized in the constructor. [uninitMemberVar]
ProjectorLensDistortionOperation::ProjectorLensDistortionOperation() : NodeOperation()
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_RenderLayersProg.cpp:33:19: warning: Member variable 'RenderLayersProg::m_layerId' is not initialized in the constructor. [uninitMemberVar]
RenderLayersProg::RenderLayersProg(const char *passName, DataType type, int elementsize)
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_RenderLayersProg.cpp:33:19: warning: Member variable 'RenderLayersProg::m_viewName' is not initialized in the constructor. [uninitMemberVar]
RenderLayersProg::RenderLayersProg(const char *passName, DataType type, int elementsize)
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_RenderLayersProg.cpp:73:16: style: The scope of the variable 'offset' can be reduced. [variableScope]
  unsigned int offset;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ReadBufferOperation.cpp:23:22: warning: Member variable 'ReadBufferOperation::m_memoryProxy' is not initialized in the constructor. [uninitMemberVar]
ReadBufferOperation::ReadBufferOperation(DataType datatype) : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_WriteBufferOperation.h:35:3: style: Class 'WriteBufferOperation' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  WriteBufferOperation(DataType datatype);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_RotateOperation.cpp:22:18: warning: Member variable 'RotateOperation::m_centerX' is not initialized in the constructor. [uninitMemberVar]
RotateOperation::RotateOperation() : NodeOperation()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_RotateOperation.cpp:22:18: warning: Member variable 'RotateOperation::m_centerY' is not initialized in the constructor. [uninitMemberVar]
RotateOperation::RotateOperation() : NodeOperation()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_RotateOperation.cpp:22:18: warning: Member variable 'RotateOperation::m_cosine' is not initialized in the constructor. [uninitMemberVar]
RotateOperation::RotateOperation() : NodeOperation()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_RotateOperation.cpp:22:18: warning: Member variable 'RotateOperation::m_sine' is not initialized in the constructor. [uninitMemberVar]
RotateOperation::RotateOperation() : NodeOperation()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:38:17: warning: Member variable 'ScaleOperation::m_centerX' is not initialized in the constructor. [uninitMemberVar]
ScaleOperation::ScaleOperation() : BaseScaleOperation()
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:38:17: warning: Member variable 'ScaleOperation::m_centerY' is not initialized in the constructor. [uninitMemberVar]
ScaleOperation::ScaleOperation() : BaseScaleOperation()
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:113:25: warning: Member variable 'ScaleAbsoluteOperation::m_centerX' is not initialized in the constructor. [uninitMemberVar]
ScaleAbsoluteOperation::ScaleAbsoluteOperation() : BaseScaleOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:113:25: warning: Member variable 'ScaleAbsoluteOperation::m_centerY' is not initialized in the constructor. [uninitMemberVar]
ScaleAbsoluteOperation::ScaleAbsoluteOperation() : BaseScaleOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:204:26: warning: Member variable 'ScaleFixedSizeOperation::m_newWidth' is not initialized in the constructor. [uninitMemberVar]
ScaleFixedSizeOperation::ScaleFixedSizeOperation() : BaseScaleOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:204:26: warning: Member variable 'ScaleFixedSizeOperation::m_newHeight' is not initialized in the constructor. [uninitMemberVar]
ScaleFixedSizeOperation::ScaleFixedSizeOperation() : BaseScaleOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:204:26: warning: Member variable 'ScaleFixedSizeOperation::m_relX' is not initialized in the constructor. [uninitMemberVar]
ScaleFixedSizeOperation::ScaleFixedSizeOperation() : BaseScaleOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:204:26: warning: Member variable 'ScaleFixedSizeOperation::m_relY' is not initialized in the constructor. [uninitMemberVar]
ScaleFixedSizeOperation::ScaleFixedSizeOperation() : BaseScaleOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:204:26: warning: Member variable 'ScaleFixedSizeOperation::m_offsetX' is not initialized in the constructor. [uninitMemberVar]
ScaleFixedSizeOperation::ScaleFixedSizeOperation() : BaseScaleOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:204:26: warning: Member variable 'ScaleFixedSizeOperation::m_offsetY' is not initialized in the constructor. [uninitMemberVar]
ScaleFixedSizeOperation::ScaleFixedSizeOperation() : BaseScaleOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:204:26: warning: Member variable 'ScaleFixedSizeOperation::m_is_aspect' is not initialized in the constructor. [uninitMemberVar]
ScaleFixedSizeOperation::ScaleFixedSizeOperation() : BaseScaleOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScaleOperation.cpp:204:26: warning: Member variable 'ScaleFixedSizeOperation::m_is_crop' is not initialized in the constructor. [uninitMemberVar]
ScaleFixedSizeOperation::ScaleFixedSizeOperation() : BaseScaleOperation()
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:28:32: warning: Member variable 'ScreenLensDistortionOperation::m_rng' is not initialized in the constructor. [uninitMemberVar]
ScreenLensDistortionOperation::ScreenLensDistortionOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:28:32: warning: Member variable 'ScreenLensDistortionOperation::m_fit' is not initialized in the constructor. [uninitMemberVar]
ScreenLensDistortionOperation::ScreenLensDistortionOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:28:32: warning: Member variable 'ScreenLensDistortionOperation::m_jitter' is not initialized in the constructor. [uninitMemberVar]
ScreenLensDistortionOperation::ScreenLensDistortionOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:28:32: warning: Member variable 'ScreenLensDistortionOperation::m_k' is not initialized in the constructor. [uninitMemberVar]
ScreenLensDistortionOperation::ScreenLensDistortionOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:28:32: warning: Member variable 'ScreenLensDistortionOperation::m_k4' is not initialized in the constructor. [uninitMemberVar]
ScreenLensDistortionOperation::ScreenLensDistortionOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:28:32: warning: Member variable 'ScreenLensDistortionOperation::m_dk4' is not initialized in the constructor. [uninitMemberVar]
ScreenLensDistortionOperation::ScreenLensDistortionOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:28:32: warning: Member variable 'ScreenLensDistortionOperation::m_maxk' is not initialized in the constructor. [uninitMemberVar]
ScreenLensDistortionOperation::ScreenLensDistortionOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:28:32: warning: Member variable 'ScreenLensDistortionOperation::m_sc' is not initialized in the constructor. [uninitMemberVar]
ScreenLensDistortionOperation::ScreenLensDistortionOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:28:32: warning: Member variable 'ScreenLensDistortionOperation::m_cx' is not initialized in the constructor. [uninitMemberVar]
ScreenLensDistortionOperation::ScreenLensDistortionOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:28:32: warning: Member variable 'ScreenLensDistortionOperation::m_cy' is not initialized in the constructor. [uninitMemberVar]
ScreenLensDistortionOperation::ScreenLensDistortionOperation() : NodeOperation()
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ScreenLensDistortionOperation.cpp:174:7: style: The scope of the variable 'count' can be reduced. [variableScope]
  int count[3] = {0, 0, 0};
      ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SetColorOperation.cpp:21:20: warning: Member variable 'SetColorOperation::m_color' is not initialized in the constructor. [uninitMemberVar]
SetColorOperation::SetColorOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SetSamplerOperation.cpp:21:22: warning: Member variable 'SetSamplerOperation::m_reader' is not initialized in the constructor. [uninitMemberVar]
SetSamplerOperation::SetSamplerOperation() : NodeOperation()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SetValueOperation.cpp:21:20: warning: Member variable 'SetValueOperation::m_value' is not initialized in the constructor. [uninitMemberVar]
SetValueOperation::SetValueOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SetVectorOperation.cpp:22:21: warning: Member variable 'SetVectorOperation::m_x' is not initialized in the constructor. [uninitMemberVar]
SetVectorOperation::SetVectorOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SetVectorOperation.cpp:22:21: warning: Member variable 'SetVectorOperation::m_y' is not initialized in the constructor. [uninitMemberVar]
SetVectorOperation::SetVectorOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SetVectorOperation.cpp:22:21: warning: Member variable 'SetVectorOperation::m_z' is not initialized in the constructor. [uninitMemberVar]
SetVectorOperation::SetVectorOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SetVectorOperation.cpp:22:21: warning: Member variable 'SetVectorOperation::m_w' is not initialized in the constructor. [uninitMemberVar]
SetVectorOperation::SetVectorOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SplitOperation.cpp:32:17: warning: Member variable 'SplitOperation::m_splitPercentage' is not initialized in the constructor. [uninitMemberVar]
SplitOperation::SplitOperation() : NodeOperation()
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SplitOperation.cpp:32:17: warning: Member variable 'SplitOperation::m_xSplit' is not initialized in the constructor. [uninitMemberVar]
SplitOperation::SplitOperation() : NodeOperation()
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_TrackPositionOperation.cpp:33:25: warning: Member variable 'TrackPositionOperation::m_width' is not initialized in the constructor. [uninitMemberVar]
TrackPositionOperation::TrackPositionOperation() : NodeOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_TrackPositionOperation.cpp:33:25: warning: Member variable 'TrackPositionOperation::m_height' is not initialized in the constructor. [uninitMemberVar]
TrackPositionOperation::TrackPositionOperation() : NodeOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_TrackPositionOperation.cpp:33:25: warning: Member variable 'TrackPositionOperation::m_markerPos' is not initialized in the constructor. [uninitMemberVar]
TrackPositionOperation::TrackPositionOperation() : NodeOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_TrackPositionOperation.cpp:33:25: warning: Member variable 'TrackPositionOperation::m_relativePos' is not initialized in the constructor. [uninitMemberVar]
TrackPositionOperation::TrackPositionOperation() : NodeOperation()
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SunBeamsOperation.cpp:22:20: warning: Member variable 'SunBeamsOperation::m_source_px' is not initialized in the constructor. [uninitMemberVar]
SunBeamsOperation::SunBeamsOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_SunBeamsOperation.cpp:22:20: warning: Member variable 'SunBeamsOperation::m_ray_length_px' is not initialized in the constructor. [uninitMemberVar]
SunBeamsOperation::SunBeamsOperation() : NodeOperation()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_TranslateOperation.cpp:21:21: warning: Member variable 'TranslateOperation::m_deltaX' is not initialized in the constructor. [uninitMemberVar]
TranslateOperation::TranslateOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VariableSizeBokehBlurOperation.cpp:89:43: style: C-style pointer casting [cstyleCast]
  VariableSizeBokehBlurTileData *result = (VariableSizeBokehBlurTileData *)data;
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_TranslateOperation.cpp:21:21: warning: Member variable 'TranslateOperation::m_deltaY' is not initialized in the constructor. [uninitMemberVar]
TranslateOperation::TranslateOperation() : NodeOperation()
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VariableSizeBokehBlurOperation.cpp:95:45: style: C-style pointer casting [cstyleCast]
  VariableSizeBokehBlurTileData *tileData = (VariableSizeBokehBlurTileData *)data;
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VariableSizeBokehBlurOperation.cpp:101:9: style: The scope of the variable 'readColor' can be reduced. [variableScope]
  float readColor[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VariableSizeBokehBlurOperation.cpp:102:9: style: The scope of the variable 'bokeh' can be reduced. [variableScope]
  float bokeh[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VariableSizeBokehBlurOperation.cpp:104:9: style: The scope of the variable 'multiplier_accum' can be reduced. [variableScope]
  float multiplier_accum[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VariableSizeBokehBlurOperation.cpp:281:31: warning: Member variable 'InverseSearchRadiusOperation::m_maxBlur' is not initialized in the constructor. [uninitMemberVar]
InverseSearchRadiusOperation::InverseSearchRadiusOperation() : NodeOperation()
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VariableSizeBokehBlurOperation.cpp:109:21: style: Variable 'maxBlurScalar' is assigned a value that is never used. [unreadVariable]
  int maxBlurScalar = tileData->maxBlurScalar;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VariableSizeBokehBlurOperation.cpp:301:9: style: Unused variable: temp [unusedVariable]
  float temp[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_WrapOperation.h:29:3: style: Class 'WrapOperation' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  WrapOperation(DataType datetype);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ViewerOperation.cpp:37:18: warning: Member variable 'ViewerOperation::m_centerX' is not initialized in the constructor. [uninitMemberVar]
ViewerOperation::ViewerOperation() : NodeOperation()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ViewerOperation.cpp:37:18: warning: Member variable 'ViewerOperation::m_centerY' is not initialized in the constructor. [uninitMemberVar]
ViewerOperation::ViewerOperation() : NodeOperation()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_ViewerOperation.cpp:37:18: warning: Member variable 'ViewerOperation::m_ibuf' is not initialized in the constructor. [uninitMemberVar]
ViewerOperation::ViewerOperation() : NodeOperation()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VectorBlurOperation.cpp:167:3: portability: Using memset() on struct which contains a floating point number. [memsetClassFloat]
  memset(zspan, 0, sizeof(ZSpan));
  ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VectorBlurOperation.cpp:360:14: portability: Casting between signed int * and float * which have an incompatible binary data representation. [invalidPointerCast]
  rectzofs = (float *)(zspan->rectz + rectx * my2);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VectorBlurOperation.cpp:573:17: portability: Casting from float * to signed int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
  zspan.rectz = (int *)rectz;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\compositor\operations\COM_VectorBlurOperation.cpp:313:12: style: The scope of the variable 'sn2' can be reduced. [variableScope]
  int sn1, sn2, rectx, my0, my2;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_cycle.cc:60:3: style: Struct 'CyclesSolverState' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CyclesSolverState(Depsgraph *graph)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_cycle.cc:176:25: style: C-style pointer casting [cstyleCast]
    StackEntry *entry = (StackEntry *)BLI_stack_peek(traversal_stack);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_cycle.cc:116:21: style: Consider using std::any_of, std::all_of, std::none_of, or std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
        has_inlinks = true;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_cycle.cc:135:59: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
    if (get_node_visited_state(node) == NODE_NOT_VISITED) {
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_nodes_rig.cc:205:11: style: Variable 'op_node' is reassigned a value before the old one has been used. [redundantAssignment]
  op_node = add_operation_node(&object->id,
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_nodes_rig.cc:195:11: note: op_node is assigned
  op_node = add_operation_node(&object->id,
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_nodes_rig.cc:205:11: note: op_node is overwritten
  op_node = add_operation_node(&object->id,
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_nodes_rig.cc:336:11: style: Variable 'op_node' is reassigned a value before the old one has been used. [redundantAssignment]
  op_node = add_operation_node(&object->id,
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_nodes_rig.cc:332:11: note: op_node is assigned
  op_node = add_operation_node(&object->id,
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_nodes_rig.cc:336:11: note: op_node is overwritten
  op_node = add_operation_node(&object->id,
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_remove_noop.cc:56:12: style: Consider using std::copy_if algorithm instead of a raw loop. [useStlAlgorithm]
      queue.push_back(node);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:442:22: style: Local variable 'eff_key' shadows outer variable [shadowVariable]
        ComponentKey eff_key(&relation->pd->f_source->id, NodeType::GEOMETRY);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:429:20: note: Shadowed declaration
      ComponentKey eff_key(&relation->ob->id, NodeType::TRANSFORM);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:442:22: note: Shadow variable
        ComponentKey eff_key(&relation->pd->f_source->id, NodeType::GEOMETRY);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:1471:18: style: Local variable 'id_ptr' shadows outer variable [shadowVariable]
      PointerRNA id_ptr;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:1422:7: note: Shadowed declaration
  ID *id_ptr = property_entry_key.ptr.owner_id;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:1471:18: note: Shadow variable
      PointerRNA id_ptr;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:2008:18: style: Local variable 'obdata_ubereval_key' shadows outer variable [shadowVariable]
    OperationKey obdata_ubereval_key(
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:1937:16: note: Shadowed declaration
  OperationKey obdata_ubereval_key(&object->id, NodeType::GEOMETRY, OperationCode::GEOMETRY_EVAL);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:2008:18: note: Shadow variable
    OperationKey obdata_ubereval_key(
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:2035:18: style: Local variable 'obdata_ubereval_key' shadows outer variable [shadowVariable]
    OperationKey obdata_ubereval_key(
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:1937:16: note: Shadowed declaration
  OperationKey obdata_ubereval_key(&object->id, NodeType::GEOMETRY, OperationCode::GEOMETRY_EVAL);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.cc:2035:18: note: Shadow variable
    OperationKey obdata_ubereval_key(
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\debug\deg_debug_relations_graphviz.cc:243:9: style: The scope of the variable 'penwidth_modified' can be reduced. [variableScope]
  float penwidth_modified = 4.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\debug\deg_debug_relations_graphviz.cc:244:9: style: The scope of the variable 'penwidth_update' can be reduced. [variableScope]
  float penwidth_update = 4.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5595:13: style: The scope of the variable 'nsucs' can be reduced. [variableScope]
  int j, k, nsucs;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\bmesh\tools\bmesh_bevel.c:5596:11: style: The scope of the variable 'bme' can be reduced. [variableScope]
  BMEdge *bme, *bme2, *bmenext;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\depsgraph_debug.cc:116:11: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
          counter1++;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\depsgraph_debug.cc:122:11: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
          counter2++;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\depsgraph_debug.cc:141:11: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
          counter1++;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\depsgraph_debug.cc:147:11: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
          counter2++;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\depsgraph_debug.cc:183:9: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
        num_links_pending++;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\builder\deg_builder_relations.h:100:3: style: Struct 'TimeSourceKey' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TimeSourceKey(ID *id);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\depsgraph_build.cc:214:26: style: C-style pointer casting [cstyleCast]
  deg_graph->scene_cow = (Scene *)deg_graph->get_cow_id(&deg_graph->scene->id);
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval.cc:123:31: style: C-style pointer casting [cstyleCast]
  DepsgraphEvalState *state = (DepsgraphEvalState *)userdata_v;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_flush.cc:160:9: warning: Either the condition 'pose_comp!=nullptr' is redundant or there is possible null pointer dereference: pose_comp. [nullPointerRedundantCheck]
    if (pose_comp->custom_flags == COMPONENT_STATE_NONE) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_flush.cc:159:26: note: Assuming that condition 'pose_comp!=nullptr' is not redundant
    BLI_assert(pose_comp != nullptr);
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_flush.cc:158:55: note: Assignment 'pose_comp=id_node->find_component(NodeType::EVAL_POSE)', assigned value is 0
    ComponentNode *pose_comp = id_node->find_component(NodeType::EVAL_POSE);
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_flush.cc:160:9: note: Null pointer dereference
    if (pose_comp->custom_flags == COMPONENT_STATE_NONE) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_copy_on_write.cc:525:38: style: C-style pointer casting [cstyleCast]
  RemapCallbackUserData *user_data = (RemapCallbackUserData *)cb_data->user_data;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_copy_on_write.cc:823:24: style: C-style pointer casting [cstyleCast]
  ValidateData *data = (ValidateData *)cb_data->user_data;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_copy_on_write.cc:287:15: style: Redundant initialization for 'id_for_copy'. The initialized value is overwritten before it is read. [redundantInitialization]
  id_for_copy = nested_id_hack_get_discarded_pointers(&id_hack_storage, id);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_copy_on_write.cc:283:25: note: id_for_copy is initialized
  const ID *id_for_copy = id;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_copy_on_write.cc:287:15: note: id_for_copy is overwritten
  id_for_copy = nested_id_hack_get_discarded_pointers(&id_hack_storage, id);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_copy_on_write.cc:310:15: style: Redundant initialization for 'id_for_copy'. The initialized value is overwritten before it is read. [redundantInitialization]
  id_for_copy = nested_id_hack_get_discarded_pointers(&id_hack_storage, &scene->id);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_copy_on_write.cc:306:25: note: id_for_copy is initialized
  const ID *id_for_copy = &scene->id;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\depsgraph\intern\eval\deg_eval_copy_on_write.cc:310:15: note: id_for_copy is overwritten
  id_for_copy = nested_id_hack_get_discarded_pointers(&id_hack_storage, &scene->id);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\basic\basic_engine.c:213:17: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
  int *ptr_empt = new int(10)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\basic\basic_engine.c:256:14: error: Division by zero. [zerodiv]
  int six = 2/ 0;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\basic\basic_engine.c:213:17: style: Variable 'ptr_empt' is assigned a value that is never used. [unreadVariable]
  int *ptr_empt = new int(10)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\basic\basic_engine.c:213:8: style: Variable 'ptr_empt' is allocated memory that is never used. [unusedAllocatedMemory]
  int *ptr_empt = new int(10)
       ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\basic\basic_engine.c:220:13: style: Variable 'str' is assigned a value that is never used. [unreadVariable]
  char *str = new char[300];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\basic\basic_engine.c:220:9: style: Variable 'str' is allocated memory that is never used. [unusedAllocatedMemory]
  char *str = new char[300];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\basic\basic_engine.c:256:11: style: Variable 'six' is assigned a value that is never used. [unreadVariable]
  int six = 2/ 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\eevee\eevee_private.h:450:1: error: There is an unknown macro here somewhere. Configuration is required. If BLI_STATIC_ASSERT_ALIGN is a macro then please configure it. [unknownMacro]
BLI_STATIC_ASSERT_ALIGN(EEVEE_Light, 16)
^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\external\external_engine.c:94:9: style: struct member 'EXTERNAL_PrivateData::last_persmat' is never used. [unusedStructMember]
  float last_persmat[4][4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\gpencil\gpencil_engine.h:102:1: error: There is an unknown macro here somewhere. Configuration is required. If BLI_STATIC_ASSERT_ALIGN is a macro then please configure it. [unknownMacro]
BLI_STATIC_ASSERT_ALIGN(gpMaterial, 16)
^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_edit_text.c:174:20: style: The scope of the variable 'geom' can be reduced. [variableScope]
  struct GPUBatch *geom;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_edit_mesh.c:237:32: style: The scope of the variable 'geom_verts' can be reduced. [variableScope]
  struct GPUBatch *geom_tris, *geom_verts, *geom_edges, *geom_fcenter, *skin_roots, *circle;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_edit_mesh.c:237:58: style: The scope of the variable 'geom_fcenter' can be reduced. [variableScope]
  struct GPUBatch *geom_tris, *geom_verts, *geom_edges, *geom_fcenter, *skin_roots, *circle;
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_edit_mesh.c:237:73: style: The scope of the variable 'skin_roots' can be reduced. [variableScope]
  struct GPUBatch *geom_tris, *geom_verts, *geom_edges, *geom_fcenter, *skin_roots, *circle;
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_edit_mesh.c:237:86: style: The scope of the variable 'circle' can be reduced. [variableScope]
  struct GPUBatch *geom_tris, *geom_verts, *geom_edges, *geom_fcenter, *skin_roots, *circle;
                                                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1046:5: warning: Possible null pointer dereference: eBone [nullPointer]
    eBone->length = len_v3v3(eBone->tail, eBone->head);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:2074:48: note: Calling function 'draw_bone_update_disp_matrix_default', 1st argument 'NULL' value is 0
          draw_bone_update_disp_matrix_default(NULL, pchan);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1046:5: note: Null pointer dereference
    eBone->length = len_v3v3(eBone->tail, eBone->head);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1204:5: warning: Possible null pointer dereference: eBone [nullPointer]
    eBone->length = len_v3v3(eBone->tail, eBone->head);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:2082:46: note: Calling function 'draw_bone_update_disp_matrix_bbone', 1st argument 'NULL' value is 0
          draw_bone_update_disp_matrix_bbone(NULL, pchan);
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1204:5: note: Null pointer dereference
    eBone->length = len_v3v3(eBone->tail, eBone->head);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1280:27: warning: Either the condition 'if(pchan&&pchan->custom&&!(arm->flag&ARM_NO_CUSTOM))' is redundant or there is possible null pointer dereference: pchan. [nullPointerRedundantCheck]
                         (BONE_FLAG(eBone, pchan) & BONE_SELECTED) ? G_draw.block.colorTextHi :
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1286:6: note: Assuming that condition 'if(pchan&&pchan->custom&&!(arm->flag&ARM_NO_CUSTOM))' is not redundant
  if (pchan && pchan->custom && !(arm->flag & ARM_NO_CUSTOM)) {
     ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1280:27: note: Null pointer dereference
                         (BONE_FLAG(eBone, pchan) & BONE_SELECTED) ? G_draw.block.colorTextHi :
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1284:46: warning: Either the condition 'if(pchan&&pchan->custom&&!(arm->flag&ARM_NO_CUSTOM))' is redundant or there is possible null pointer dereference: pchan. [nullPointerRedundantCheck]
  final_col[3] = (ctx->const_color) ? 1.0 : (BONE_FLAG(eBone, pchan) & BONE_SELECTED) ? 0.1 : 0.65;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1286:6: note: Assuming that condition 'if(pchan&&pchan->custom&&!(arm->flag&ARM_NO_CUSTOM))' is not redundant
  if (pchan && pchan->custom && !(arm->flag & ARM_NO_CUSTOM)) {
     ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1284:46: note: Null pointer dereference
  final_col[3] = (ctx->const_color) ? 1.0 : (BONE_FLAG(eBone, pchan) & BONE_SELECTED) ? 0.1 : 0.65;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1297:32: warning: Either the condition 'pchan' is redundant or there is possible null pointer dereference: pchan. [nullPointerRedundantCheck]
    drw_shgroup_bone_axes(ctx, BONE_VAR(eBone, pchan, disp_mat), final_col);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1286:7: note: Assuming that condition 'pchan' is not redundant
  if (pchan && pchan->custom && !(arm->flag & ARM_NO_CUSTOM)) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1297:32: note: Null pointer dereference
    drw_shgroup_bone_axes(ctx, BONE_VAR(eBone, pchan, disp_mat), final_col);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1470:17: warning: Possible null pointer dereference: pchan [nullPointer]
    rad_head = (pchan->parent && (boneflag & BONE_CONNECTED)) ? &pchan->parent->bone->rad_tail :
                ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1934:42: note: Calling function 'draw_bone_envelope', 3rd argument 'NULL' value is 0
          draw_bone_envelope(ctx, eBone, NULL, arm, boneflag, constflag, select_id);
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1470:17: note: Null pointer dereference
    rad_head = (pchan->parent && (boneflag & BONE_CONNECTED)) ? &pchan->parent->bone->rad_tail :
                ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:2053:18: style: Redundant initialization for 'boneflag'. The initialized value is overwritten before it is read. [redundantInitialization]
        boneflag = bone->flag;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:2051:22: note: boneflag is initialized
        int boneflag = bone->flag;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:2053:18: note: boneflag is overwritten
        boneflag = bone->flag;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_gpencil.c:185:21: style: The scope of the variable 'sh' can be reduced. [variableScope]
  struct GPUShader *sh;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_gpencil.c:186:20: style: The scope of the variable 'grp' can be reduced. [variableScope]
  DRWShadingGroup *grp;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1082:9: style: The scope of the variable 'imat' can be reduced. [variableScope]
  float imat[4][4], bonemat[4][4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1082:21: style: The scope of the variable 'bonemat' can be reduced. [variableScope]
  float imat[4][4], bonemat[4][4];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_armature.c:1083:9: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  float tmp[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_image.c:321:11: style: The scope of the variable 'mat' can be reduced. [variableScope]
    float mat[4][4];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_lattice.c:31:21: style: The scope of the variable 'sh' can be reduced. [variableScope]
  struct GPUShader *sh;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_extra.c:513:13: style: union member 'Anonymous7::_pad00' is never used. [unusedStructMember]
      float _pad00[3], size_x;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_extra.c:514:13: style: union member 'Anonymous7::_pad01' is never used. [unusedStructMember]
      float _pad01[3], size_y;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_extra.c:515:13: style: union member 'Anonymous7::_pad02' is never used. [unusedStructMember]
      float _pad02[3], size_z;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_extra.c:516:21: style: union member 'Anonymous7::_pad03' is never used. [unusedStructMember]
      float pos[3], _pad03[1];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_extra.c:620:13: style: union member 'Anonymous8::_pad00' is never used. [unusedStructMember]
      float _pad00[3];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_extra.c:625:13: style: union member 'Anonymous8::_pad01' is never used. [unusedStructMember]
      float _pad01[3];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_extra.c:630:13: style: union member 'Anonymous8::_pad02' is never used. [unusedStructMember]
      float _pad02[3], clip_sta;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_extra.c:710:13: style: union member 'Anonymous9::_pad00' is never used. [unusedStructMember]
      float _pad00[4];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_extra.c:711:13: style: union member 'Anonymous9::_pad01' is never used. [unusedStructMember]
      float _pad01[4];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_extra.c:712:13: style: union member 'Anonymous9::_pad02' is never used. [unusedStructMember]
      float _pad02[3], clip_sta;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_metaball.c:77:16: style: The scope of the variable 'color' can be reduced. [variableScope]
  const float *color;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\overlay\overlay_outline.c:323:9: style: The scope of the variable 'clearcol' can be reduced. [variableScope]
  float clearcol[4] = {0.0f, 0.0f, 0.0f, 0.0f};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\engines\workbench\workbench_private.h:200:1: error: There is an unknown macro here somewhere. Configuration is required. If BLI_STATIC_ASSERT_ALIGN is a macro then please configure it. [unknownMacro]
BLI_STATIC_ASSERT_ALIGN(WORKBENCH_UBO_World, 16)
^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_lattice.c:181:16: style: Variable 'rdata->actbp' is reassigned a value before the old one has been used. [redundantAssignment]
  rdata->actbp = lt->actbp;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_lattice.c:159:20: note: rdata->actbp is assigned
      rdata->actbp = lt->actbp;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_lattice.c:181:16: note: rdata->actbp is overwritten
  rdata->actbp = lt->actbp;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_gpencil.c:370:44: style: Same expression on both sides of '&&'. [duplicateExpression]
    BLI_assert(cache->stroke_batch == NULL && cache->stroke_batch == NULL);
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_displist.c:445:16: style: The scope of the variable 'verts' can be reduced. [variableScope]
  const float(*verts)[3] = (float(*)[3])dl->verts;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_manager.h:176:1: error: There is an unknown macro here somewhere. Configuration is required. If BLI_STATIC_ASSERT_ALIGN is a macro then please configure it. [unknownMacro]
BLI_STATIC_ASSERT_ALIGN(DRWObjectMatrix, 16)
^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_mesh.c:90:17: error: Uninitialized variable: a [uninitvar]
  *((uint32_t *)a) = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_mesh.c:140:29: note: Calling function 'mesh_cd_layers_type_clear', 1st argument '&cd_used' value is <Uninit>
  mesh_cd_layers_type_clear(&cd_used);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_mesh.c:90:17: note: Uninitialized variable: a
  *((uint32_t *)a) = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_particles.c:995:18: style: Condition 'parent_uvs!=NULL' is always true [knownConditionTrueFalse]
  if (parent_uvs != NULL) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_particles.c:1280:18: style: Condition 'parent_uvs!=NULL' is always true [knownConditionTrueFalse]
  if (parent_uvs != NULL) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_particles.c:1068:18: style: Variable 'curr_point' is assigned a value that is never used. [unreadVariable]
      curr_point = particle_batch_cache_fill_segments_indices(
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_particles.c:1216:16: style: Variable 'curr_point' is assigned a value that is never used. [unreadVariable]
    curr_point = particle_batch_cache_fill_segments(psys,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:999:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_VBO_REQUEST(mr_flag, cache->ordered.pos_nor, CU_DATATYPE_SURFACE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1000:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_VBO_REQUEST(mr_flag, cache->ordered.edge_fac, CU_DATATYPE_SURFACE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1001:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_VBO_REQUEST(mr_flag, cache->ordered.curves_pos, CU_DATATYPE_WIRE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1002:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_VBO_REQUEST(mr_flag, cache->ordered.loop_pos_nor, CU_DATATYPE_SURFACE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1003:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_VBO_REQUEST(mr_flag, cache->ordered.loop_uv, CU_DATATYPE_SURFACE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1004:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_VBO_REQUEST(mr_flag, cache->ordered.loop_tan, CU_DATATYPE_SURFACE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1005:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_IBO_REQUEST(mr_flag, cache->ibo.surfaces_tris, CU_DATATYPE_SURFACE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1006:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_IBO_REQUEST(mr_flag, cache->ibo.surfaces_lines, CU_DATATYPE_SURFACE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1007:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_IBO_REQUEST(mr_flag, cache->ibo.curves_lines, CU_DATATYPE_WIRE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1008:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_IBO_REQUEST(mr_flag, cache->ibo.edges_adj_lines, CU_DATATYPE_SURFACE);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1010:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_VBO_REQUEST(mr_flag, cache->edit.pos, CU_DATATYPE_OVERLAY);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1011:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_VBO_REQUEST(mr_flag, cache->edit.data, CU_DATATYPE_OVERLAY);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1012:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_VBO_REQUEST(mr_flag, cache->edit.curves_nor, CU_DATATYPE_NORMAL);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1013:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_VBO_REQUEST(mr_flag, cache->edit.curves_weight, CU_DATATYPE_OVERLAY);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1014:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_IBO_REQUEST(mr_flag, cache->ibo.edit_verts_points, CU_DATATYPE_OVERLAY);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1015:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  DRW_ADD_FLAG_FROM_IBO_REQUEST(mr_flag, cache->ibo.edit_lines, CU_DATATYPE_OVERLAY);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_impl_curve.c:1018:5: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    DRW_ADD_FLAG_FROM_IBO_REQUEST(mr_flag, cache->surf_per_mat_tris[i], CU_DATATYPE_SURFACE);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_extract_mesh.c:2991:28: portability: Casting from float * to unsigned short * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
  uint16_t *poly_stretch = (uint16_t *)area_ratio;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_extract_mesh.c:3287:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_cache_extract_mesh.c:3192:12: style: Variable 'l_next' is assigned a value that is never used. [unreadVariable]
    l_next = mpoly->loopstart;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_manager_text.c:207:39: style: The scope of the variable 'fvec' can be reduced. [variableScope]
  float v1[3], v2[3], v3[3], vmid[3], fvec[3];
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_manager_text.c:212:9: style: The scope of the variable 'area' can be reduced. [variableScope]
  float area;                    /* area of the face */
        ^
C:\Users\LiTho\source\repos\blender\source\blender\draw\intern\draw_manager_text.c:437:24: style: Variable 'is_first' is assigned a value that is never used. [unreadVariable]
              is_first = false;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_draw.c:603:16: style: Variable 'cfranext' is reassigned a value before the old one has been used. [redundantAssignment]
      cfranext = aknext->cfra;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_draw.c:595:18: note: cfranext is assigned
        cfranext = aknext->cfra;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_draw.c:603:16: note: cfranext is overwritten
      cfranext = aknext->cfra;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_draw.c:401:11: style: The scope of the variable 'range' can be reduced. [variableScope]
    float range;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_draw.c:158:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_edit.c:3294:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_ipo_utils.c:62:32: warning: Either the condition 'fcu==NULL' is redundant or there is possible null pointer dereference: fcu. [nullPointerRedundantCheck]
  else if (ELEM(NULL, id, fcu, fcu->rna_path)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_ipo_utils.c:63:13: note: Assuming that condition 'fcu==NULL' is not redundant
    if (fcu == NULL) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_ipo_utils.c:62:32: note: Null pointer dereference
  else if (ELEM(NULL, id, fcu, fcu->rna_path)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_defines.c:5348:22: style: Variable 'icon' is reassigned a value before the old one has been used. [redundantAssignment]
                icon = ICON_MOD_MASK;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_defines.c:5346:20: note: icon is assigned
              icon = ICON_LAYER_ACTIVE;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_defines.c:5348:22: note: icon is overwritten
                icon = ICON_MOD_MASK;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_defines.c:4004:7: style: The scope of the variable 'type' can be reduced. [variableScope]
  int type = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_defines.c:4648:8: style: The scope of the variable 'done' can be reduced. [variableScope]
  bool done = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_defines.c:4702:8: style: The scope of the variable 'done' can be reduced. [variableScope]
  bool done = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_defines.c:4763:8: style: The scope of the variable 'done' can be reduced. [variableScope]
  bool done = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_defines.c:4648:13: style: Variable 'done' is assigned a value that is never used. [unreadVariable]
  bool done = false;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_defines.c:4702:13: style: Variable 'done' is assigned a value that is never used. [unreadVariable]
  bool done = false;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_channels_defines.c:4763:13: style: Variable 'done' is assigned a value that is never used. [unreadVariable]
  bool done = false;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_markers.c:177:9: style: The scope of the variable 'dist' can be reduced. [variableScope]
  float dist, min_dist = 1000000;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_markers.c:177:15: style: The scope of the variable 'min_dist' can be reduced. [variableScope]
  float dist, min_dist = 1000000;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\anim_filter.c:1088:13: style: The scope of the variable 'seq_name' can be reduced. [variableScope]
      char *seq_name;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\fmodifier_ui.c:885:25: style: The scope of the variable 'sub' can be reduced. [variableScope]
  uiLayout *box, *row, *sub, *col;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\fmodifier_ui.c:885:31: style: The scope of the variable 'col' can be reduced. [variableScope]
  uiLayout *box, *row, *sub, *col;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\fmodifier_ui.c:886:12: style: The scope of the variable 'block' can be reduced. [variableScope]
  uiBlock *block;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\fmodifier_ui.c:887:10: style: The scope of the variable 'but' can be reduced. [variableScope]
  uiBut *but;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\fmodifier_ui.c:888:9: style: The scope of the variable 'width' can be reduced. [variableScope]
  short width = 314;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_draw.c:1232:23: style: Redundant condition: active. '!active || (active && gpl->flag&GP_LAYER_SELECT)' is equivalent to '!active || gpl->flag&GP_LAYER_SELECT' [redundantCondition]
        if ((!active) || ((active) && (gpl->flag & GP_LAYER_SELECT))) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_draw.c:791:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (keys) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_draw.c:711:7: note: First condition
  if (keys) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_draw.c:791:7: note: Second condition
  if (keys) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_edit.c:80:14: style: The scope of the variable 'bezt' can be reduced. [variableScope]
  BezTriple *bezt;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_edit.c:82:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_edit.c:954:9: style: The scope of the variable 'diff' can be reduced. [variableScope]
  float diff;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_edit.c:969:9: style: The scope of the variable 'diff' can be reduced. [variableScope]
  float diff;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_edit.c:865:22: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  const Scene *scene = ked->scene;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_edit.c:877:22: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  const Scene *scene = ked->scene;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_edit.c:980:22: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  const Scene *scene = ked->scene;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyingsets.c:294:18: style: The scope of the variable 'pflag' can be reduced. [variableScope]
  int index = 0, pflag = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_general.c:424:8: style: The scope of the variable 'selected' can be reduced. [variableScope]
  bool selected;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_general.c:493:10: style: The scope of the variable 'x' can be reduced. [variableScope]
  int i, x, totSel = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframes_general.c:1144:7: style: The scope of the variable 'pass' can be reduced. [variableScope]
  int pass;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_add.c:391:25: style: The scope of the variable 'newtarget' can be reduced. [variableScope]
  EditBone *oldtarget, *newtarget;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_add.c:467:29: style: The scope of the variable 'channew' can be reduced. [variableScope]
    bPoseChannel *chanold, *channew;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_naming.c:413:13: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
      bfn = alloca(sizeof(BoneFlipNameData));
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_naming.c:156:8: style: The scope of the variable 'newname' can be reduced. [variableScope]
  char newname[MAXBONENAME];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_naming.c:157:8: style: The scope of the variable 'oldname' can be reduced. [variableScope]
  char oldname[MAXBONENAME];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframing.c:199:17: style: The scope of the variable 'agrp' can be reduced. [variableScope]
  bActionGroup *agrp;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframing.c:635:11: style: The scope of the variable 'prevPosi' can be reduced. [variableScope]
    float prevPosi = 0.0f, prevVal = 0.0f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframing.c:635:28: style: The scope of the variable 'prevVal' can be reduced. [variableScope]
    float prevPosi = 0.0f, prevVal = 0.0f;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframing.c:2377:9: style: The scope of the variable 'path' can be reduced. [variableScope]
  char *path;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframing.c:2541:9: style: The scope of the variable 'path' can be reduced. [variableScope]
  char *path;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_relations.c:557:13: style: The scope of the variable 'curbone' can be reduced. [variableScope]
  EditBone *curbone;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframing.c:2649:9: style: The scope of the variable 'path' can be reduced. [variableScope]
  char *path;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_relations.c:754:9: style: The scope of the variable 'offset' can be reduced. [variableScope]
  float offset[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\animation\keyframing.c:2537:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_skinning.c:84:11: style: The scope of the variable 'hbone' can be reduced. [variableScope]
  Bone ***hbone;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_skinning.c:85:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, segments;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_skinning.c:85:10: style: The scope of the variable 'segments' can be reduced. [variableScope]
  int a, segments;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_skinning.c:157:19: style: The scope of the variable 'hgroup' can be reduced. [variableScope]
  bDeformGroup ***hgroup, *defgroup = NULL;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_skinning.c:158:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, segments;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_skinning.c:158:10: style: The scope of the variable 'segments' can be reduced. [variableScope]
  int a, segments;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_skinning.c:297:17: style: The scope of the variable 'dgroup' can be reduced. [variableScope]
  bDeformGroup *dgroup;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_select.c:896:17: style: Variable 'ebone->flag' is reassigned a value before the old one has been used. [redundantAssignment]
    ebone->flag = ebone_flag_prev | BONE_DONE;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_select.c:895:17: note: ebone->flag is assigned
    ebone->flag = ebone_flag_prev;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_select.c:896:17: note: ebone->flag is overwritten
    ebone->flag = ebone_flag_prev | BONE_DONE;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_select.c:153:16: style: The scope of the variable 'hitresult' can be reduced. [variableScope]
  unsigned int hitresult;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\armature_select.c:280:72: style: Variable 'object_mode' is assigned a value that is never used. [unreadVariable]
                                                          .object_mode = OB_MODE_EDIT,
                                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_group.c:133:16: style: The scope of the variable 'pup' can be reduced. [variableScope]
  uiPopupMenu *pup;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_group.c:134:13: style: The scope of the variable 'layout' can be reduced. [variableScope]
  uiLayout *layout;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_group.c:136:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:140:21: style: The scope of the variable 'len1' can be reduced. [variableScope]
  float t1, t2, t3, len1, len2, len3, area;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:140:27: style: The scope of the variable 'len2' can be reduced. [variableScope]
  float t1, t2, t3, len1, len2, len3, area;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:140:33: style: The scope of the variable 'len3' can be reduced. [variableScope]
  float t1, t2, t3, len1, len2, len3, area;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:140:39: style: The scope of the variable 'area' can be reduced. [variableScope]
  float t1, t2, t3, len1, len2, len3, area;
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:343:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:530:9: style: The scope of the variable 'dist' can be reduced. [variableScope]
  float dist, mindist, h;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:570:10: style: The scope of the variable 'v1' can be reduced. [variableScope]
  int a, v1, v2, v3, (*face)[3];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:570:14: style: The scope of the variable 'v2' can be reduced. [variableScope]
  int a, v1, v2, v3, (*face)[3];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:570:18: style: The scope of the variable 'v3' can be reduced. [variableScope]
  int a, v1, v2, v3, (*face)[3];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:666:10: style: The scope of the variable 'mp' can be reduced. [variableScope]
  MPoly *mp;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:667:10: style: The scope of the variable 'ml' can be reduced. [variableScope]
  MLoop *ml;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1075:19: style: The scope of the variable 'isect' can be reduced. [variableScope]
  MDefBoundIsect *isect;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1247:9: style: The scope of the variable 'weight' can be reduced. [variableScope]
  float weight, totweight = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_lib.c:573:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1248:10: style: The scope of the variable 'a' can be reduced. [variableScope]
  int i, a, x, y, z;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_lib.c:628:16: style: The scope of the variable 'bezt' can be reduced. [variableScope]
    BezTriple *bezt;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1350:10: style: The scope of the variable 'a' can be reduced. [variableScope]
  int i, a, acenter;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_lib.c:629:18: style: The scope of the variable 'i' can be reduced. [variableScope]
    unsigned int i;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1379:10: style: The scope of the variable 'a' can be reduced. [variableScope]
  int i, a, acenter;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_lib.c:1098:17: style: The scope of the variable 'pchan' can be reduced. [variableScope]
  bPoseChannel *pchan;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1406:19: style: The scope of the variable 'isect' can be reduced. [variableScope]
  MDefBoundIsect *isect;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_lib.c:1354:13: style: The scope of the variable 'i' can be reduced. [variableScope]
        int i;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1433:10: style: The scope of the variable 'a' can be reduced. [variableScope]
  int i, a, acenter;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_lib.c:1373:11: style: The scope of the variable 'i' can be reduced. [variableScope]
    short i;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1586:18: style: The scope of the variable 'mdinf' can be reduced. [variableScope]
  MDefInfluence *mdinf;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1587:13: style: The scope of the variable 'cell' can be reduced. [variableScope]
  MDefCell *cell;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1588:38: style: The scope of the variable 'totweight' can be reduced. [variableScope]
  float center[3], vec[3], maxwidth, totweight;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1589:10: style: The scope of the variable 'b' can be reduced. [variableScope]
  int a, b, x, y, z, totinside, offset;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:1589:33: style: The scope of the variable 'offset' can be reduced. [variableScope]
  int a, b, x, y, z, totinside, offset;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_lib.c:438:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_lib.c:573:9: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
  int i = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\meshlaplacian.c:99:13: style: struct member 'HeatWeighting::source' is never used. [unusedStructMember]
    float (*source)[3]; /* vertex source */
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_select.c:1066:7: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
      printf("pose_select_grouped() - Unknown selection type %u\n", type);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_transform.c:116:11: style: The scope of the variable 'premat' can be reduced. [variableScope]
    float premat[3][3], pmat[3][3];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\armature\pose_slide.c:1797:10: style: The scope of the variable 'match' can be reduced. [variableScope]
  int i, match;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_undo.c:78:14: style: The scope of the variable 'newnu' can be reduced. [variableScope]
  Nurb *nu, *newnu;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_undo.c:122:14: style: The scope of the variable 'newnu' can be reduced. [variableScope]
  Nurb *nu, *newnu;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_add.c:127:9: style: The scope of the variable 'fac' can be reduced. [variableScope]
  float fac;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_add.c:128:10: style: The scope of the variable 'b' can be reduced. [variableScope]
  int a, b;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_add.c:400:15: style: The scope of the variable 'tmp_cent' can be reduced. [variableScope]
        float tmp_cent[3] = {0.f, 0.f, 0.f};
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_add.c:454:15: style: The scope of the variable 'tmp_cent' can be reduced. [variableScope]
        float tmp_cent[3] = {0.f, 0.f, 0.f};
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_paint.c:397:21: style: Variable 'location_prev' is reassigned a value before the old one has been used. [redundantAssignment]
      location_prev = selem->location_local;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_paint.c:388:21: note: location_prev is assigned
      location_prev = selem->location_local;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_paint.c:397:21: note: location_prev is overwritten
      location_prev = selem->location_local;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_select.c:344:8: style: The scope of the variable 'lastsel' can be reduced. [variableScope]
  bool lastsel = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_select.c:893:16: style: The scope of the variable 'tempbp' can be reduced. [variableScope]
  BPoint *bp, *tempbp;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_select.c:894:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_select.c:895:9: style: The scope of the variable 'sel' can be reduced. [variableScope]
  short sel = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_select.c:1004:14: style: The scope of the variable 'bezt' can be reduced. [variableScope]
  BezTriple *bezt;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_select.c:344:16: style: Variable 'lastsel' is assigned a value that is never used. [unreadVariable]
  bool lastsel = false;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_select.c:895:13: style: Variable 'sel' is assigned a value that is never used. [unreadVariable]
  short sel = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_select.c:1006:11: style: Variable 'sel' is assigned a value that is never used. [unreadVariable]
  int sel = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_select.c:1007:16: style: Variable 'lastsel' is assigned a value that is never used. [unreadVariable]
  bool lastsel = false;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve_select.c:1072:19: style: Variable 'lastsel' is assigned a value that is never used. [unreadVariable]
          lastsel = false;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:1582:23: style: Condition '*sel<range[1]' is always true [knownConditionTrueFalse]
        else if (*sel < range[1]) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:1751:17: style: Condition 'event_val==0' is always false [knownConditionTrueFalse]
  if (event_val == 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:1703:7: note: Assuming that condition 'event_val' is not redundant
  if (event_val && (ascii || event->utf8_buf[0])) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:1751:17: note: Condition 'event_val==0' is always false
  if (event_val == 0) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:451:7: style: The scope of the variable 'offset' can be reduced. [variableScope]
  int offset = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:452:7: style: The scope of the variable 'getfrom' can be reduced. [variableScope]
  int getfrom;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:721:7: style: The scope of the variable 'linenum' can be reduced. [variableScope]
  int linenum = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:1322:7: style: The scope of the variable 'kern' can be reduced. [variableScope]
  int kern, delta = RNA_int_get(op->ptr, "delta");
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:1793:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:1834:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:1964:13: style: The scope of the variable 'str' can be reduced. [variableScope]
  char32_t *str;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editfont.c:1965:7: style: The scope of the variable 'len' can be reduced. [variableScope]
  int len;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gizmo_library\gizmo_types\arrow3d_gizmo.c:453:16: warning: Conversion of string literal "Make sure this function is called before WM_gizmo_target_property_def_rna" to bool always evaluates to true. [incorrectStringBooleanError]
               "Make sure this function is called before WM_gizmo_target_property_def_rna"));
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gizmo_library\gizmo_types\arrow3d_gizmo.c:470:16: warning: Conversion of string literal "Make sure this function is called before WM_gizmo_target_property_def_rna" to bool always evaluates to true. [incorrectStringBooleanError]
               "Make sure this function is called before WM_gizmo_target_property_def_rna"));
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gizmo_library\gizmo_types\arrow3d_gizmo.c:89:26: style: Variable 'draw_options' is assigned a value that is never used. [unreadVariable]
  const int draw_options = RNA_enum_get(arrow->gizmo.ptr, "draw_options");
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\editaction_gpencil.c:474:27: style: The scope of the variable 'gpsn' can be reduced. [variableScope]
        bGPDstroke *gps, *gpsn;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\editaction_gpencil.c:572:7: style: The scope of the variable 'diff' can be reduced. [variableScope]
  int diff;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\editaction_gpencil.c:584:7: style: The scope of the variable 'diff' can be reduced. [variableScope]
  int diff;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\editaction_gpencil.c:596:7: style: The scope of the variable 'diff' can be reduced. [variableScope]
  int diff;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\editaction_gpencil.c:611:7: style: The scope of the variable 'diff' can be reduced. [variableScope]
  int diff;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\editaction_gpencil.c:341:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = ac->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\annotate_draw.c:101:7: style: The scope of the variable 'draw_points' can be reduced. [variableScope]
  int draw_points = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_add_stroke.c:222:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2934:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              start_rad = BEZT_VALUE(&nu->bezt[start_sel - 1]);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2937:25: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              end_rad = BEZT_VALUE(&nu->bezt[start_sel + 1]);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2941:15: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              BEZT_VALUE(&nu->bezt[start_sel]) = (start_rad + end_rad) / 2.0f;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2944:15: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              BEZT_VALUE(&nu->bezt[start_sel]) = start_rad;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2947:15: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              BEZT_VALUE(&nu->bezt[start_sel]) = end_rad;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2953:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              start_rad = BEZT_VALUE(&nu->bezt[start_sel]);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2957:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              start_rad = BEZT_VALUE(&nu->bezt[start_sel - 1]);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2960:25: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              end_rad = BEZT_VALUE(&nu->bezt[end_sel]);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2964:25: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              end_rad = BEZT_VALUE(&nu->bezt[end_sel + 1]);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2971:15: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              BEZT_VALUE(bezt) = start_rad * (1.0f - fac) + end_rad * fac;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3015:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              start_rad = BP_VALUE(&nu->bp[start_sel - 1]);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3018:25: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              end_rad = BP_VALUE(&nu->bp[start_sel + 1]);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3022:15: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              BP_VALUE(&nu->bp[start_sel]) = (start_rad + end_rad) / 2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3025:15: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              BP_VALUE(&nu->bp[start_sel]) = start_rad;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3028:15: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              BP_VALUE(&nu->bp[start_sel]) = end_rad;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3034:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              start_rad = BP_VALUE(&nu->bp[start_sel]);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3038:27: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              start_rad = BP_VALUE(&nu->bp[start_sel - 1]);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3041:25: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              end_rad = BP_VALUE(&nu->bp[end_sel]);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3045:25: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              end_rad = BP_VALUE(&nu->bp[end_sel + 1]);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3052:15: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
              BP_VALUE(bp) = start_rad * (1.0f - fac) + end_rad * fac;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_armature.c:132:11: style: The scope of the variable 'hbone' can be reduced. [variableScope]
  Bone ***hbone;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_armature.c:133:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, segments;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_armature.c:133:10: style: The scope of the variable 'segments' can be reduced. [variableScope]
  int a, segments;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_armature.c:204:19: style: The scope of the variable 'hgroup' can be reduced. [variableScope]
  bDeformGroup ***hgroup, *defgroup = NULL;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_armature.c:205:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, segments;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_armature.c:205:10: style: The scope of the variable 'segments' can be reduced. [variableScope]
  int a, segments;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:6739:28: style: Redundant initialization for 'bezt'. The initialized value is overwritten before it is read. [redundantInitialization]
  for (i = nu->pntsu, bezt = nu->bezt; i--; bezt++) {
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:6736:19: note: bezt is initialized
  BezTriple *bezt = nu->bezt;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:6739:28: note: bezt is overwritten
  for (i = nu->pntsu, bezt = nu->bezt; i--; bezt++) {
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:309:15: style: The scope of the variable 'index' can be reduced. [variableScope]
  CVKeyIndex *index;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:470:10: style: The scope of the variable 'fp' can be reduced. [variableScope]
  float *fp;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:800:15: style: The scope of the variable 'index' can be reduced. [variableScope]
          int index;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:1272:16: style: The scope of the variable 'newnu' can be reduced. [variableScope]
    Nurb *nu, *newnu;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:1305:14: style: The scope of the variable 'newnu' can be reduced. [variableScope]
  Nurb *nu, *newnu;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:1306:13: style: The scope of the variable 'actkey' can be reduced. [variableScope]
  KeyBlock *actkey;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:1633:13: style: The scope of the variable 'sel' can be reduced. [variableScope]
  int a, b, sel;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:1659:11: style: The scope of the variable 'bp' can be reduced. [variableScope]
  BPoint *bp;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\annotate_paint.c:317:22: style: The scope of the variable 'dvec' can be reduced. [variableScope]
      float rvec[3], dvec[3];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:1660:13: style: The scope of the variable 'sel' can be reduced. [variableScope]
  int a, b, sel;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\annotate_paint.c:395:9: style: The scope of the variable 'a' can be reduced. [variableScope]
  float a[2], b[2], c[2], d[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:1774:11: style: The scope of the variable 'bp' can be reduced. [variableScope]
  BPoint *bp, *bpn, *newbp;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\annotate_paint.c:395:15: style: The scope of the variable 'b' can be reduced. [variableScope]
  float a[2], b[2], c[2], d[2];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:1775:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, b, newu, newv;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\annotate_paint.c:395:27: style: The scope of the variable 'd' can be reduced. [variableScope]
  float a[2], b[2], c[2], d[2];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:1880:10: style: The scope of the variable 'type' can be reduced. [variableScope]
  int a, type, nuindex = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2156:37: style: The scope of the variable 'cyclicu' can be reduced. [variableScope]
  int a, b, c, starta, enda, diffa, cyclicu, cyclicv, newu, newv, i;
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_add_monkey.c:836:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2156:46: style: The scope of the variable 'cyclicv' can be reduced. [variableScope]
  int a, b, c, starta, enda, diffa, cyclicu, cyclicv, newu, newv, i;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2792:20: style: The scope of the variable 'bezt' can be reduced. [variableScope]
        BezTriple *bezt;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:2828:17: style: The scope of the variable 'bp' can be reduced. [variableScope]
        BPoint *bp;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:3363:18: style: The scope of the variable 'amount' can be reduced. [variableScope]
  int a, b, sel, amount, *usel, *vsel, i;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:4280:29: style: The scope of the variable 'headdo' can be reduced. [variableScope]
  NurbSort *nus, *nustest, *headdo, *taildo;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:4280:38: style: The scope of the variable 'taildo' can be reduced. [variableScope]
  NurbSort *nus, *nustest, *headdo, *taildo;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:4283:15: style: The scope of the variable 'headdist' can be reduced. [variableScope]
  float dist, headdist, taildist;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:4283:25: style: The scope of the variable 'taildist' can be reduced. [variableScope]
  float dist, headdist, taildist;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:5456:9: style: The scope of the variable 'temp' can be reduced. [variableScope]
  float temp[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:5949:16: style: The scope of the variable 'pup' can be reduced. [variableScope]
  uiPopupMenu *pup;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:5950:13: style: The scope of the variable 'layout' can be reduced. [variableScope]
  uiLayout *layout;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:6078:13: style: The scope of the variable 'starta' can be reduced. [variableScope]
  int a, b, starta, enda, cut, cyclicut;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:6078:21: style: The scope of the variable 'enda' can be reduced. [variableScope]
  int a, b, starta, enda, cut, cyclicut;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:6078:27: style: The scope of the variable 'cut' can be reduced. [variableScope]
  int a, b, starta, enda, cut, cyclicut;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:6078:32: style: The scope of the variable 'cyclicut' can be reduced. [variableScope]
  int a, b, starta, enda, cut, cyclicut;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_convert.c:415:9: style: The scope of the variable 'cfra' can be reduced. [variableScope]
  float cfra;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_convert.c:696:31: style: The scope of the variable 'next_p' can be reduced. [variableScope]
    float p1[3], p2[3], p[3], next_p[3];
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_convert.c:757:17: style: The scope of the variable 'next_p' can be reduced. [variableScope]
    float p[3], next_p[3];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_convert.c:1403:10: style: The scope of the variable 'base_time' can be reduced. [variableScope]
  double base_time, cur_time, prev_time = -1.0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_convert.c:1403:21: style: The scope of the variable 'cur_time' can be reduced. [variableScope]
  double base_time, cur_time, prev_time = -1.0;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_convert.c:491:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_convert.c:1398:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_convert.c:1459:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\curve\editcurve.c:146:48: style: Variable 'pt_index' is assigned a value that is never used. [unreadVariable]
  int a, key_index = 0, nu_index = 0, pt_index = 0, vertex_index = 0;
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_merge.c:662:8: style: Variable 'prop' is reassigned a value before the old one has been used. [redundantAssignment]
  prop = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_merge.c:660:8: note: prop is assigned
  prop = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_merge.c:662:8: note: prop is overwritten
  prop = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_merge.c:664:8: style: Variable 'prop' is reassigned a value before the old one has been used. [redundantAssignment]
  prop = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_merge.c:662:8: note: prop is assigned
  prop = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_merge.c:664:8: note: prop is overwritten
  prop = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_merge.c:110:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_merge.c:315:11: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
  int idx = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_interpolate.c:408:18: warning: Either the condition 'if(tgpi)' is redundant or there is possible null pointer dereference: tgpi. [nullPointerRedundantCheck]
  bGPdata *gpd = tgpi->gpd;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_interpolate.c:411:6: note: Assuming that condition 'if(tgpi)' is not redundant
  if (tgpi) {
     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_interpolate.c:408:18: note: Null pointer dereference
  bGPdata *gpd = tgpi->gpd;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_interpolate.c:562:15: style: The scope of the variable 'gps_dst' can be reduced. [variableScope]
  bGPDstroke *gps_dst;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_interpolate.c:503:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:783:9: style: The scope of the variable 'tp' can be reduced. [variableScope]
    int tp = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:784:9: style: The scope of the variable 'bm' can be reduced. [variableScope]
    int bm = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:785:9: style: The scope of the variable 'lt' can be reduced. [variableScope]
    int lt = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:786:9: style: The scope of the variable 'rt' can be reduced. [variableScope]
    int rt = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:981:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:1237:12: style: Local variable 'region' shadows outer argument [shadowArgument]
  ARegion *region = CTX_wm_region(C);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:1233:69: note: Shadowed declaration
static void gpencil_fill_draw_3d(const bContext *C, ARegion *UNUSED(region), void *arg)
                                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:1237:12: note: Shadow variable
  ARegion *region = CTX_wm_region(C);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:679:13: style: Variable 'pixel' is assigned a value that is never used. [unreadVariable]
  int pixel = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_data.c:1874:8: style: The scope of the variable 'tool' can be reduced. [variableScope]
  char tool = '0';
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:736:13: style: Variable 'pixel' is assigned a value that is never used. [unreadVariable]
  int pixel = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_fill.c:981:9: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
  int i = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_data.c:217:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_data.c:647:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_undo.c:93:20: style: The scope of the variable 'gpld' can be reduced. [variableScope]
        bGPDlayer *gpld;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:461:5: warning: Either the condition 'data!=NULL' is redundant or there is possible null pointer dereference: data. [nullPointerRedundantCheck]
    data->size = 0; /* minimum requirement - so that we can repopulate again */
    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:459:21: note: Assuming that condition 'data!=NULL' is not redundant
    BLI_assert(data != NULL);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:458:28: note: Assignment 'data=BLI_ghash_lookup(gso->stroke_customdata,gps)', assigned value is 0
    data = BLI_ghash_lookup(gso->stroke_customdata, gps);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:461:5: note: Null pointer dereference
    data->size = 0; /* minimum requirement - so that we can repopulate again */
    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:463:12: warning: Either the condition 'data!=NULL' is redundant or there is possible null pointer dereference: data. [nullPointerRedundantCheck]
    memset(data->points, 0, sizeof(int) * data->capacity);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:459:21: note: Assuming that condition 'data!=NULL' is not redundant
    BLI_assert(data != NULL);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:458:28: note: Assignment 'data=BLI_ghash_lookup(gso->stroke_customdata,gps)', assigned value is 0
    data = BLI_ghash_lookup(gso->stroke_customdata, gps);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:463:12: note: Null pointer dereference
    memset(data->points, 0, sizeof(int) * data->capacity);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:464:12: warning: Either the condition 'data!=NULL' is redundant or there is possible null pointer dereference: data. [nullPointerRedundantCheck]
    memset(data->weights, 0, sizeof(float) * data->capacity);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:459:21: note: Assuming that condition 'data!=NULL' is not redundant
    BLI_assert(data != NULL);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:458:28: note: Assignment 'data=BLI_ghash_lookup(gso->stroke_customdata,gps)', assigned value is 0
    data = BLI_ghash_lookup(gso->stroke_customdata, gps);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:464:12: note: Null pointer dereference
    memset(data->weights, 0, sizeof(float) * data->capacity);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:465:12: warning: Either the condition 'data!=NULL' is redundant or there is possible null pointer dereference: data. [nullPointerRedundantCheck]
    memset(data->rot_eval, 0, sizeof(float) * data->capacity);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:459:21: note: Assuming that condition 'data!=NULL' is not redundant
    BLI_assert(data != NULL);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:458:28: note: Assignment 'data=BLI_ghash_lookup(gso->stroke_customdata,gps)', assigned value is 0
    data = BLI_ghash_lookup(gso->stroke_customdata, gps);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:465:12: note: Null pointer dereference
    memset(data->rot_eval, 0, sizeof(float) * data->capacity);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:495:14: warning: Either the condition 'data!=NULL' is redundant or there is possible null pointer dereference: data. [nullPointerRedundantCheck]
  BLI_assert(data->size < data->capacity);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:494:19: note: Assuming that condition 'data!=NULL' is not redundant
  BLI_assert(data != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:491:49: note: Assignment 'data=BLI_ghash_lookup(gso->stroke_customdata,gps)', assigned value is 0
  tGPSB_Grab_StrokeData *data = BLI_ghash_lookup(gso->stroke_customdata, gps);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:495:14: note: Null pointer dereference
  BLI_assert(data->size < data->capacity);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:498:3: warning: Either the condition 'data!=NULL' is redundant or there is possible null pointer dereference: data. [nullPointerRedundantCheck]
  data->points[data->size] = pt_index;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:494:19: note: Assuming that condition 'data!=NULL' is not redundant
  BLI_assert(data != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:491:49: note: Assignment 'data=BLI_ghash_lookup(gso->stroke_customdata,gps)', assigned value is 0
  tGPSB_Grab_StrokeData *data = BLI_ghash_lookup(gso->stroke_customdata, gps);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:498:3: note: Null pointer dereference
  data->points[data->size] = pt_index;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:499:3: warning: Either the condition 'data!=NULL' is redundant or there is possible null pointer dereference: data. [nullPointerRedundantCheck]
  data->weights[data->size] = inf;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:494:19: note: Assuming that condition 'data!=NULL' is not redundant
  BLI_assert(data != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:491:49: note: Assignment 'data=BLI_ghash_lookup(gso->stroke_customdata,gps)', assigned value is 0
  tGPSB_Grab_StrokeData *data = BLI_ghash_lookup(gso->stroke_customdata, gps);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:499:3: note: Null pointer dereference
  data->weights[data->size] = inf;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_primitive.c:1079:18: warning: Either the condition 'if(tgpi)' is redundant or there is possible null pointer dereference: tgpi. [nullPointerRedundantCheck]
  bGPdata *gpd = tgpi->gpd;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_primitive.c:1082:6: note: Assuming that condition 'if(tgpi)' is not redundant
  if (tgpi) {
     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_primitive.c:1079:18: note: Null pointer dereference
  bGPdata *gpd = tgpi->gpd;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:500:3: warning: Either the condition 'data!=NULL' is redundant or there is possible null pointer dereference: data. [nullPointerRedundantCheck]
  data->rot_eval[data->size] = rot_eval;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:494:19: note: Assuming that condition 'data!=NULL' is not redundant
  BLI_assert(data != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:491:49: note: Assignment 'data=BLI_ghash_lookup(gso->stroke_customdata,gps)', assigned value is 0
  tGPSB_Grab_StrokeData *data = BLI_ghash_lookup(gso->stroke_customdata, gps);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:500:3: note: Null pointer dereference
  data->rot_eval[data->size] = rot_eval;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:501:3: warning: Either the condition 'data!=NULL' is redundant or there is possible null pointer dereference: data. [nullPointerRedundantCheck]
  data->size++;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:494:19: note: Assuming that condition 'data!=NULL' is not redundant
  BLI_assert(data != NULL);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:491:49: note: Assignment 'data=BLI_ghash_lookup(gso->stroke_customdata,gps)', assigned value is 0
  tGPSB_Grab_StrokeData *data = BLI_ghash_lookup(gso->stroke_customdata, gps);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:501:3: note: Null pointer dereference
  data->size++;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_select.c:1454:11: style: Redundant initialization for 'whole'. The initialized value is overwritten before it is read. [redundantInitialization]
    whole = (bool)(gpencil_select_mode_from_sculpt(ts->gpencil_selectmode_sculpt) ==
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_select.c:1434:14: note: whole is initialized
  bool whole = RNA_boolean_get(op->ptr, "entire_strokes");
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_select.c:1454:11: note: whole is overwritten
    whole = (bool)(gpencil_select_mode_from_sculpt(ts->gpencil_selectmode_sculpt) ==
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:243:8: style: The scope of the variable 'changed' can be reduced. [variableScope]
  bool changed = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:259:21: style: The scope of the variable 'pt' can be reduced. [variableScope]
        bGPDspoint *pt;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:636:9: style: The scope of the variable 'dvec' can be reduced. [variableScope]
  float dvec[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:1004:7: style: The scope of the variable 'i2' can be reduced. [variableScope]
  int i2 = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:1431:15: style: The scope of the variable 'pt1' can be reduced. [variableScope]
  bGPDspoint *pt1, *pt2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:1005:7: style: The scope of the variable 'totnewpoints' can be reduced. [variableScope]
  int totnewpoints, oldtotpoints;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:1431:21: style: The scope of the variable 'pt2' can be reduced. [variableScope]
  bGPDspoint *pt1, *pt2;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_select.c:874:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:1005:21: style: The scope of the variable 'oldtotpoints' can be reduced. [variableScope]
  int totnewpoints, oldtotpoints;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:1435:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:1964:7: style: The scope of the variable 'first' can be reduced. [variableScope]
  int first = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:1436:7: style: The scope of the variable 'index' can be reduced. [variableScope]
  int index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:1965:7: style: The scope of the variable 'last' can be reduced. [variableScope]
  int last = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:1437:8: style: The scope of the variable 'include_last' can be reduced. [variableScope]
  bool include_last = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:3507:9: style: The scope of the variable 'origin' can be reduced. [variableScope]
  float origin[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:3801:7: style: The scope of the variable 'totnewpoints' can be reduced. [variableScope]
  int totnewpoints, oldtotpoints;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:3801:21: style: The scope of the variable 'oldtotpoints' can be reduced. [variableScope]
  int totnewpoints, oldtotpoints;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:3802:7: style: The scope of the variable 'i2' can be reduced. [variableScope]
  int i2;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_uv.c:94:8: style: The scope of the variable 'msg' can be reduced. [variableScope]
  char msg[UI_MAX_DRAW_STR];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:4198:15: style: The scope of the variable 'pt' can be reduced. [variableScope]
  bGPDspoint *pt;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_uv.c:131:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:4200:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, idx;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_sculpt_paint.c:989:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = gso->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:4200:10: style: The scope of the variable 'idx' can be reduced. [variableScope]
  int i, idx;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:4665:15: style: The scope of the variable 'r_hita' can be reduced. [variableScope]
        float r_hita[3], r_hitb[3];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:4665:26: style: The scope of the variable 'r_hitb' can be reduced. [variableScope]
        float r_hita[3], r_hitb[3];
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_edit.c:1766:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:137:21: warning: Identical inner 'if' condition is always true. [identicalInnerCondition]
      if (gps->flag & GP_STROKE_SELECT) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:134:19: note: outer condition: gps->flag&GP_STROKE_SELECT
    if (gps->flag & GP_STROKE_SELECT) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:137:21: note: identical inner condition: gps->flag&GP_STROKE_SELECT
      if (gps->flag & GP_STROKE_SELECT) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:305:21: warning: Identical inner 'if' condition is always true. [identicalInnerCondition]
      if (gps->flag & GP_STROKE_SELECT) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:302:19: note: outer condition: gps->flag&GP_STROKE_SELECT
    if (gps->flag & GP_STROKE_SELECT) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:305:21: note: identical inner condition: gps->flag&GP_STROKE_SELECT
      if (gps->flag & GP_STROKE_SELECT) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:191:8: style: Variable 'prop' is reassigned a value before the old one has been used. [redundantAssignment]
  prop = RNA_def_float(ot->srna, "contrast", 0.0f, min, max, "Contrast", "", min, max);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:190:8: note: prop is assigned
  prop = RNA_def_float(ot->srna, "brightness", 0.0f, min, max, "Brightness", "", min, max);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:191:8: note: prop is overwritten
  prop = RNA_def_float(ot->srna, "contrast", 0.0f, min, max, "Contrast", "", min, max);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:437:16: warning: Redundant assignment of 'brush' to itself. [selfAssignment]
  Brush *brush = brush = paint->brush;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:105:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:106:15: style: The scope of the variable 'pt' can be reduced. [variableScope]
  bGPDspoint *pt;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:201:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:202:15: style: The scope of the variable 'pt' can be reduced. [variableScope]
  bGPDspoint *pt;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:203:9: style: The scope of the variable 'hsv' can be reduced. [variableScope]
  float hsv[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:295:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:296:15: style: The scope of the variable 'pt' can be reduced. [variableScope]
  bGPDspoint *pt;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:363:15: style: The scope of the variable 'pt' can be reduced. [variableScope]
  bGPDspoint *pt;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:440:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_ops.c:441:15: style: The scope of the variable 'pt' can be reduced. [variableScope]
  bGPDspoint *pt;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:1241:32: warning: Either the condition 'eraser!=NULL' is redundant or there is possible null pointer dereference: eraser. [nullPointerRedundantCheck]
  else if ((eraser != NULL) & (eraser->gpencil_tool == GPAINT_TOOL_ERASE)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:1241:20: note: Assuming that condition 'eraser!=NULL' is not redundant
  else if ((eraser != NULL) & (eraser->gpencil_tool == GPAINT_TOOL_ERASE)) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:1235:20: note: Assignment 'eraser=p->eraser', assigned value is 0
  Brush *eraser = p->eraser;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:1241:32: note: Null pointer dereference
  else if ((eraser != NULL) & (eraser->gpencil_tool == GPAINT_TOOL_ERASE)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:1581:32: warning: Either the condition 'eraser!=NULL' is redundant or there is possible null pointer dereference: eraser. [nullPointerRedundantCheck]
  else if ((eraser != NULL) & (eraser->gpencil_tool == GPAINT_TOOL_ERASE)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:1581:20: note: Assuming that condition 'eraser!=NULL' is not redundant
  else if ((eraser != NULL) & (eraser->gpencil_tool == GPAINT_TOOL_ERASE)) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:1571:20: note: Assignment 'eraser=p->eraser', assigned value is 0
  Brush *eraser = p->eraser;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:1581:32: note: Null pointer dereference
  else if ((eraser != NULL) & (eraser->gpencil_tool == GPAINT_TOOL_ERASE)) {
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:149:9: style: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
        break;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:876:9: style: The scope of the variable 'dvec' can be reduced. [variableScope]
  float dvec[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:921:11: style: The scope of the variable 'mval_f' can be reduced. [variableScope]
    float mval_f[2] = {point2D->x, point2D->y};
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:923:20: style: The scope of the variable 'dvec' can be reduced. [variableScope]
    float rvec[3], dvec[3];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:1166:7: style: The scope of the variable 'totnewpoints' can be reduced. [variableScope]
  int totnewpoints, oldtotpoints;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:1166:21: style: The scope of the variable 'oldtotpoints' can be reduced. [variableScope]
  int totnewpoints, oldtotpoints;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:1167:7: style: The scope of the variable 'i2' can be reduced. [variableScope]
  int i2;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:1921:9: style: The scope of the variable 'mval_f' can be reduced. [variableScope]
  float mval_f[2] = {(float)point2D->x, (float)point2D->y};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_align.c:435:17: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  butal_array = alloca(sizeof(*butal_array) * (size_t)num_buttons);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:1923:18: style: The scope of the variable 'dvec' can be reduced. [variableScope]
  float rvec[3], dvec[3];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:2389:23: style: The scope of the variable 'pt' can be reduced. [variableScope]
          bGPDspoint *pt;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:464:20: style: The scope of the variable 'dvec' can be reduced. [variableScope]
    float rvec[3], dvec[3];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_utils.c:2390:15: style: The scope of the variable 'i' can be reduced. [variableScope]
          int i;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:465:11: style: The scope of the variable 'mval_f' can be reduced. [variableScope]
    float mval_f[2];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_align.c:291:13: style: The scope of the variable 'butal_neighbor' can be reduced. [variableScope]
  ButAlign *butal_neighbor;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:492:9: style: The scope of the variable 'mvec' can be reduced. [variableScope]
  float mvec[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:515:9: style: The scope of the variable 'mpressure' can be reduced. [variableScope]
  float mpressure;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:579:9: style: The scope of the variable 'a' can be reduced. [variableScope]
  float a[2], b[2], c[2], d[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:579:15: style: The scope of the variable 'b' can be reduced. [variableScope]
  float a[2], b[2], c[2], d[2];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:579:27: style: The scope of the variable 'd' can be reduced. [variableScope]
  float a[2], b[2], c[2], d[2];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_paint.c:1252:11: style: The scope of the variable 'fpt' can be reduced. [variableScope]
    float fpt[3];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_weight_paint.c:396:15: style: The scope of the variable 'pt1' can be reduced. [variableScope]
  bGPDspoint *pt1, *pt2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_weight_paint.c:396:21: style: The scope of the variable 'pt2' can be reduced. [variableScope]
  bGPDspoint *pt1, *pt2;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_weight_paint.c:400:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_weight_paint.c:401:7: style: The scope of the variable 'index' can be reduced. [variableScope]
  int index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_weight_paint.c:402:8: style: The scope of the variable 'include_last' can be reduced. [variableScope]
  bool include_last = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_weight_paint.c:69:9: style: struct member 'tGP_Grid::bottom' is never used. [unusedStructMember]
  float bottom[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_weight_paint.c:71:9: style: struct member 'tGP_Grid::top' is never used. [unusedStructMember]
  float top[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_weight_paint.c:75:7: style: struct member 'tGP_Grid::totcol' is never used. [unusedStructMember]
  int totcol;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_paint.c:835:15: style: The scope of the variable 'pt1' can be reduced. [variableScope]
  bGPDspoint *pt1, *pt2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_paint.c:835:21: style: The scope of the variable 'pt2' can be reduced. [variableScope]
  bGPDspoint *pt1, *pt2;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_paint.c:839:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_paint.c:840:7: style: The scope of the variable 'index' can be reduced. [variableScope]
  int index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_paint.c:841:8: style: The scope of the variable 'include_last' can be reduced. [variableScope]
  bool include_last = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\gpencil\gpencil_vertex_paint.c:989:7: style: The scope of the variable 'totcol' can be reduced. [variableScope]
  int totcol = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_anim.c:148:18: style: The scope of the variable 'driver' can be reduced. [variableScope]
  ChannelDriver *driver;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_anim.c:170:18: style: The scope of the variable 'driver' can be reduced. [variableScope]
  ChannelDriver *driver;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_draw.c:1007:9: style: The scope of the variable 'min' can be reduced. [variableScope]
  float min, max;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_draw.c:1007:14: style: The scope of the variable 'max' can be reduced. [variableScope]
  float min, max;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_eyedropper_driver.c:99:9: style: The scope of the variable 'flag' can be reduced. [variableScope]
  short flag = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_eyedropper_gpencil_color.c:165:40: warning: Either the condition 'ma_new!=NULL' is redundant or there is possible null pointer dereference: ma_new. [nullPointerRedundantCheck]
  MaterialGPencilStyle *gp_style_new = ma_new->gp_style;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_eyedropper_gpencil_color.c:163:21: note: Assuming that condition 'ma_new!=NULL' is not redundant
  BLI_assert(ma_new != NULL);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_eyedropper_gpencil_color.c:158:53: note: Assignment 'ma_new=BKE_gpencil_object_material_new(bmain,ob,"Material",&idx)', assigned value is 0
  Material *ma_new = BKE_gpencil_object_material_new(bmain, ob, "Material", &idx);
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_eyedropper_gpencil_color.c:165:40: note: Null pointer dereference
  MaterialGPencilStyle *gp_style_new = ma_new->gp_style;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_eyedropper_gpencil_color.c:293:11: style: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
          break;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:285:22: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  int *spacers_pos = alloca(sizeof(*spacers_pos) * (size_t)sepr_flex_len);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:1104:43: warning: Either the condition 'mt!=NULL' is redundant or there is possible null pointer dereference: mt. [nullPointerRedundantCheck]
  IDP_AddToGroup(prop_menu, IDP_NewString(mt->idname, "name", sizeof(mt->idname)));
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:1096:17: note: Assuming that condition 'mt!=NULL' is not redundant
  BLI_assert(mt != NULL);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:1095:37: note: Assignment 'mt=UI_but_menutype_get(but)', assigned value is 0
  MenuType *mt = UI_but_menutype_get(but);
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:1104:43: note: Null pointer dereference
  IDP_AddToGroup(prop_menu, IDP_NewString(mt->idname, "name", sizeof(mt->idname)));
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:1130:44: warning: Either the condition 'pt!=NULL' is redundant or there is possible null pointer dereference: pt. [nullPointerRedundantCheck]
  IDP_AddToGroup(prop_panel, IDP_NewString(pt->idname, "name", sizeof(pt->idname)));
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:1122:17: note: Assuming that condition 'pt!=NULL' is not redundant
  BLI_assert(pt != NULL);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:1121:39: note: Assignment 'pt=UI_but_paneltype_get(but)', assigned value is 0
  PanelType *pt = UI_but_paneltype_get(but);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:1130:44: note: Null pointer dereference
  IDP_AddToGroup(prop_panel, IDP_NewString(pt->idname, "name", sizeof(pt->idname)));
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2134:23: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
    const float *fp = (float *)but->poin;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2185:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
    float *fp = (float *)but->poin;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2365:14: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
    value = *(float *)but->poin;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2462:17: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
      value = *((float *)but->poin) = (float)value;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:859:10: style: The scope of the variable 'oldbut' can be reduced. [variableScope]
  uiBut *oldbut;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:1219:8: style: The scope of the variable 'prop_enum_value_is_int' can be reduced. [variableScope]
  bool prop_enum_value_is_int = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:1220:15: style: The scope of the variable 'prop_enum_value_id' can be reduced. [variableScope]
  const char *prop_enum_value_id = "value";
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2100:16: style: The scope of the variable 'prop' can be reduced. [variableScope]
  PropertyRNA *prop;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2101:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2152:16: style: The scope of the variable 'prop' can be reduced. [variableScope]
  PropertyRNA *prop;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2163:11: style: The scope of the variable 'a' can be reduced. [variableScope]
      int a;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2307:16: style: The scope of the variable 'prop' can be reduced. [variableScope]
  PropertyRNA *prop;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2373:16: style: The scope of the variable 'prop' can be reduced. [variableScope]
  PropertyRNA *prop;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_ops.c:637:29: warning: Either the condition 'id!=NULL' is redundant or there is possible null pointer dereference: id. [nullPointerRedundantCheck]
  const bool is_template = (id->override_library->reference == NULL);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_ops.c:635:17: note: Assuming that condition 'id!=NULL' is not redundant
  BLI_assert(id != NULL && id->override_library != NULL);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_ops.c:632:15: note: Assignment 'id=ptr.owner_id', assigned value is 0
  ID *id = ptr.owner_id;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_ops.c:637:29: note: Null pointer dereference
  const bool is_template = (id->override_library->reference == NULL);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface.c:2501:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = CTX_data_scene(but->block->evil_C);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_ops.c:84:9: style: The scope of the variable 'path' can be reduced. [variableScope]
  char *path;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_ops.c:106:9: style: The scope of the variable 'path' can be reduced. [variableScope]
  char *path;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_ops.c:173:9: style: The scope of the variable 'path' can be reduced. [variableScope]
  char *path;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_icons.c:827:14: style: Condition 'b16buf==NULL' is always true [knownConditionTrueFalse]
  if (b16buf == NULL) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_icons.c:823:19: note: Assignment 'b16buf=NULL', assigned value is 0
  ImBuf *b16buf = NULL, *b32buf = NULL, *b16buf_border = NULL, *b32buf_border = NULL;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_icons.c:827:14: note: Condition 'b16buf==NULL' is always true
  if (b16buf == NULL) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_icons.c:842:14: style: Condition 'b32buf==NULL' is always true [knownConditionTrueFalse]
  if (b32buf == NULL) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_icons.c:823:35: note: Assignment 'b32buf=NULL', assigned value is 0
  ImBuf *b16buf = NULL, *b32buf = NULL, *b16buf_border = NULL, *b32buf_border = NULL;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_icons.c:842:14: note: Condition 'b32buf==NULL' is always true
  if (b32buf == NULL) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_icons.c:211:11: style: The scope of the variable 'y' can be reduced. [variableScope]
      int y, imgsize;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_icons.c:211:14: style: The scope of the variable 'imgsize' can be reduced. [variableScope]
      int y, imgsize;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:1027:31: style: The scope of the variable 'psnext' can be reduced. [variableScope]
  PanelSort *ps, *panelsort, *psnext;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:1964:9: style: The scope of the variable 'scaletabs' can be reduced. [variableScope]
  float scaletabs = 1.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:2282:10: style: The scope of the variable 'pa' can be reduced. [variableScope]
  Panel *pa;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:1964:19: style: Variable 'scaletabs' is assigned a value that is never used. [unreadVariable]
  float scaletabs = 1.0f;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:3861:5: style: Variable 'w' is reassigned a value before the old one has been used. [redundantAssignment]
  w = (litem->w - (flow->totcol - 1) * style->columnspace) / flow->totcol;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:3856:5: note: w is assigned
  w = litem->w - (flow->totcol - 1) * style->columnspace;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:3861:5: note: w is overwritten
  w = (litem->w - (flow->totcol - 1) * style->columnspace) / flow->totcol;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_ops.c:1459:11: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
  int ret = OPERATOR_CANCELLED;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:462:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, index = POINTER_AS_INT(arg_index);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:606:9: style: The scope of the variable 'row' can be reduced. [variableScope]
    int row, col;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:606:14: style: The scope of the variable 'col' can be reduced. [variableScope]
    int row, col;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:2486:10: style: The scope of the variable 'bt' can be reduced. [variableScope]
  uiBut *bt;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:2572:14: style: The scope of the variable 'ptype' can be reduced. [variableScope]
  StructRNA *ptype;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:2635:14: style: The scope of the variable 'icontype' can be reduced. [variableScope]
  StructRNA *icontype;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:2637:8: style: The scope of the variable 'namestr' can be reduced. [variableScope]
  char namestr[UI_MAX_NAME_STR];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:3009:10: style: The scope of the variable 'namestr' can be reduced. [variableScope]
    char namestr[UI_MAX_NAME_STR];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:3355:33: style: The scope of the variable 'newtotw' can be reduced. [variableScope]
  int x, y, w, tot, totw, neww, newtotw, itemw, minw, itemh, offset;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:3355:62: style: The scope of the variable 'offset' can be reduced. [variableScope]
  int x, y, w, tot, totw, neww, newtotw, itemw, minw, itemh, offset;
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:4116:11: error: Uninitialized variable: avg_w [uninitvar]
      if (avg_w == 0.0f) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:4120:61: error: Uninitialized variable: avg_w [uninitvar]
        gflow->tot_columns = min_ii(max_ii((int)(litem->w / avg_w), 1), gflow->tot_items);
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:4165:45: error: Uninitialized variable: avg_w [uninitvar]
      litem->w = (int)(gflow->tot_columns * avg_w) + space_x * (gflow->tot_columns - 1);
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:4166:42: error: Uninitialized variable: max_h [uninitvar]
      litem->h = (int)(gflow->tot_rows * max_h) + space_y * (gflow->tot_rows - 1);
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:4194:16: error: Uninitialized variable: tot_w [uninitvar]
    litem->w = tot_w;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:4195:16: error: Uninitialized variable: tot_h [uninitvar]
    litem->h = tot_h;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_color_picker.c:225:86: error: syntax error [syntaxError]
      BLI_snprintf(col, sizeof(col), "%02X%02X%02X", UNPACK3_EX((uint), rgb_hex_uchar, ));
                                                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:2113:34: style: Condition 'is_active' is always true [knownConditionTrueFalse]
                                 is_active ? theme_col_tab_active : theme_col_tab_inactive);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:2098:9: note: Assuming that condition 'is_active' is not redundant
    if (is_active)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:2113:34: note: Condition 'is_active' is always true
                                 is_active ? theme_col_tab_active : theme_col_tab_inactive);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:2140:34: style: Condition 'is_active' is always true [knownConditionTrueFalse]
                                 is_active ? theme_col_back : theme_col_tab_inactive,
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:2098:9: note: Assuming that condition 'is_active' is not redundant
    if (is_active)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:2140:34: note: Condition 'is_active' is always true
                                 is_active ? theme_col_back : theme_col_tab_inactive,
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:2141:34: style: Condition 'is_active' is always true [knownConditionTrueFalse]
                                 is_active ? theme_col_tab_highlight :
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:2098:9: note: Assuming that condition 'is_active' is not redundant
    if (is_active)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_panel.c:2141:34: note: Condition 'is_active' is always true
                                 is_active ? theme_col_tab_highlight :
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_layout.c:690:18: style: Variable 'str[0]' is assigned a value that is never used. [unreadVariable]
          str[0] = RNA_property_array_item_char(prop, a);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:2308:19: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  float *values = alloca(array_length * sizeof(float));
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:2341:19: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  float *values = alloca(sizeof(float) * array_length);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_menu_pie.c:109:9: style: The scope of the variable 'event_type' can be reduced. [variableScope]
  short event_type;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_menu_pie.c:158:10: style: The scope of the variable 'titlestr' can be reduced. [variableScope]
    char titlestr[256];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_menu_popup.c:385:10: style: The scope of the variable 'but' can be reduced. [variableScope]
  uiBut *but;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_menu_popup.c:403:10: style: The scope of the variable 'titlestr' can be reduced. [variableScope]
    char titlestr[256];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_popover.c:302:13: style: The scope of the variable 'layout' can be reduced. [variableScope]
  uiLayout *layout;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:1943:38: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
        copy_v3_v3(drag_info->color, (float *)but->poin);
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:712:16: style: The scope of the variable 'after' can be reduced. [variableScope]
  uiAfterFunc *after;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:779:16: style: The scope of the variable 'after' can be reduced. [variableScope]
  uiAfterFunc *after;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:1614:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:2919:11: style: The scope of the variable 'cdist' can be reduced. [variableScope]
    float cdist, cdist_prev = 0.0f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:3211:9: style: The scope of the variable 'pbuf' can be reduced. [variableScope]
  char *pbuf;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:3499:25: style: The scope of the variable 'inbox' can be reduced. [variableScope]
  bool changed = false, inbox = false, update = false;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:4664:9: style: The scope of the variable 'deler' can be reduced. [variableScope]
  float deler, tempf;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:4665:7: style: The scope of the variable 'lvalue' can be reduced. [variableScope]
  int lvalue, temp;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:5079:13: style: The scope of the variable 'lvalue' can be reduced. [variableScope]
  int temp, lvalue;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:5675:11: style: The scope of the variable 'angle' can be reduced. [variableScope]
    float angle, angle_snap;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:5675:18: style: The scope of the variable 'angle_snap' can be reduced. [variableScope]
    float angle, angle_snap;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:5793:17: style: The scope of the variable 'color' can be reduced. [variableScope]
          float color[3];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:6551:11: style: The scope of the variable 'cbd' can be reduced. [variableScope]
  CBData *cbd;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:6554:15: style: The scope of the variable 'a' can be reduced. [variableScope]
  int mx, my, a, xco;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:6554:18: style: The scope of the variable 'xco' can be reduced. [variableScope]
  int mx, my, a, xco;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:6637:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:6914:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:8031:14: style: The scope of the variable 'subbut' can be reduced. [variableScope]
      uiBut *subbut;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:8200:23: style: The scope of the variable 'data' can be reduced. [variableScope]
  uiHandleButtonData *data;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:8528:23: style: The scope of the variable 'data' can be reduced. [variableScope]
  uiHandleButtonData *data;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:10490:10: style: The scope of the variable 'inside' can be reduced. [variableScope]
    bool inside = false;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_icons.c:135:11: style: struct member 'Anonymous9::icon' is never used. [unusedStructMember]
      int icon;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_icons.c:144:7: style: struct member 'IconTexture::num_textures' is never used. [unusedStructMember]
  int num_textures;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_search.c:528:7: style: The scope of the variable 'winx' can be reduced. [variableScope]
  int winx /*, winy */, ofsx, ofsy;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_search.c:528:25: style: The scope of the variable 'ofsx' can be reduced. [variableScope]
  int winx /*, winy */, ofsx, ofsy;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_search.c:528:31: style: The scope of the variable 'ofsy' can be reduced. [variableScope]
  int winx /*, winy */, ofsx, ofsy;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:6773:17: style: Variable 'changed' is assigned a value that is never used. [unreadVariable]
        changed = true;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_handlers.c:6812:21: style: Variable 'changed' is assigned a value that is never used. [unreadVariable]
            changed = true;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:1424:12: style: Condition 'data==NULL' is always true [knownConditionTrueFalse]
  if (data == NULL) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:1422:25: note: Assignment 'data=NULL', assigned value is 0
  uiTooltipData *data = NULL;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:1424:12: note: Condition 'data==NULL' is always true
  if (data == NULL) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:393:8: style: The scope of the variable 'has_valid_context' can be reduced. [variableScope]
  bool has_valid_context = true;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:393:26: style: Variable 'has_valid_context' is assigned a value that is never used. [unreadVariable]
  bool has_valid_context = true;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:394:39: style: Variable 'has_valid_context_error' is assigned a value that is never used. [unreadVariable]
  const char *has_valid_context_error = IFACE_("Unsupported context");
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:398:25: style: Variable 'has_valid_context' is assigned a value that is never used. [unreadVariable]
      has_valid_context = false;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:405:29: style: Variable 'has_valid_context' is assigned a value that is never used. [unreadVariable]
          has_valid_context = false;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:1320:19: style: Variable 'rect.xneg' is assigned a value that is never used. [unreadVariable]
        rect.xneg = r;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:1328:19: style: Variable 'rect.ypos' is assigned a value that is never used. [unreadVariable]
        rect.ypos = r;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:1336:19: style: Variable 'rect.yneg' is assigned a value that is never used. [unreadVariable]
        rect.yneg = r;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_style.c:245:16: style: Variable 'txtrect.xmax' is assigned a value that is never used. [unreadVariable]
  txtrect.xmax = rect->xmin;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_templates.c:734:52: error: syntax error [syntaxError]
                            BLT_I18NCONTEXT_ID_TEXT, );
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_utils.c:463:11: style: The scope of the variable 'ob' can be reduced. [variableScope]
  Object *ob;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:631:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (show_shortcut) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:524:7: note: First condition
  if (show_shortcut) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:631:7: note: Second condition
  if (show_shortcut) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_region_tooltip.c:673:44: error: Uninitialized variable: expr_result_len [uninitvar]
      const char *item_end = expr_result + expr_result_len;
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\view2d_draw.c:384:22: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  const Scene *scene = (const Scene *)user_data;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\view2d.c:549:16: style: Variable 'do_y' is assigned a value that is never used. [unreadVariable]
          do_y = false;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:518:19: style: Variable 'last_data' is reassigned a value before the old one has been used. [redundantAssignment]
        last_data = set_roundbox_vertex(&vflag_step, c2, a2, NO_AA, true, false, INNER);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:517:19: note: last_data is assigned
        last_data = set_roundbox_vertex(&vflag_step, c1, a1, NO_AA, true, false, INNER);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:518:19: note: last_data is overwritten
        last_data = set_roundbox_vertex(&vflag_step, c2, a2, NO_AA, true, false, INNER);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:603:23: style: Variable 'last_data' is reassigned a value before the old one has been used. [redundantAssignment]
            last_data = set_roundbox_vertex(&vflag_step, c2, a2, j, true, false, INNER);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:602:23: note: last_data is assigned
            last_data = set_roundbox_vertex(&vflag_step, c1, a1, j, true, false, INNER);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:603:23: note: last_data is overwritten
            last_data = set_roundbox_vertex(&vflag_step, c2, a2, j, true, false, INNER);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:654:15: style: Variable 'last_data' is reassigned a value before the old one has been used. [redundantAssignment]
    last_data = set_roundbox_vertex(&vflag_step, 0, 0, NO_AA, false, false, INNER);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:653:15: note: last_data is assigned
    last_data = set_roundbox_vertex(&vflag_step, 0, 0, NO_AA, true, false, INNER);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:654:15: note: last_data is overwritten
    last_data = set_roundbox_vertex(&vflag_step, 0, 0, NO_AA, false, false, INNER);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\view2d_ops.c:1566:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (cur) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\view2d_ops.c:1562:7: note: First condition
  if (cur) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\view2d_ops.c:1566:7: note: Second condition
  if (cur) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:584:14: style: The scope of the variable 'last_data' can be reduced. [variableScope]
    uint32_t last_data;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:1530:9: style: The scope of the variable 'xs' can be reduced. [variableScope]
  float xs = 0.0f, ys = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:1530:20: style: The scope of the variable 'ys' can be reduced. [variableScope]
  float xs = 0.0f, ys = 0.0f;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\view2d_ops.c:1524:9: style: The scope of the variable 'tfac' can be reduced. [variableScope]
  float tfac;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:2170:11: style: The scope of the variable 'selsta_draw' can be reduced. [variableScope]
      int selsta_draw, selwidth_draw;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:2170:24: style: The scope of the variable 'selwidth_draw' can be reduced. [variableScope]
      int selsta_draw, selwidth_draw;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:3091:13: style: The scope of the variable 'dy' can be reduced. [variableScope]
  float dx, dy, sx1, sx2, sy;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:3091:17: style: The scope of the variable 'sx1' can be reduced. [variableScope]
  float dx, dy, sx1, sx2, sy;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:3091:22: style: The scope of the variable 'sx2' can be reduced. [variableScope]
  float dx, dy, sx1, sx2, sy;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:3091:27: style: The scope of the variable 'sy' can be reduced. [variableScope]
  float dx, dy, sx1, sx2, sy;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:3567:8: style: The scope of the variable 'outline' can be reduced. [variableScope]
  bool outline = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:5067:9: style: The scope of the variable 's' can be reduced. [variableScope]
  float s, c;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:5067:12: style: The scope of the variable 'c' can be reduced. [variableScope]
  float s, c;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:5068:9: style: The scope of the variable 'y1' can be reduced. [variableScope]
  float y1, y2;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:5068:13: style: The scope of the variable 'y2' can be reduced. [variableScope]
  float y1, y2;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:1530:12: style: Variable 'xs' is assigned a value that is never used. [unreadVariable]
  float xs = 0.0f, ys = 0.0f;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:1530:23: style: Variable 'ys' is assigned a value that is never used. [unreadVariable]
  float xs = 0.0f, ys = 0.0f;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\io\io_collada.c:324:9: style: Variable 'row' is reassigned a value before the old one has been used. [redundantAssignment]
    row = uiLayoutRow(box, false);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\io\io_collada.c:320:9: note: row is assigned
    row = uiLayoutRow(box, false);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\io\io_collada.c:324:9: note: row is overwritten
    row = uiLayoutRow(box, false);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\io\io_collada.c:843:7: style: Variable 'row' is reassigned a value before the old one has been used. [redundantAssignment]
  row = uiLayoutRow(box, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\io\io_collada.c:841:7: note: row is assigned
  row = uiLayoutRow(box, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\io\io_collada.c:843:7: note: row is overwritten
  row = uiLayoutRow(box, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\io\io_collada.c:270:13: style: The scope of the variable 'bbox' can be reduced. [variableScope]
  uiLayout *bbox, *box, *row, *col, *split;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\io\io_collada.c:242:21: style: Variable 'includeFilter' is assigned a value that is never used. [unreadVariable]
  int includeFilter = OB_REL_NONE;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\io\io_collada.c:244:19: style: Variable 'includeFilter' is assigned a value that is never used. [unreadVariable]
    includeFilter |= OB_REL_MOD_ARMATURE;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\io\io_collada.c:247:19: style: Variable 'includeFilter' is assigned a value that is never used. [unreadVariable]
    includeFilter |= OB_REL_CHILDREN_RECURSIVE;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\lattice\editlattice_tools.c:256:9: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
        printf("lattice_flip(): Unknown flipping axis (%u)\n", axis);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\lattice\editlattice_select.c:181:11: style: The scope of the variable 'bp' can be reduced. [variableScope]
  BPoint *bp;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_add.c:314:9: style: The scope of the variable 'tangent_point' can be reduced. [variableScope]
  float tangent_point[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_add.c:315:9: style: The scope of the variable 'tangent_co' can be reduced. [variableScope]
  float tangent_co[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_add.c:268:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = CTX_data_scene(C);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_add.c:305:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_add.c:404:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_ops.c:639:9: style: The scope of the variable 'co' can be reduced. [variableScope]
  float co[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_ops.c:716:15: style: The scope of the variable 'vec' can be reduced. [variableScope]
        float vec[2], no[2], p[2], c[2], w, offco[2];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_ops.c:716:36: style: The scope of the variable 'c' can be reduced. [variableScope]
        float vec[2], no[2], p[2], c[2], w, offco[2];
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_ops.c:716:42: style: The scope of the variable 'w' can be reduced. [variableScope]
        float vec[2], no[2], p[2], c[2], w, offco[2];
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_ops.c:732:17: style: The scope of the variable 'co_pos' can be reduced. [variableScope]
          float co_pos[2];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mask\mask_ops.c:733:17: style: The scope of the variable 'co_neg' can be reduced. [variableScope]
          float co_neg[2];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editface.c:58:10: style: The scope of the variable 'polys' can be reduced. [variableScope]
  MPoly *polys, *mp_orig;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editface.c:60:7: style: The scope of the variable 'totpoly' can be reduced. [variableScope]
  int totpoly;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editface.c:61:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editface.c:473:9: style: The scope of the variable 'orig_index' can be reduced. [variableScope]
    int orig_index;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_bevel.c:489:23: style: The scope of the variable 'value' can be reduced. [variableScope]
  float mlen[2], len, value, sc, st;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_bevel.c:489:30: style: The scope of the variable 'sc' can be reduced. [variableScope]
  float mlen[2], len, value, sc, st;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_bevel.c:489:34: style: The scope of the variable 'st' can be reduced. [variableScope]
  float mlen[2], len, value, sc, st;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_bevel.c:936:16: style: The scope of the variable 'prop' can be reduced. [variableScope]
  PropertyRNA *prop;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_extrude.c:753:13: style: The scope of the variable 'vec' can be reduced. [variableScope]
      float vec[3], ofs[3];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_inset.c:90:8: style: The scope of the variable 'msg' can be reduced. [variableScope]
  char msg[UI_MAX_DRAW_STR];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_loopcut.c:418:29: style: Condition 'is_interactive' is always true [knownConditionTrueFalse]
    loopcut_mouse_move(lcd, is_interactive ? 1 : 0);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_loopcut.c:416:7: note: Assuming that condition 'is_interactive' is not redundant
  if (is_interactive) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_loopcut.c:418:29: note: Condition 'is_interactive' is always true
    loopcut_mouse_move(lcd, is_interactive ? 1 : 0);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_mask_extract.c:106:11: style: The scope of the variable 'ed' can be reduced. [variableScope]
  BMEdge *ed;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1847:7: style: Condition 'results' is always true [knownConditionTrueFalse]
  if (results) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1649:7: note: Assuming that condition '!results' is not redundant
  if (!results) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1847:7: note: Condition 'results' is always true
  if (results) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:441:16: style: The scope of the variable 'cageco' can be reduced. [variableScope]
  const float *cageco;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:591:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:903:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:906:13: style: The scope of the variable 'lst' can be reduced. [variableScope]
  ListBase *lst;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1008:13: style: The scope of the variable 'ray_hit' can be reduced. [variableScope]
      float ray_hit[3];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1263:12: style: The scope of the variable 'tri' can be reduced. [variableScope]
  BMLoop **tri;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1322:11: style: The scope of the variable 'v' can be reduced. [variableScope]
  BMVert *v;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1420:15: style: The scope of the variable 'e2' can be reduced. [variableScope]
  BMEdge *e, *e2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1464:11: style: The scope of the variable 'f_hit' can be reduced. [variableScope]
  BMFace *f_hit;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1577:9: style: The scope of the variable 'd' can be reduced. [variableScope]
  float d, d1, d2, lambda;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1916:27: style: The scope of the variable 'sco' can be reduced. [variableScope]
  float co[3], cageco[3], sco[2];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:1975:27: style: The scope of the variable 'sco' can be reduced. [variableScope]
  float co[3], cageco[3], sco[2];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_knife.c:2109:27: style: The scope of the variable 'sco' can be reduced. [variableScope]
  float co[3], cageco[3], sco[2];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_preselect_elem.c:240:9: style: The scope of the variable 'center' can be reduced. [variableScope]
  float center[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_rip.c:235:7: style: The scope of the variable 'uid_start' can be reduced. [variableScope]
  int uid_start;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_rip.c:236:7: style: The scope of the variable 'uid_end' can be reduced. [variableScope]
  int uid_end;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_rip.c:526:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_rip.c:845:21: style: Variable 'dist_sq' is assigned a value that is never used. [unreadVariable]
            dist_sq = d;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_rip_edge.c:176:19: style: The scope of the variable 'angle_test' can be reduced. [variableScope]
            float angle_test;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_undo.c:185:9: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (create) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_undo.c:164:9: note: First condition
    if (create) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_undo.c:185:9: note: Second condition
    if (create) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_utils.c:612:28: style: The scope of the variable 'lastv' can be reduced. [variableScope]
    UvMapVert *iterv, *v, *lastv, *next;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_utils.c:613:12: style: The scope of the variable 'uv' can be reduced. [variableScope]
    float *uv, *uv2, uvdiff[2];
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_utils.c:780:28: style: The scope of the variable 'lastv' can be reduced. [variableScope]
    UvElement *iterv, *v, *lastv, *next;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_utils.c:781:12: style: The scope of the variable 'uv' can be reduced. [variableScope]
    float *uv, *uv2, uvdiff[2];
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_utils.c:1408:11: style: The scope of the variable 'ele' can be reduced. [variableScope]
  BMElem *ele;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1528:20: style: Variable 'edindex' is reassigned a value before the old one has been used. [redundantAssignment]
      for (edindex = 0; edindex < totedgesel; edindex += 1) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1523:16: note: edindex is assigned
        edindex++;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1528:20: note: edindex is overwritten
      for (edindex = 0; edindex < totedgesel; edindex += 1) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:720:11: style: The scope of the variable 'dist_test' can be reduced. [variableScope]
    float dist_test = 0.0f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1768:24: style: The scope of the variable 'tdist' can be reduced. [variableScope]
          float co[2], tdist;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:2597:11: style: The scope of the variable 'eve' can be reduced. [variableScope]
  BMVert *eve;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:4480:13: style: The scope of the variable 'v' can be reduced. [variableScope]
    BMVert *v;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:4481:13: style: The scope of the variable 'e' can be reduced. [variableScope]
    BMEdge *e;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:4995:11: style: The scope of the variable 'f' can be reduced. [variableScope]
  BMFace *f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_mirror.c:193:7: style: The scope of the variable 'tot_unique' can be reduced. [variableScope]
  int tot_unique = -1, tot_unique_prev = -1;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_mirror.c:194:7: style: The scope of the variable 'tot_unique_edges' can be reduced. [variableScope]
  int tot_unique_edges = 0, tot_unique_edges_prev;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_mirror.c:193:18: style: Variable 'tot_unique' is assigned a value that is never used. [unreadVariable]
  int tot_unique = -1, tot_unique_prev = -1;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_mirror.c:194:24: style: Variable 'tot_unique_edges' is assigned a value that is never used. [unreadVariable]
  int tot_unique_edges = 0, tot_unique_edges_prev;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1098:35: style: Variable 'best.base_index' is assigned a value that is never used. [unreadVariable]
                  best.base_index = base_index;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1099:28: style: Variable 'best.ele' is assigned a value that is never used. [unreadVariable]
                  best.ele = (BMElem *)v;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1127:33: style: Variable 'best.base_index' is assigned a value that is never used. [unreadVariable]
                best.base_index = base_index;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1128:26: style: Variable 'best.ele' is assigned a value that is never used. [unreadVariable]
                best.ele = (BMElem *)e;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1152:31: style: Variable 'best.base_index' is assigned a value that is never used. [unreadVariable]
              best.base_index = base_index;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1153:24: style: Variable 'best.ele' is assigned a value that is never used. [unreadVariable]
              best.ele = (BMElem *)v;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1182:31: style: Variable 'best.base_index' is assigned a value that is never used. [unreadVariable]
              best.base_index = base_index;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1183:24: style: Variable 'best.ele' is assigned a value that is never used. [unreadVariable]
              best.ele = (BMElem *)e;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1211:31: style: Variable 'best.base_index' is assigned a value that is never used. [unreadVariable]
              best.base_index = base_index;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1212:24: style: Variable 'best.ele' is assigned a value that is never used. [unreadVariable]
              best.ele = (BMElem *)f;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_select.c:1776:25: style: Variable 'best_dist' is assigned a value that is never used. [unreadVariable]
              best_dist = tdist;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:258:11: style: Variable 'otmacro' is reassigned a value before the old one has been used. [redundantAssignment]
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:257:11: note: otmacro is assigned
  otmacro = WM_operatortype_macro_define(ot, "MESH_OT_rip");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:258:11: note: otmacro is overwritten
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:276:11: style: Variable 'otmacro' is reassigned a value before the old one has been used. [redundantAssignment]
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:275:11: note: otmacro is assigned
  otmacro = WM_operatortype_macro_define(ot, "MESH_OT_extrude_region");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:276:11: note: otmacro is overwritten
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:285:11: style: Variable 'otmacro' is reassigned a value before the old one has been used. [redundantAssignment]
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:284:11: note: otmacro is assigned
  otmacro = WM_operatortype_macro_define(ot, "MESH_OT_extrude_context");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:285:11: note: otmacro is overwritten
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:294:11: style: Variable 'otmacro' is reassigned a value before the old one has been used. [redundantAssignment]
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_shrink_fatten");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:293:11: note: otmacro is assigned
  otmacro = WM_operatortype_macro_define(ot, "MESH_OT_extrude_region");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:294:11: note: otmacro is overwritten
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_shrink_fatten");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:303:11: style: Variable 'otmacro' is reassigned a value before the old one has been used. [redundantAssignment]
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_shrink_fatten");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:302:11: note: otmacro is assigned
  otmacro = WM_operatortype_macro_define(ot, "MESH_OT_extrude_faces_indiv");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:303:11: note: otmacro is overwritten
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_shrink_fatten");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:312:11: style: Variable 'otmacro' is reassigned a value before the old one has been used. [redundantAssignment]
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:311:11: note: otmacro is assigned
  otmacro = WM_operatortype_macro_define(ot, "MESH_OT_extrude_edges_indiv");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:312:11: note: otmacro is overwritten
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:321:11: style: Variable 'otmacro' is reassigned a value before the old one has been used. [redundantAssignment]
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:320:11: note: otmacro is assigned
  otmacro = WM_operatortype_macro_define(ot, "MESH_OT_extrude_verts_indiv");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:321:11: note: otmacro is overwritten
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:358:11: style: Variable 'otmacro' is reassigned a value before the old one has been used. [redundantAssignment]
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:357:11: note: otmacro is assigned
  otmacro = WM_operatortype_macro_define(ot, "MESH_OT_extrude_edges_indiv");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\mesh_ops.c:358:11: note: otmacro is overwritten
  otmacro = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\meshtools.c:108:10: style: The scope of the variable 'b' can be reduced. [variableScope]
  int a, b;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\meshtools.c:111:16: style: Variable 'mvert' is assigned a value that is never used. [unreadVariable]
  MVert *mvert = *mvert_pp;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:6761:19: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (use_merge == false) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:6755:19: note: First condition
    if (use_merge == false) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:6761:19: note: Second condition
    if (use_merge == false) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:4066:8: warning: Either the condition 'totcolp' is redundant or there is possible null pointer dereference: totcolp. [nullPointerRedundantCheck]
  if (*totcolp) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:4061:8: note: Assuming that condition 'totcolp' is not redundant
  if ((totcolp && matarar) == 0) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:4066:8: note: Null pointer dereference
  if (*totcolp) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:942:64: style: Same expression on both sides of '&&'. [duplicateExpression]
    if ((em->bm->totvertsel == 0) && (em->bm->totedgesel == 0) && (em->bm->totvertsel == 0)) {
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:427:22: style: The scope of the variable 'co_proj' can be reduced. [variableScope]
      float mval[2], co_proj[3];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:2913:11: style: The scope of the variable 'v' can be reduced. [variableScope]
  BMVert *v;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_bake.c:132:11: style: The scope of the variable 'ob' can be reduced. [variableScope]
  Object *ob;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:2914:16: style: The scope of the variable 'cent' can be reduced. [variableScope]
  float co[3], cent[3] = {0.0f, 0.0f, 0.0f};
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:8972:13: style: The scope of the variable 'l' can be reduced. [variableScope]
    BMLoop *l;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:2487:9: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (is_tool) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:2478:9: note: First condition
    if (is_tool) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:2487:9: note: Second condition
    if (is_tool) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_bake_api.c:1167:19: style: Local variable 'bake' shadows outer function [shadowFunction]
        BakeData *bake = &scene->r.bake;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_bake_api.c:722:12: note: Shadowed declaration
static int bake(Render *re,
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_bake_api.c:1167:19: note: Shadow variable
        BakeData *bake = &scene->r.bake;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_bake_api.c:1561:13: style: Local variable 'bake' shadows outer function [shadowFunction]
  BakeData *bake = &scene->r.bake;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_bake_api.c:722:12: note: Shadowed declaration
static int bake(Render *re,
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_bake_api.c:1561:13: note: Shadow variable
  BakeData *bake = &scene->r.bake;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_bake_api.c:1119:24: error: Uninitialized variable: mode [uninitvar]
            md->mode = mode;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:6225:13: style: Variable 'tb' is assigned a value that is never used. [unreadVariable]
          tb++;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:6240:13: style: Variable 'tb' is assigned a value that is never used. [unreadVariable]
          tb++;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\mesh\editmesh_tools.c:6255:13: style: Variable 'tb' is assigned a value that is never used. [unreadVariable]
          tb++;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_data_transfer.c:114:16: style: Local variable 'prop' shadows outer argument [shadowArgument]
  PropertyRNA *prop = RNA_struct_find_property(ptr, "use_reverse_transfer");
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_data_transfer.c:103:79: note: Shadowed declaration
                                                          PropertyRNA *UNUSED(prop),
                                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_data_transfer.c:114:16: note: Shadow variable
  PropertyRNA *prop = RNA_struct_find_property(ptr, "use_reverse_transfer");
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_data_transfer.c:224:16: style: Local variable 'prop' shadows outer argument [shadowArgument]
  PropertyRNA *prop = RNA_struct_find_property(ptr, "use_reverse_transfer");
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_data_transfer.c:214:79: note: Shadowed declaration
                                                          PropertyRNA *UNUSED(prop),
                                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_data_transfer.c:224:16: note: Shadow variable
  PropertyRNA *prop = RNA_struct_find_property(ptr, "use_reverse_transfer");
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_add.c:377:8: warning: Either the condition 'enter_editmode' is redundant or there is possible null pointer dereference: enter_editmode. [nullPointerRedundantCheck]
      *enter_editmode = (U.flag & USER_ADD_EDITMODE) != 0;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_add.c:373:47: note: Assuming that condition 'enter_editmode' is not redundant
    if (RNA_property_is_set(op->ptr, prop) && enter_editmode) {
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_add.c:377:8: note: Null pointer dereference
      *enter_editmode = (U.flag & USER_ADD_EDITMODE) != 0;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_add.c:378:48: warning: Either the condition 'enter_editmode' is redundant or there is possible null pointer dereference: enter_editmode. [nullPointerRedundantCheck]
      RNA_property_boolean_set(op->ptr, prop, *enter_editmode);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_add.c:373:47: note: Assuming that condition 'enter_editmode' is not redundant
    if (RNA_property_is_set(op->ptr, prop) && enter_editmode) {
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_add.c:378:48: note: Null pointer dereference
      RNA_property_boolean_set(op->ptr, prop, *enter_editmode);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_add.c:661:9: style: The scope of the variable 'mat' can be reduced. [variableScope]
  float mat[4][4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_constraint.c:255:7: style: The scope of the variable 'num_targets' can be reduced. [variableScope]
  int num_targets, i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_constraint.c:255:20: style: The scope of the variable 'i' can be reduced. [variableScope]
  int num_targets, i;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_constraint.c:712:16: style: The scope of the variable 'con' can be reduced. [variableScope]
  bConstraint *con;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_constraint.c:713:13: style: The scope of the variable 'list' can be reduced. [variableScope]
  ListBase *list;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_edit.c:715:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (!is_mode_set) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_edit.c:709:7: note: First condition
  if (!is_mode_set) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_edit.c:715:7: note: Second condition
  if (!is_mode_set) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_gpencil_modifier.c:433:24: style: The scope of the variable 'md' can be reduced. [variableScope]
  GpencilModifierData *md;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_facemap_ops.c:114:14: style: The scope of the variable 'map' can be reduced. [variableScope]
        int *map;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_facemap_ops.c:142:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_facemap_ops.c:255:10: style: The scope of the variable 'map' can be reduced. [variableScope]
    int *map;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_facemap_ops.c:304:10: style: The scope of the variable 'map' can be reduced. [variableScope]
    int *map;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_facemap_ops.c:350:8: style: The scope of the variable 'map' can be reduced. [variableScope]
  int *map;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_edit.c:1574:11: style: Redundant initialization for 'objects'. The initialized value is overwritten before it is read. [redundantInitialization]
  objects = selected_objects_get(C);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_edit.c:1560:20: note: objects is initialized
  ListBase objects = {NULL};
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_edit.c:1574:11: note: objects is overwritten
  objects = selected_objects_get(C);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_edit.c:1253:7: style: The scope of the variable 'data' can be reduced. [variableScope]
  ID *data;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_hook.c:118:18: style: The scope of the variable 'dvert' can be reduced. [variableScope]
    MDeformVert *dvert;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_constraint.c:165:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_ops.c:314:10: style: Variable 'keymap' is reassigned a value before the old one has been used. [redundantAssignment]
  keymap = WM_keymap_ensure(keyconf, "Object Mode", 0, 0);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_ops.c:310:10: note: keymap is assigned
  keymap = WM_keymap_ensure(keyconf, "Object Non-modal", 0, 0);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_ops.c:314:10: note: keymap is overwritten
  keymap = WM_keymap_ensure(keyconf, "Object Mode", 0, 0);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_remesh.c:724:8: style: Variable 'prop' is reassigned a value before the old one has been used. [redundantAssignment]
  prop = RNA_def_float(ot->srna,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_remesh.c:714:8: note: prop is assigned
  prop = RNA_def_float(ot->srna,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_remesh.c:724:8: note: prop is overwritten
  prop = RNA_def_float(ot->srna,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_remesh.c:734:8: style: Variable 'prop' is reassigned a value before the old one has been used. [redundantAssignment]
  prop = RNA_def_int(ot->srna,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_remesh.c:724:8: note: prop is assigned
  prop = RNA_def_float(ot->srna,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_remesh.c:734:8: note: prop is overwritten
  prop = RNA_def_int(ot->srna,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_remesh.c:744:8: style: Variable 'prop' is reassigned a value before the old one has been used. [redundantAssignment]
  prop = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_remesh.c:734:8: note: prop is assigned
  prop = RNA_def_int(ot->srna,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_remesh.c:744:8: note: prop is overwritten
  prop = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_remesh.c:614:16: style: Variable 'area' is assigned a value that is never used. [unreadVariable]
          area += 0.2f;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_modifier.c:689:11: style: The scope of the variable 'mesh_applied' can be reduced. [variableScope]
    Mesh *mesh_applied;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_modifier.c:998:17: style: The scope of the variable 'md' can be reduced. [variableScope]
  ModifierData *md;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_modifier.c:2057:17: style: The scope of the variable 'skin_md' can be reduced. [variableScope]
  ModifierData *skin_md;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_shader_fx.c:336:17: style: The scope of the variable 'fx' can be reduced. [variableScope]
  ShaderFxData *fx;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_select.c:522:17: style: The scope of the variable 'mat1' can be reduced. [variableScope]
      Material *mat1;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_relations.c:736:19: style: The if condition is the same as the previous if condition [duplicateCondition]
      if (partype == PAR_FOLLOW) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_relations.c:724:19: note: First condition
      if (partype == PAR_FOLLOW) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_relations.c:736:19: note: Second condition
      if (partype == PAR_FOLLOW) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_shapekey.c:125:15: style: The scope of the variable 'i2' can be reduced. [variableScope]
      int i1, i2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_shapekey.c:179:19: style: The scope of the variable 'tvec' can be reduced. [variableScope]
            float tvec[3];
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_relations.c:135:11: style: The scope of the variable 'eve' can be reduced. [variableScope]
  BMVert *eve;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_relations.c:1855:7: style: The scope of the variable 'id' can be reduced. [variableScope]
  ID *id;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_relations.c:2269:13: style: The scope of the variable 'ma' can be reduced. [variableScope]
  Material *ma, ***matarar;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_relations.c:2269:20: style: The scope of the variable 'matarar' can be reduced. [variableScope]
  Material *ma, ***matarar;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_relations.c:2271:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_volume.c:63:5: portability: Returning an integer in a function with pointer return type is not portable. [CastIntegerToAddressAtReturn]
    return false;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_warp.c:304:8: style: Variable 'prop' is reassigned a value before the old one has been used. [redundantAssignment]
  prop = RNA_def_float(ot->srna, "max", 1.0f, -FLT_MAX, FLT_MAX, "Max", "", -100.0, 100.0);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_warp.c:303:8: note: prop is assigned
  prop = RNA_def_float(ot->srna, "min", -1.0f, -FLT_MAX, FLT_MAX, "Min", "", -100.0, 100.0);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_warp.c:304:8: note: prop is overwritten
  prop = RNA_def_float(ot->srna, "max", 1.0f, -FLT_MAX, FLT_MAX, "Max", "", -100.0, 100.0);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_warp.c:307:8: style: Variable 'prop' is reassigned a value before the old one has been used. [redundantAssignment]
  prop = RNA_def_float_matrix(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_warp.c:304:8: note: prop is assigned
  prop = RNA_def_float(ot->srna, "max", 1.0f, -FLT_MAX, FLT_MAX, "Max", "", -100.0, 100.0);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_warp.c:307:8: note: prop is overwritten
  prop = RNA_def_float_matrix(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_transform.c:1370:15: style: The scope of the variable 'gpcenter' can be reduced. [variableScope]
        float gpcenter[3];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_transform.c:1866:13: style: The scope of the variable 'location_world' can be reduced. [variableScope]
      float location_world[3];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:2047:7: style: The scope of the variable 'ofs_x' can be reduced. [variableScope]
  int ofs_x, width;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:2047:14: style: The scope of the variable 'width' can be reduced. [variableScope]
  int ofs_x, width;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\interface\interface_widgets.c:2050:9: style: The scope of the variable 'fcol' can be reduced. [variableScope]
  float fcol[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\physics_fluid.c:254:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = job->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\physics_fluid.c:500:17: style: Variable 'cache_map' is assigned a value that is never used. [unreadVariable]
  int cache_map = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\physics_fluid.c:503:15: style: Variable 'cache_map' is assigned a value that is never used. [unreadVariable]
    cache_map |= (FLUID_DOMAIN_OUTDATED_DATA | FLUID_DOMAIN_OUTDATED_NOISE |
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\physics_fluid.c:507:15: style: Variable 'cache_map' is assigned a value that is never used. [unreadVariable]
    cache_map |= FLUID_DOMAIN_OUTDATED_NOISE;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\physics_fluid.c:510:15: style: Variable 'cache_map' is assigned a value that is never used. [unreadVariable]
    cache_map |= FLUID_DOMAIN_OUTDATED_MESH;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\physics_fluid.c:513:15: style: Variable 'cache_map' is assigned a value that is never used. [unreadVariable]
    cache_map |= FLUID_DOMAIN_OUTDATED_PARTICLES;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\physics_fluid.c:516:15: style: Variable 'cache_map' is assigned a value that is never used. [unreadVariable]
    cache_map |= (FLUID_DOMAIN_OUTDATED_DATA | FLUID_DOMAIN_OUTDATED_NOISE |
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_object.c:843:13: style: The scope of the variable 'hairmat' can be reduced. [variableScope]
      float hairmat[4][4], imat[4][4];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_object.c:1085:17: style: The scope of the variable 'md' can be reduced. [variableScope]
  ModifierData *md;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1916:53: warning: Possible null pointer dereference: me [nullPointer]
    BKE_mesh_vert_edge_map_create(&emap, &emap_mem, me->medge, me->totvert, me->totedge);
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1890:17: note: Assignment 'me=em?NULL:ob->data', assigned value is 0
  Mesh *me = em ? NULL : ob->data;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1916:53: note: Null pointer dereference
    BKE_mesh_vert_edge_map_create(&emap, &emap_mem, me->medge, me->totvert, me->totedge);
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:213:13: style: The scope of the variable 'i' can be reduced. [variableScope]
        int i = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:373:44: style: The scope of the variable 'dvf' can be reduced. [variableScope]
  MDeformVert **dvert_array_from = NULL, **dvf;
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:374:39: style: The scope of the variable 'dv' can be reduced. [variableScope]
  MDeformVert **dvert_array = NULL, **dv;
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:380:8: style: The scope of the variable 'new_vgroup' can be reduced. [variableScope]
  bool new_vgroup = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:566:16: style: The scope of the variable 'dvert_act' can be reduced. [variableScope]
  MDeformVert *dvert_act;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:648:13: style: The scope of the variable 'eve' can be reduced. [variableScope]
    BMVert *eve, *eve_act;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:665:18: style: The scope of the variable 'dv' can be reduced. [variableScope]
    MDeformVert *dv;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1077:27: style: The scope of the variable 'dw_cpy' can be reduced. [variableScope]
  MDeformWeight *dw_org, *dw_cpy;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1079:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, idg, icdg, dvert_tot = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1124:18: style: The scope of the variable 'dw' can be reduced. [variableScope]
  MDeformWeight *dw;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1125:16: style: The scope of the variable 'dv' can be reduced. [variableScope]
  MDeformVert *dv, **dvert_array = NULL;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1126:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, dvert_tot = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1418:13: style: The scope of the variable 'tf' can be reduced. [variableScope]
      float tf;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1419:11: style: The scope of the variable 'ti' can be reduced. [variableScope]
      int ti;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1531:17: style: The scope of the variable 'd' can be reduced. [variableScope]
          float d /*, dist */ /* UNUSED */, mag;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1560:18: style: The scope of the variable 'dw' can be reduced. [variableScope]
  MDeformWeight *dw;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1561:16: style: The scope of the variable 'dv' can be reduced. [variableScope]
  MDeformVert *dv, **dvert_array = NULL;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1562:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, dvert_tot = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1814:18: style: The scope of the variable 'dw' can be reduced. [variableScope]
  MDeformWeight *dw;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1815:16: style: The scope of the variable 'dv' can be reduced. [variableScope]
  MDeformVert *dv, **dvert_array = NULL;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:1816:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, dvert_tot = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:2121:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, dvert_tot = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:2133:11: style: The scope of the variable 'bone_count' can be reduced. [variableScope]
      int bone_count = 0, non_bone_count = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:2133:27: style: The scope of the variable 'non_bone_count' can be reduced. [variableScope]
      int bone_count = 0, non_bone_count = 0;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:2134:11: style: The scope of the variable 'j' can be reduced. [variableScope]
      int j;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:2102:17: error: Comparing pointers that point to different objects [comparePointers]
  else if (&dw1 < &dw2) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:2094:31: note: Variable declared here.
  const struct MDeformWeight *dw1 = a1, *dw2 = a2;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:2102:12: note: Address of variable taken here.
  else if (&dw1 < &dw2) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:2094:42: note: Variable declared here.
  const struct MDeformWeight *dw1 = a1, *dw2 = a2;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:2102:19: note: Address of variable taken here.
  else if (&dw1 < &dw2) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:2102:17: note: Comparing pointers that point to different objects
  else if (&dw1 < &dw2) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:177:16: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
              i++;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:183:16: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
              i++;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\object\object_vgroup.c:213:15: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
        int i = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\render\render_opengl.c:183:11: style: The scope of the variable 'camera' can be reduced. [variableScope]
  Object *camera;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\render\render_opengl.c:891:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\render\render_shading.c:255:15: style: The scope of the variable 'efa' can be reduced. [variableScope]
      BMFace *efa;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\render\render_shading.c:282:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i, selstart, selend;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\render\render_shading.c:365:15: style: The scope of the variable 'bp' can be reduced. [variableScope]
      BPoint *bp;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\render\render_shading.c:366:18: style: The scope of the variable 'bezt' can be reduced. [variableScope]
      BezTriple *bezt;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\render\render_shading.c:367:11: style: The scope of the variable 'a' can be reduced. [variableScope]
      int a;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\render\render_preview.c:108:8: style: The scope of the variable 'path' can be reduced. [variableScope]
  char path[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\render\render_preview.c:109:15: style: The scope of the variable 'folder' can be reduced. [variableScope]
  const char *folder;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1009:9: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (!edit->mirror_cache) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1005:9: note: First condition
    if (!edit->mirror_cache) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1009:9: note: Second condition
    if (!edit->mirror_cache) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1100:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (!edit->mirror_cache) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1096:7: note: First condition
  if (!edit->mirror_cache) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1100:7: note: Second condition
  if (!edit->mirror_cache) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5285:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (!is_mode_set) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5279:7: note: First condition
  if (!is_mode_set) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5285:7: note: Second condition
  if (!is_mode_set) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5143:32: warning: Either the condition '!cache' is redundant or there is possible null pointer dereference: cache. [nullPointerRedundantCheck]
  edit = (psys) ? psys->edit : cache->edit;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5158:17: note: Assuming that condition '!cache' is not redundant
    if (psys && !cache) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5143:32: note: Null pointer dereference
  edit = (psys) ? psys->edit : cache->edit;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5152:59: warning: Either the condition '!cache' is redundant or there is possible null pointer dereference: cache. [nullPointerRedundantCheck]
    totpoint = psys ? psys->totpart : (int)((PTCacheMem *)cache->mem_cache.first)->totpoint;
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5158:17: note: Assuming that condition '!cache' is not redundant
    if (psys && !cache) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5152:59: note: Null pointer dereference
    totpoint = psys ? psys->totpart : (int)((PTCacheMem *)cache->mem_cache.first)->totpoint;
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:147:3: style: The scope of the variable 'point' can be reduced. [variableScope]
  POINT_P;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:147:3: style: The scope of the variable 'p' can be reduced. [variableScope]
  POINT_P;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1444:12: style: The scope of the variable 'hkey' can be reduced. [variableScope]
  HairKey *hkey;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1446:3: style: The scope of the variable 'k' can be reduced. [variableScope]
  KEY_K;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1814:3: style: The scope of the variable 'p' can be reduced. [variableScope]
  POINT_P;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1815:3: style: The scope of the variable 'key' can be reduced. [variableScope]
  KEY_K;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1815:3: style: The scope of the variable 'k' can be reduced. [variableScope]
  KEY_K;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:2739:17: style: The scope of the variable 'pa' can be reduced. [variableScope]
  ParticleData *pa, *npa = 0, *new_pars = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:2739:22: style: The scope of the variable 'npa' can be reduced. [variableScope]
  ParticleData *pa, *npa = 0, *new_pars = 0;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:2741:21: style: The scope of the variable 'npoint' can be reduced. [variableScope]
  PTCacheEditPoint *npoint = 0, *new_points = 0;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:2742:31: style: The scope of the variable 'psmd_eval' can be reduced. [variableScope]
  ParticleSystemModifierData *psmd_eval;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:2743:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, new_totpart = psys->totpart, removed = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3050:14: style: The scope of the variable 'tree' can be reduced. [variableScope]
  KDTree_3d *tree;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3336:3: style: The scope of the variable 'key' can be reduced. [variableScope]
  KEY_K;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3336:3: style: The scope of the variable 'k' can be reduced. [variableScope]
  KEY_K;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3339:7: style: The scope of the variable 'rotation' can be reduced. [variableScope]
  int rotation, totpart, newtotpart;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3559:17: style: The scope of the variable 'v0' can be reduced. [variableScope]
  float x0, x1, v0, v1, o0, o1, xo0, xo1, d, dv;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3559:21: style: The scope of the variable 'v1' can be reduced. [variableScope]
  float x0, x1, v0, v1, o0, o1, xo0, xo1, d, dv;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3559:43: style: The scope of the variable 'd' can be reduced. [variableScope]
  float x0, x1, v0, v1, o0, o1, xo0, xo1, d, dv;
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3559:46: style: The scope of the variable 'dv' can be reduced. [variableScope]
  float x0, x1, v0, v1, o0, o1, xo0, xo1, d, dv;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3560:7: style: The scope of the variable 'k' can be reduced. [variableScope]
  int k, cut, keys = (int)pow(2.0, (double)pset->draw_step);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3892:9: style: The scope of the variable 'vec' can be reduced. [variableScope]
  float vec[3], dvec[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:3892:17: style: The scope of the variable 'dvec' can be reduced. [variableScope]
  float vec[3], dvec[3];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4202:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, k, n = 0, totpart = psys->totpart;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4202:10: style: The scope of the variable 'k' can be reduced. [variableScope]
  int i, k, n = 0, totpart = psys->totpart;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4203:9: style: The scope of the variable 'co1' can be reduced. [variableScope]
  float co1[3], imat[4][4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4204:9: style: The scope of the variable 'framestep' can be reduced. [variableScope]
  float framestep, timestep;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4280:26: style: The scope of the variable 'cur_co' can be reduced. [variableScope]
    float hairmat[4][4], cur_co[3];
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4286:21: style: The scope of the variable 'key' can be reduced. [variableScope]
    PTCacheEditKey *key;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4534:23: style: The scope of the variable 'removed' can be reduced. [variableScope]
  int flip, mouse[2], removed = 0, added = 0, selected = 0, tot_steps = 1, step = 1;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4534:36: style: The scope of the variable 'added' can be reduced. [variableScope]
  int flip, mouse[2], removed = 0, added = 0, selected = 0, tot_steps = 1, step = 1;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4534:47: style: The scope of the variable 'selected' can be reduced. [variableScope]
  int flip, mouse[2], removed = 0, added = 0, selected = 0, tot_steps = 1, step = 1;
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4534:61: style: The scope of the variable 'tot_steps' can be reduced. [variableScope]
  int flip, mouse[2], removed = 0, added = 0, selected = 0, tot_steps = 1, step = 1;
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4534:76: style: The scope of the variable 'step' can be reduced. [variableScope]
  int flip, mouse[2], removed = 0, added = 0, selected = 0, tot_steps = 1, step = 1;
                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4535:17: style: The scope of the variable 'dmax' can be reduced. [variableScope]
  float dx, dy, dmax;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4921:7: style: The scope of the variable 'k' can be reduced. [variableScope]
  int k, totkeys = 1 << pset->draw_step;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5120:3: style: The scope of the variable 'p' can be reduced. [variableScope]
  POINT_P;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5121:3: style: The scope of the variable 'k' can be reduced. [variableScope]
  KEY_K;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:5124:7: style: The scope of the variable 'totpoint' can be reduced. [variableScope]
  int totpoint;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:1515:50: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  frs_sec = edit->pid.flag & PTCACHE_VEL_PER_SEC ? 25.0f : 1.0f;
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\glutil.c:142:9: style: The scope of the variable 'white' can be reduced. [variableScope]
  float white[4] = {1.0f, 1.0f, 1.0f, 1.0f};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\screen_draw.c:451:7: style: The scope of the variable 'dira' can be reduced. [variableScope]
  int dira = -1;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:2827:37: style: Variable 'new_hkeys' is assigned a value that is never used. [unreadVariable]
  HairKey *hkey, *nhkey, *new_hkeys = 0;
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4534:56: style: Variable 'selected' is assigned a value that is never used. [unreadVariable]
  int flip, mouse[2], removed = 0, added = 0, selected = 0, tot_steps = 1, step = 1;
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4534:71: style: Variable 'tot_steps' is assigned a value that is never used. [unreadVariable]
  int flip, mouse[2], removed = 0, added = 0, selected = 0, tot_steps = 1, step = 1;
                                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\physics\particle_edit.c:4534:81: style: Variable 'step' is assigned a value that is never used. [unreadVariable]
  int flip, mouse[2], removed = 0, added = 0, selected = 0, tot_steps = 1, step = 1;
                                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\screen_geometry.c:292:9: style: The scope of the variable 'x' can be reduced. [variableScope]
  short x, y;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\screen_geometry.c:292:12: style: The scope of the variable 'y' can be reduced. [variableScope]
  short x, y;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\area.c:353:39: warning: Either the condition 'sa' is redundant or there is possible null pointer dereference: sa. [nullPointerRedundantCheck]
  bool overlap = ED_region_is_overlap(sa->spacetype, region->regiontype);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\area.c:524:7: note: Assuming that condition 'sa' is not redundant
  if (sa && area_is_pseudo_minimized(sa)) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\area.c:531:29: note: Calling function 'region_draw_status_text', 1st argument 'sa' value is 0
    region_draw_status_text(sa, region);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\area.c:353:39: note: Null pointer dereference
  bool overlap = ED_region_is_overlap(sa->spacetype, region->regiontype);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\area.c:3102:7: style: The scope of the variable 'line_width' can be reduced. [variableScope]
  int line_width;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\area.c:3357:9: style: The scope of the variable 'fac' can be reduced. [variableScope]
  float fac, blendfac;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_curve.c:266:7: style: The scope of the variable 'loc' can be reduced. [variableScope]
  int loc[2];
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_curve.c:501:7: style: The scope of the variable 'loc' can be reduced. [variableScope]
  int loc[2];
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_cursor.c:1061:9: style: The scope of the variable 'unprojected_radius' can be reduced. [variableScope]
  float unprojected_radius, projected_radius;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_cursor.c:1061:29: style: The scope of the variable 'projected_radius' can be reduced. [variableScope]
  float unprojected_radius, projected_radius;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_cursor.c:1373:11: style: The scope of the variable 'mouse' can be reduced. [variableScope]
    float mouse[2] = {x - region->winrct.xmin, y - region->winrct.ymin};
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_cursor.c:1392:14: style: The scope of the variable 'update_previews' can be reduced. [variableScope]
        bool update_previews = false;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image.c:193:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image.c:951:8: style: The scope of the variable 'msg' can be reduced. [variableScope]
  char msg[UI_MAX_DRAW_STR];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\screen_ops.c:1837:7: style: The scope of the variable 'delta' can be reduced. [variableScope]
  int delta, x, y;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\screen_ops.c:1837:14: style: The scope of the variable 'x' can be reduced. [variableScope]
  int delta, x, y;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\screen_ops.c:1837:17: style: The scope of the variable 'y' can be reduced. [variableScope]
  int delta, x, y;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\screen_ops.c:2658:7: style: The scope of the variable 'delta' can be reduced. [variableScope]
  int delta;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\screen_ops.c:3895:14: style: The scope of the variable 'newar' can be reduced. [variableScope]
    ARegion *newar;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:2216:36: error: The address of local variable 'color_b' is accessed at non-zero index. [objectIndex]
        ((unsigned char *)&color_b)[3] *= brush_alpha;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:2216:27: note: Address of variable taken here.
        ((unsigned char *)&color_b)[3] *= brush_alpha;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:2216:36: note: The address of local variable 'color_b' is accessed at non-zero index.
        ((unsigned char *)&color_b)[3] *= brush_alpha;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:614:30: warning: Possible null pointer dereference: oldtexibuf [nullPointer]
          const float *otf = oldtexibuf->rect_float +
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:716:47: note: Calling function 'brush_painter_imbuf_update', 3rd argument 'NULL' value is 0
    brush_painter_imbuf_update(painter, tile, NULL, 0, 0, x1, ibuf->y, 0, 0);
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:614:30: note: Null pointer dereference
          const float *otf = oldtexibuf->rect_float +
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:615:50: warning: Possible null pointer dereference: oldtexibuf [nullPointer]
                             ((y - origy + yt) * oldtexibuf->x + (x - origx + xt)) * 4;
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:716:47: note: Calling function 'brush_painter_imbuf_update', 3rd argument 'NULL' value is 0
    brush_painter_imbuf_update(painter, tile, NULL, 0, 0, x1, ibuf->y, 0, 0);
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:615:50: note: Null pointer dereference
                             ((y - origy + yt) * oldtexibuf->x + (x - origx + xt)) * 4;
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:1900:45: warning: Either the condition 's?s->v2d:&CTX_wm_region(C)->v2d' is redundant or there is possible null pointer dereference: s. [nullPointerRedundantCheck]
  float strength = br ? BKE_brush_alpha_get(s->scene, br) : 1.0f;
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:1908:19: note: Assuming that condition 's?s->v2d:&CTX_wm_region(C)->v2d' is not redundant
  View2D *v2d = s ? s->v2d : &CTX_wm_region(C)->v2d;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:1900:45: note: Null pointer dereference
  float strength = br ? BKE_brush_alpha_get(s->scene, br) : 1.0f;
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:301:30: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
        res = *(tex_mask_old + ((y - origy + yt) * cache->tex_mask_old_w + (x - origx + xt)));
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:377:52: note: Calling function 'brush_painter_mask_imbuf_update', 3rd argument 'NULL' value is 0
    brush_painter_mask_imbuf_update(painter, tile, NULL, 0, 0, x1, diameter, 0, 0, diameter);
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:301:30: note: Null pointer addition
        res = *(tex_mask_old + ((y - origy + yt) * cache->tex_mask_old_w + (x - origx + xt)));
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:448:24: style: The expression 'hardness < 1.0f' is always false. [knownConditionTrueFalse]
          if (hardness < 1.0f) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:419:27: note: 'hardness' is assigned value '1.0f' here.
  const float hardness = 1.0f;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:448:24: note: The expression 'hardness < 1.0f' is always false.
          if (hardness < 1.0f) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:1975:9: style: Same expression used in consecutive assignments of 'width' and 'minx'. [duplicateAssignExpression]
    int width = ibuf->x;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:1976:9: note: Same expression used in consecutive assignments of 'width' and 'minx'.
    int minx = ibuf->x, miny = ibuf->y, maxx = 0, maxy = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:1975:9: note: Same expression used in consecutive assignments of 'width' and 'minx'.
    int width = ibuf->x;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:287:13: style: The scope of the variable 'texco' can be reduced. [variableScope]
      float texco[3];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:507:13: style: The scope of the variable 'texco' can be reduced. [variableScope]
      float texco[3], rgba[4];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_2d.c:589:13: style: The scope of the variable 'texco' can be reduced. [variableScope]
      float texco[3], rgba[4];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_utils.c:304:10: style: The scope of the variable 'findex' can be reduced. [variableScope]
  int i, findex;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_stroke.c:568:11: style: The scope of the variable 'delta' can be reduced. [variableScope]
    float delta[2];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_stroke.c:840:11: style: The scope of the variable 'mouse' can be reduced. [variableScope]
    float mouse[3];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_stroke.c:1537:11: style: The scope of the variable 'mouse' can be reduced. [variableScope]
    float mouse[2];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_vertex_color_ops.c:429:8: style: Variable 'prop' is reassigned a value before the old one has been used. [redundantAssignment]
  prop = RNA_def_float(ot->srna, "contrast", 0.0f, min, max, "Contrast", "", min, max);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_vertex_color_ops.c:428:8: note: prop is assigned
  prop = RNA_def_float(ot->srna, "brightness", 0.0f, min, max, "Brightness", "", min, max);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_vertex_color_ops.c:429:8: note: prop is overwritten
  prop = RNA_def_float(ot->srna, "contrast", 0.0f, min, max, "Contrast", "", min, max);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_vertex_color_utils.c:455:13: style: The scope of the variable 'temp' can be reduced. [variableScope]
  int mfac, temp;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_vertex_weight_utils.c:93:16: style: Variable 'dg' is assigned a value that is never used. [unreadVariable]
            dg = BKE_object_defgroup_add_name(ob, pchan->name); /* sets actdef */
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_cloth.c:213:10: style: The scope of the variable 'imat' can be reduced. [variableScope]
  float(*imat)[4] = data->mat;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_cloth.c:250:11: style: The scope of the variable 'force' can be reduced. [variableScope]
    float force[3];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3421:28: style: Condition 'has_x_isect' is always false [knownConditionTrueFalse]
                  else if (has_x_isect) {
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3334:31: note: Assignment 'has_x_isect=0', assigned value is 0
                has_x_isect = 0;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3421:28: note: Condition 'has_x_isect' is always false
                  else if (has_x_isect) {
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\screen_ops.c:4372:14: style: The scope of the variable 'old_frame' can be reduced. [variableScope]
  static int old_frame = 0;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\screen\screen_ops.c:4373:7: style: The scope of the variable 'newfra_int' can be reduced. [variableScope]
  int newfra_int;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3007:33: warning: Possible null pointer dereference: ibuf [nullPointer]
      ED_IMAGE_UNDO_TILE_NUMBER(ibuf->x),
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3549:16: note: Assignment 'ibuf=NULL', assigned value is 0
        ibuf = NULL;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3568:31: note: Calling function 'project_paint_face_init', 8th argument 'ibuf' value is 0
                              ibuf,
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3007:33: note: Null pointer dereference
      ED_IMAGE_UNDO_TILE_NUMBER(ibuf->x),
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:4372:49: warning: Either the condition 'mloopuv_base!=NULL' is redundant or there is possible null pointer dereference: mloopuv_base. [nullPointerRedundantCheck]
    tile = project_paint_face_paint_tile(tpage, mloopuv_base[lt->tri[0]].uv);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:4383:29: note: Assuming that condition 'mloopuv_base!=NULL' is not redundant
    BLI_assert(mloopuv_base != NULL);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:4372:49: note: Null pointer dereference
    tile = project_paint_face_paint_tile(tpage, mloopuv_base[lt->tri[0]].uv);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_vertex.c:964:46: style: The scope of the variable 'curw_mirr' can be reduced. [variableScope]
  float curw, curw_real, oldw, neww, change, curw_mirr, change_mirr;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_pose.c:811:9: style: The scope of the variable 'ik_target' can be reduced. [variableScope]
  float ik_target[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:623:9: style: The scope of the variable 'wtot_inv' can be reduced. [variableScope]
  float wtot_inv, wtot;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:732:7: style: The scope of the variable 'xi' can be reduced. [variableScope]
  int xi, yi;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:732:11: style: The scope of the variable 'yi' can be reduced. [variableScope]
  int xi, yi;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:1565:9: style: The scope of the variable 'wtot_inv' can be reduced. [variableScope]
  float wtot_inv, wtot;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3048:9: style: The scope of the variable 'uv_clip' can be reduced. [variableScope]
  float uv_clip[8][2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3245:18: style: The scope of the variable 'fidx2' can be reduced. [variableScope]
      int fidx1, fidx2;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3336:25: style: The scope of the variable 'puv' can be reduced. [variableScope]
                  float puv[2] = {(float)x, (float)y};
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3511:7: style: The scope of the variable 'tri_index' can be reduced. [variableScope]
  int tri_index, image_index = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3511:18: style: The scope of the variable 'image_index' can be reduced. [variableScope]
  int tri_index, image_index = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3515:7: style: The scope of the variable 'tile_last' can be reduced. [variableScope]
  int tile_last = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3596:16: style: The scope of the variable 'v' can be reduced. [variableScope]
  const float *v, *v1, *v2, *v3;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3645:26: style: The scope of the variable 'vCoSS' can be reduced. [variableScope]
  float min[2], max[2], *vCoSS;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3650:7: style: The scope of the variable 'has_x_isect' can be reduced. [variableScope]
  int has_x_isect = -1, has_isect = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3892:16: style: The scope of the variable 'mv' can be reduced. [variableScope]
  const MVert *mv;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3893:16: style: The scope of the variable 'me' can be reduced. [variableScope]
  const MEdge *me;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3894:10: style: The scope of the variable 'cavities' can be reduced. [variableScope]
  float *cavities;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3895:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:4323:23: style: The scope of the variable 'tile' can be reduced. [variableScope]
  int tile_last = -1, tile;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_undo.c:150:10: style: The scope of the variable 'mvert' can be reduced. [variableScope]
  MVert *mvert;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_undo.c:151:8: style: The scope of the variable 'index' can be reduced. [variableScope]
  int *index;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_undo.c:234:23: style: The scope of the variable 'grid' can be reduced. [variableScope]
    CCGElem **grids, *grid;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_undo.c:292:10: style: The scope of the variable 'mvert' can be reduced. [variableScope]
  MVert *mvert;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_undo.c:293:10: style: The scope of the variable 'vmask' can be reduced. [variableScope]
  float *vmask;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_undo.c:294:8: style: The scope of the variable 'index' can be reduced. [variableScope]
  int *index;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_undo.c:312:23: style: The scope of the variable 'grid' can be reduced. [variableScope]
    CCGElem **grids, *grid;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:5185:21: style: Local variable 'pool' shadows outer argument [shadowArgument]
  struct ImagePool *pool = ((ProjectHandle *)ph_v)->pool;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:5175:64: note: Shadowed declaration
static void do_projectpaint_thread(TaskPool *__restrict UNUSED(pool),
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:5185:21: note: Shadow variable
  struct ImagePool *pool = ((ProjectHandle *)ph_v)->pool;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\action_draw.c:184:11: style: The scope of the variable 'sel' can be reduced. [variableScope]
      int sel = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\action_draw.c:247:25: style: The scope of the variable 'gpl_col' can be reduced. [variableScope]
          unsigned char gpl_col[4];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:1157:15: style: Variable 'i1_fidx' is assigned a value that is never used. [unreadVariable]
  int i1_fidx = -1, i2_fidx = -1;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:1157:29: style: Variable 'i2_fidx' is assigned a value that is never used. [unreadVariable]
  int i1_fidx = -1, i2_fidx = -1;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3046:19: style: Variable 'has_x_isect' is assigned a value that is never used. [unreadVariable]
  int has_x_isect = 0, has_isect = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3046:34: style: Variable 'has_isect' is assigned a value that is never used. [unreadVariable]
  int has_x_isect = 0, has_isect = 0;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3122:17: style: Variable 'has_isect' is assigned a value that is never used. [unreadVariable]
      has_isect = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3650:19: style: Variable 'has_x_isect' is assigned a value that is never used. [unreadVariable]
  int has_x_isect = -1, has_isect = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt_uv.c:655:16: style: Variable 'counter' is assigned a value that is never used. [unreadVariable]
        counter++;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\action_edit.c:137:3: warning: Either the condition '(sact)?sact->action:NULL' is redundant or there is possible null pointer dereference: sact. [nullPointerRedundantCheck]
  sact->flag |= SACTION_POSEMARKERS_SHOW;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\action_edit.c:115:25: note: Assuming that condition '(sact)?sact->action:NULL' is not redundant
  bAction *act = (sact) ? sact->action : NULL;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\action_edit.c:114:42: note: Assignment 'sact=CTX_wm_space_action(C)', assigned value is 0
  SpaceAction *sact = CTX_wm_space_action(C);
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\action_edit.c:137:3: note: Null pointer dereference
  sact->flag |= SACTION_POSEMARKERS_SHOW;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\action_edit.c:368:9: style: The scope of the variable 'extra' can be reduced. [variableScope]
  float extra, min, max;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\action_edit.c:1655:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = ac.scene;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\space_action.c:568:28: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
              Scene *scene = wmn->reference;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_ops.c:92:7: style: The scope of the variable 'id' can be reduced. [variableScope]
  ID *id;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_ops.c:93:14: style: The scope of the variable 'path' can be reduced. [variableScope]
  char *str, path[FILE_MAX];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:816:7: warning: Either the condition 'sbuts?sbuts->path:NULL' is redundant or there is possible null pointer dereference: sbuts. [nullPointerRedundantCheck]
  if (sbuts->mainb == BCONTEXT_TOOL) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:810:33: note: Assuming that condition 'sbuts?sbuts->path:NULL' is not redundant
  ButsContextPath *path = sbuts ? sbuts->path : NULL;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:809:51: note: Assignment 'sbuts=CTX_wm_space_properties(C)', assigned value is 0
  SpaceProperties *sbuts = CTX_wm_space_properties(C);
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:816:7: note: Null pointer dereference
  if (sbuts->mainb == BCONTEXT_TOOL) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\action_select.c:1343:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = ac->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_action\action_select.c:1472:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = ac.scene;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:72:15: style: The scope of the variable 'ptr' can be reduced. [variableScope]
  PointerRNA *ptr;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:89:15: style: The scope of the variable 'ptr' can be reduced. [variableScope]
  PointerRNA *ptr;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:283:11: style: The scope of the variable 'ob' can be reduced. [variableScope]
  Object *ob;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:307:11: style: The scope of the variable 'ob' can be reduced. [variableScope]
  Object *ob;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:349:13: style: The scope of the variable 'edbo' can be reduced. [variableScope]
  EditBone *edbo;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:412:19: style: The scope of the variable 'psys' can be reduced. [variableScope]
  ParticleSystem *psys;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:547:7: style: The scope of the variable 'id' can be reduced. [variableScope]
  ID *id;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:1132:15: style: The scope of the variable 'ptr' can be reduced. [variableScope]
  PointerRNA *ptr;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_context.c:1266:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_texture.c:235:11: style: The scope of the variable 'mtex' can be reduced. [variableScope]
    MTex *mtex;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_buttons\buttons_texture.c:236:9: style: The scope of the variable 'a' can be reduced. [variableScope]
    int a;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_buttons.c:110:13: style: The scope of the variable 'row' can be reduced. [variableScope]
  uiLayout *row, *split;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_buttons.c:110:19: style: The scope of the variable 'split' can be reduced. [variableScope]
  uiLayout *row, *split;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_buttons.c:111:12: style: The scope of the variable 'block' can be reduced. [variableScope]
  uiBlock *block;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_buttons.c:415:10: style: The scope of the variable 'bt' can be reduced. [variableScope]
  uiBut *bt;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_buttons.c:423:9: style: The scope of the variable 'pat_min' can be reduced. [variableScope]
  float pat_min[2], pat_max[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_buttons.c:423:21: style: The scope of the variable 'pat_max' can be reduced. [variableScope]
  float pat_min[2], pat_max[2];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_buttons.c:870:10: style: The scope of the variable 'filepath' can be reduced. [variableScope]
    char filepath[FILE_MAX];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_buttons.c:847:13: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
        ofs += BLI_snprintf(
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_buttons.c:853:9: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
    ofs += BLI_strncpy_rlen(str + ofs, TIP_(", failed to load"), sizeof(str) - ofs);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_editor.c:284:18: style: The scope of the variable 'fp' can be reduced. [variableScope]
    const float *fp;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_editor.c:977:10: style: The scope of the variable 'ibuf' can be reduced. [variableScope]
  ImBuf *ibuf;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_editor.c:1091:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_editor.c:1098:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:7025:11: warning: Identical inner 'if' condition is always true. [identicalInnerCondition]
      if (!ss->layer_co) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:7024:37: note: outer condition: !ss->layer_co
    if (!ss->multires && !ss->bm && !ss->layer_co && (brush->flag & BRUSH_PERSISTENT)) {
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:7025:11: note: identical inner condition: !ss->layer_co
      if (!ss->layer_co) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3018:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x, y;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3018:10: style: The scope of the variable 'y' can be reduced. [variableScope]
  int x, y;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:3876:36: style: Redundant condition: filter_boundary_face_sets. '!A || (A && B)' is equivalent to '!A || B' [redundantCondition]
    if (!filter_boundary_face_sets ||
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3019:9: style: The scope of the variable 'mask' can be reduced. [variableScope]
  float mask;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3021:9: style: The scope of the variable 'uv' can be reduced. [variableScope]
  float uv[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3024:16: style: The scope of the variable 'v1coSS' can be reduced. [variableScope]
  const float *v1coSS, *v2coSS, *v3coSS;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3024:25: style: The scope of the variable 'v2coSS' can be reduced. [variableScope]
  const float *v1coSS, *v2coSS, *v3coSS;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3024:34: style: The scope of the variable 'v3coSS' can be reduced. [variableScope]
  const float *v1coSS, *v2coSS, *v3coSS;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3029:9: style: The scope of the variable 'w' can be reduced. [variableScope]
  float w[3], wco[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3029:15: style: The scope of the variable 'wco' can be reduced. [variableScope]
  float w[3], wco[3];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3032:10: style: The scope of the variable 'uv1co' can be reduced. [variableScope]
  float *uv1co, *uv2co, *uv3co;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3032:18: style: The scope of the variable 'uv2co' can be reduced. [variableScope]
  float *uv1co, *uv2co, *uv3co;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3032:26: style: The scope of the variable 'uv3co' can be reduced. [variableScope]
  float *uv1co, *uv2co, *uv3co;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3033:9: style: The scope of the variable 'pixelScreenCo' can be reduced. [variableScope]
  float pixelScreenCo[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_graph_ops.c:727:24: style: The scope of the variable 'marker' can be reduced. [variableScope]
  MovieTrackingMarker *marker;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3046:7: style: The scope of the variable 'has_x_isect' can be reduced. [variableScope]
  int has_x_isect = 0, has_isect = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:3046:24: style: The scope of the variable 'has_isect' can be reduced. [variableScope]
  int has_x_isect = 0, has_isect = 0;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_graph_ops.c:626:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_draw.c:175:11: style: The scope of the variable 'framenr' can be reduced. [variableScope]
      int framenr;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_draw.c:881:10: style: The scope of the variable 'next' can be reduced. [variableScope]
  int i, next;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_draw.c:1303:9: style: The scope of the variable 'color' can be reduced. [variableScope]
  float color[3], selected_color[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_draw.c:1303:19: style: The scope of the variable 'selected_color' can be reduced. [variableScope]
  float color[3], selected_color[3];
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_draw.c:1734:13: style: The scope of the variable 'a' can be reduced. [variableScope]
  int i, j, a;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:8047:9: warning: Either the condition 'if(brush)' is redundant or there is possible null pointer dereference: brush. [nullPointerRedundantCheck]
    if (brush->sculpt_tool == SCULPT_TOOL_MASK) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:8032:12: note: Assuming that condition 'if(brush)' is not redundant
        if (brush) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:8031:17: note: Assignment 'brush=(Brush*)BKE_libblock_find_name(bmain,ID_BR,ss->cache->saved_active_brush_name)', assigned value is 0
        brush = (Brush *)BKE_libblock_find_name(bmain, ID_BR, ss->cache->saved_active_brush_name);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:8047:9: note: Null pointer dereference
    if (brush->sculpt_tool == SCULPT_TOOL_MASK) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_draw.c:1735:26: style: The scope of the variable 'grid' can be reduced. [variableScope]
  float pos[2], tpos[2], grid[11][11][2];
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_draw.c:1740:9: style: The scope of the variable 'offsx' can be reduced. [variableScope]
  float offsx = 0.0f, offsy = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_draw.c:1740:23: style: The scope of the variable 'offsy' can be reduced. [variableScope]
  float offsx = 0.0f, offsy = 0.0f;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:239:9: style: struct member 'LoopSeamData::seam_uvs' is never used. [unusedStructMember]
  float seam_uvs[2][2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:240:9: style: struct member 'LoopSeamData::seam_puvs' is never used. [unusedStructMember]
  float seam_puvs[2][2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:241:9: style: struct member 'LoopSeamData::corner_dist_sq' is never used. [unusedStructMember]
  float corner_dist_sq[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_ops.c:1097:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_ops.c:1240:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = pj->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\clip_ops.c:1415:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = pj->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:2439:15: style: Redundant initialization for 'final_len'. The initialized value is overwritten before it is read. [redundantInitialization]
    final_len = 0.0f;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:2435:19: note: final_len is initialized
  float final_len = len;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:2439:15: note: final_len is overwritten
    final_len = 0.0f;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:500:27: style: struct member 'VertSeam::prev' is never used. [unusedStructMember]
  struct VertSeam *next, *prev;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:503:9: style: struct member 'VertSeam::angle' is never used. [unusedStructMember]
  float angle;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\paint_image_proj.c:504:8: style: struct member 'VertSeam::normal_cw' is never used. [unusedStructMember]
  bool normal_cw;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:10331:20: style: Redundant initialization for 'final_mask'. The initialized value is overwritten before it is read. [redundantInitialization]
        final_mask = 1.0f;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:10327:22: note: final_mask is initialized
    float final_mask = *vd.mask;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:10331:20: note: final_mask is overwritten
        final_mask = 1.0f;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:2392:11: style: The scope of the variable 'x' can be reduced. [variableScope]
    float x = 0.0f, y = 0.0f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:2392:21: style: The scope of the variable 'y' can be reduced. [variableScope]
    float x = 0.0f, y = 0.0f;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:3343:9: style: The scope of the variable 'b_current_vertex' can be reduced. [variableScope]
  float b_current_vertex[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:5990:10: style: The scope of the variable 'ofs' can be reduced. [variableScope]
  float(*ofs)[3] = NULL;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:6039:7: style: The scope of the variable 'n' can be reduced. [variableScope]
  int n, totnode;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:7116:41: style: The scope of the variable 'delta' can be reduced. [variableScope]
    float grab_location[3], imat[4][4], delta[3], loc[3];
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:7524:26: style: The scope of the variable 'hit' can be reduced. [variableScope]
  bool original = false, hit = false;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:11183:9: style: The scope of the variable 'threshold' can be reduced. [variableScope]
  float threshold = 0.5f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:2961:10: style: struct member 'SculptDoBrushSmoothGridDataChunk::tmpgrid_size' is never used. [unusedStructMember]
  size_t tmpgrid_size;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops.c:514:10: style: The scope of the variable 'next' can be reduced. [variableScope]
  int i, next, prev;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops.c:514:16: style: The scope of the variable 'prev' can be reduced. [variableScope]
  int i, next, prev;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops.c:583:11: style: The scope of the variable 'action' can be reduced. [variableScope]
      int action = -1, area = 0, corner = -1;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops.c:583:24: style: The scope of the variable 'area' can be reduced. [variableScope]
      int action = -1, area = 0, corner = -1;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops.c:583:34: style: The scope of the variable 'corner' can be reduced. [variableScope]
      int action = -1, area = 0, corner = -1;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops.c:831:17: style: The scope of the variable 'scale' can be reduced. [variableScope]
          float scale;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:2392:13: style: Variable 'x' is assigned a value that is never used. [unreadVariable]
    float x = 0.0f, y = 0.0f;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:2392:23: style: Variable 'y' is assigned a value that is never used. [unreadVariable]
    float x = 0.0f, y = 0.0f;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\sculpt_paint\sculpt.c:7520:57: style: Variable 'face_normal' is not assigned a value. [unassignedVariable]
  float ray_start[3], ray_end[3], ray_normal[3], depth, face_normal[3], sampled_normal[3],
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops_orient.c:271:25: warning: Either the condition 'track' is redundant or there is possible null pointer dereference: track. [nullPointerRedundantCheck]
  mul_v3_m4v3(vec, mat, track->bundle_pos);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops_orient.c:557:10: note: Assuming that condition 'track' is not redundant
  while (track) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops_orient.c:564:50: note: Calling function 'set_axis', 5th argument 'track' value is 0
  set_axis(scene, object, clip, tracking_object, track, axis == 0 ? 'X' : 'Y');
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops_orient.c:271:25: note: Null pointer dereference
  mul_v3_m4v3(vec, mat, track->bundle_pos);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops_orient.c:400:31: style: The scope of the variable 'obmat' can be reduced. [variableScope]
  float vec[3][3], mat[4][4], obmat[4][4], newmat[4][4], orig[3] = {0.0f, 0.0f, 0.0f};
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops_orient.c:400:44: style: The scope of the variable 'newmat' can be reduced. [variableScope]
  float vec[3][3], mat[4][4], obmat[4][4], newmat[4][4], orig[3] = {0.0f, 0.0f, 0.0f};
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops_orient.c:402:9: style: The scope of the variable 'rot' can be reduced. [variableScope]
  float rot[4][4] = {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops_orient.c:616:31: style: The scope of the variable 'scale' can be reduced. [variableScope]
  float vec[2][3], mat[4][4], scale;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_clip\tracking_ops_track.c:303:10: style: The scope of the variable 'wm_job' can be reduced. [variableScope]
  wmJob *wm_job;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_console\console_draw.c:127:7: style: The scope of the variable 'col' can be reduced. [variableScope]
  int col;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\file_panels.c:139:31: style: The scope of the variable 'but_extra_rna_ptr' can be reduced. [variableScope]
  PointerRNA params_rna_ptr, *but_extra_rna_ptr;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\file_draw.c:422:7: style: The scope of the variable 'sy' can be reduced. [variableScope]
  int sy;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\file_draw.c:687:8: style: The scope of the variable 'do_drag' can be reduced. [variableScope]
  bool do_drag;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filesel.c:865:17: style: The scope of the variable 'file' can be reduced. [variableScope]
  FileDirEntry *file;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filesel.c:897:20: style: The scope of the variable 'de' can be reduced. [variableScope]
    struct dirent *de;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\file_ops.c:520:42: warning: Either the condition 'if(sfile&&sfile->params)' is redundant or there is possible null pointer dereference: sfile. [nullPointerRedundantCheck]
  if (!ED_fileselect_layout_is_inside_pt(sfile->layout, &region->v2d, rect.xmin, rect.ymin)) {
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\file_ops.c:524:6: note: Assuming that condition 'if(sfile&&sfile->params)' is not redundant
  if (sfile && sfile->params) {
     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\file_ops.c:520:42: note: Null pointer dereference
  if (!ED_fileselect_layout_is_inside_pt(sfile->layout, &region->v2d, rect.xmin, rect.ymin)) {
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\file_ops.c:2397:8: style: The scope of the variable 'matched_file' can be reduced. [variableScope]
  char matched_file[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\file_ops.c:2398:8: style: The scope of the variable 'filepath' can be reduced. [variableScope]
  char filepath[sizeof(sfile->params->dir)];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\fsmenu.c:506:78: warning: Either the condition 'if(fsm_prev)' is redundant or there is possible null pointer dereference: fsm_iter. [nullPointerRedundantCheck]
  for (fsm_iter = fsm_head; fsm_iter && idx; fsm_prev = fsm_iter, fsm_iter = fsm_iter->next) {
                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\fsmenu.c:517:10: note: Assuming that condition 'if(fsm_prev)' is not redundant
      if (fsm_prev) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\fsmenu.c:506:57: note: Assignment from 'fsm_iter'
  for (fsm_iter = fsm_head; fsm_iter && idx; fsm_prev = fsm_iter, fsm_iter = fsm_iter->next) {
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\fsmenu.c:506:78: note: Null pointer dereference
  for (fsm_iter = fsm_head; fsm_iter && idx; fsm_prev = fsm_iter, fsm_iter = fsm_iter->next) {
                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\fsmenu.c:642:8: style: Unused variable: line [unusedVariable]
  char line[FILE_MAXDIR];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:977:11: style: Variable 'block' is reassigned a value before the old one has been used. [redundantAssignment]
    block = uiLayoutGetBlock(col);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:952:9: note: block is assigned
  block = uiLayoutGetBlock(col);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:977:11: note: block is overwritten
    block = uiLayoutGetBlock(col);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:985:11: style: Variable 'block' is reassigned a value before the old one has been used. [redundantAssignment]
    block = uiLayoutGetBlock(col);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:977:11: note: block is assigned
    block = uiLayoutGetBlock(col);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:985:11: note: block is overwritten
    block = uiLayoutGetBlock(col);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:1045:9: style: Variable 'block' is reassigned a value before the old one has been used. [redundantAssignment]
  block = uiLayoutGetBlock(row);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:985:11: note: block is assigned
    block = uiLayoutGetBlock(col);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:1045:9: note: block is overwritten
  block = uiLayoutGetBlock(row);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:1045:9: style: Variable 'block' is reassigned a value before the old one has been used. [redundantAssignment]
  block = uiLayoutGetBlock(row);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:1016:11: note: block is assigned
    block = uiLayoutGetBlock(col);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:1045:9: note: block is overwritten
  block = uiLayoutGetBlock(row);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:1206:9: warning: Variable 'block' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
  block = uiLayoutGetBlock(row);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:1072:9: note: $symbol is assigned
  block = uiLayoutGetBlock(row);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:1206:9: note: $symbol is overwritten
  block = uiLayoutGetBlock(row);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:100:15: style: The scope of the variable 'prev_dir' can be reduced. [variableScope]
  const char *prev_dir;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:901:9: style: The scope of the variable 'x' can be reduced. [variableScope]
  short x, y, k;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:358:13: style: The scope of the variable 'col' can be reduced. [variableScope]
  uiLayout *col;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:901:12: style: The scope of the variable 'y' can be reduced. [variableScope]
  short x, y, k;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:747:19: style: The scope of the variable 'col' can be reduced. [variableScope]
  uiLayout *row, *col;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:901:15: style: The scope of the variable 'k' can be reduced. [variableScope]
  short x, y, k;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:1342:13: style: The scope of the variable 'col' can be reduced. [variableScope]
  uiLayout *col, *row;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:1893:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_buttons.c:1342:19: style: The scope of the variable 'row' can be reduced. [variableScope]
  uiLayout *col, *row;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:1922:11: style: The scope of the variable 'size2' can be reduced. [variableScope]
      int size2 = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\fsmenu.c:631:8: style: The scope of the variable 'line' can be reduced. [variableScope]
  char line[FILE_MAXDIR];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:1923:39: style: The scope of the variable 'idx2' can be reduced. [variableScope]
      int idx1 = cache->block_cursor, idx2 = 0;
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:1964:41: style: The scope of the variable 'idx2' can be reduced. [variableScope]
        int idx1 = cache->block_cursor, idx2 = 0;
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:1982:13: style: The scope of the variable 'size2' can be reduced. [variableScope]
        int size2 = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:1983:19: style: The scope of the variable 'idx2' can be reduced. [variableScope]
        int idx1, idx2 = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:2495:8: style: The scope of the variable 'path' can be reduced. [variableScope]
  char path[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:1922:17: style: Variable 'size2' is assigned a value that is never used. [unreadVariable]
      int size2 = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:1982:19: style: Variable 'size2' is assigned a value that is never used. [unreadVariable]
        int size2 = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:231:63: warning: Either the condition '!prevbezt' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
  for (int i = 0; i < fcu->totvert; i++, prevbezt = bezt, bezt++) {
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:241:12: note: Assuming that condition '!prevbezt' is not redundant
      if ((!prevbezt && (bezt->ipo == BEZT_IPO_BEZ)) ||
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:231:53: note: Assignment from 'bezt'
  for (int i = 0; i < fcu->totvert; i++, prevbezt = bezt, bezt++) {
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:231:63: note: Null pointer addition
  for (int i = 0; i < fcu->totvert; i++, prevbezt = bezt, bezt++) {
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:358:61: warning: Either the condition '!prevbezt' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
    for (b = 0; b < fcu->totvert; b++, prevbezt = bezt, bezt++) {
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:373:14: note: Assuming that condition '!prevbezt' is not redundant
        if ((!prevbezt && (bezt->ipo == BEZT_IPO_BEZ)) ||
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:358:51: note: Assignment from 'bezt'
    for (b = 0; b < fcu->totvert; b++, prevbezt = bezt, bezt++) {
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:358:61: note: Null pointer addition
    for (b = 0; b < fcu->totvert; b++, prevbezt = bezt, bezt++) {
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:75:21: style: The scope of the variable 'fed' can be reduced. [variableScope]
  FCM_EnvelopeData *fed;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:77:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:501:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, n;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_draw.c:692:13: style: Variable 'fac' is assigned a value that is never used. [unreadVariable]
  float fac = 0.0f;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:798:23: warning: Either the condition 'if(ale)' is redundant or there is possible null pointer dereference: ale. [nullPointerRedundantCheck]
  if (ELEM(NULL, ale, ale->data)) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:799:8: note: Assuming that condition 'if(ale)' is not redundant
    if (ale) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:798:23: note: Null pointer dereference
  if (ELEM(NULL, ale, ale->data)) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:126:13: style: The scope of the variable 'unitFac' can be reduced. [variableScope]
      float unitFac, offset;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:787:13: style: The scope of the variable 'adt' can be reduced. [variableScope]
  AnimData *adt;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:789:9: style: The scope of the variable 'frame' can be reduced. [variableScope]
  float frame, val;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:789:16: style: The scope of the variable 'val' can be reduced. [variableScope]
  float frame, val;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\space_graph.c:296:18: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (sipo->mode != SIPO_MODE_DRIVERS) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\space_graph.c:287:18: note: First condition
  if (sipo->mode != SIPO_MODE_DRIVERS) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\space_graph.c:296:18: note: Second condition
  if (sipo->mode != SIPO_MODE_DRIVERS) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\space_graph.c:305:18: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (sipo->mode != SIPO_MODE_DRIVERS) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\space_graph.c:296:18: note: First condition
  if (sipo->mode != SIPO_MODE_DRIVERS) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\space_graph.c:305:18: note: Second condition
  if (sipo->mode != SIPO_MODE_DRIVERS) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:88:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = ac->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\space_graph.c:205:9: style: The scope of the variable 'cfra_flag' can be reduced. [variableScope]
  short cfra_flag = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:1831:9: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  scene = ac.scene;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:2791:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = ac.scene;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_select.c:543:5: warning: Possible null pointer dereference: data_lasso [nullPointer]
    data_lasso->rectf_scaled = &scaled_rectf;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_select.c:699:71: note: Calling function 'box_select_graphkeys', 6th argument 'NULL' value is 0
  box_select_graphkeys(&ac, &rect_fl, mode, selectmode, incl_handles, NULL);
                                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_select.c:542:42: note: Assignment 'data_lasso=data', assigned value is 0
    KeyframeEdit_LassoData *data_lasso = data;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_select.c:543:5: note: Null pointer dereference
    data_lasso->rectf_scaled = &scaled_rectf;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_select.c:213:65: warning: Either the condition '!prevbezt' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
      for (i = 0; i < fcu->totvert; i++, prevbezt = bezt1, bezt1++) {
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_select.c:229:16: note: Assuming that condition '!prevbezt' is not redundant
          if ((!prevbezt && (bezt1->ipo == BEZT_IPO_BEZ)) ||
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_select.c:213:53: note: Assignment from 'bezt1'
      for (i = 0; i < fcu->totvert; i++, prevbezt = bezt1, bezt1++) {
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_select.c:213:65: note: Null pointer addition
      for (i = 0; i < fcu->totvert; i++, prevbezt = bezt1, bezt1++) {
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_select.c:1277:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = ac->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_select.c:1372:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = ac.scene;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\fsmenu.c:863:18: style: Local variable 'cfURL' shadows outer variable [shadowVariable]
        CFURLRef cfURL = NULL;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\fsmenu.c:800:14: note: Shadowed declaration
    CFURLRef cfURL = NULL;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\fsmenu.c:863:18: note: Shadow variable
        CFURLRef cfURL = NULL;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_edit.c:141:10: style: The scope of the variable 'ibuf' can be reduced. [variableScope]
  ImBuf *ibuf;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_edit.c:382:10: style: The scope of the variable 'slot' can be reduced. [variableScope]
  int i, slot;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_buttons.c:365:9: style: Condition 'rr' is always true [knownConditionTrueFalse]
  nr = (rr ? BLI_listbase_count(&rr->views) : 0) - 1;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_buttons.c:341:19: note: Assuming that condition 'rr==NULL' is not redundant
  if (UNLIKELY(rr == NULL)) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_buttons.c:365:9: note: Condition 'rr' is always true
  nr = (rr ? BLI_listbase_count(&rr->views) : 0) - 1;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_buttons.c:366:16: style: Condition 'rr' is always true [knownConditionTrueFalse]
  for (rview = rr ? rr->views.last : NULL; rview; rview = rview->prev, nr--) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_buttons.c:341:19: note: Assuming that condition 'rr==NULL' is not redundant
  if (UNLIKELY(rr == NULL)) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_buttons.c:366:16: note: Condition 'rr' is always true
  for (rview = rr ? rr->views.last : NULL; rview; rview = rview->prev, nr--) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_buttons.c:587:15: style: The scope of the variable 'fake_name' can be reduced. [variableScope]
  const char *fake_name;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_buttons.c:1007:16: style: The scope of the variable 'prop' can be reduced. [variableScope]
  PropertyRNA *prop;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_buttons.c:1252:11: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
      ofs += BLI_strncpy_rlen(str + ofs, TIP_(" + Z"), len - ofs);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_buttons.c:1261:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = CTX_data_scene(C);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_draw.c:752:10: style: The scope of the variable 'ibuf' can be reduced. [variableScope]
  ImBuf *ibuf;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_draw.c:1053:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_graph\graph_edit.c:1923:9: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  scene = ac.scene; /* current scene */
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_info\info_draw.c:176:24: style: Variable 'report' is assigned a value that is never used. [unreadVariable]
  const Report *report = tvc->iter;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_ops.c:1332:7: style: Redundant initialization for 'iod'. The initialized value is overwritten before it is read. [redundantInitialization]
  iod = op->customdata;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_ops.c:1298:22: note: iod is initialized
  ImageOpenData *iod = op->customdata;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_ops.c:1332:7: note: iod is overwritten
  iod = op->customdata;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_ops.c:3200:18: style: The scope of the variable 'fp' can be reduced. [variableScope]
    const float *fp;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_info\info_stats.c:569:7: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
  ofs += BLI_snprintf(s + ofs, MAX_INFO_LEN - ofs, " | %s", versionstr);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_info\textview.c:373:12: style: Variable 'sel[1]' is assigned a value that is never used. [unreadVariable]
    sel[1] = tvc->sel_end;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_nla\nla_buttons.c:162:15: style: Condition 'adt_ptr' is always true [knownConditionTrueFalse]
          if (adt_ptr) {
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_nla\nla_buttons.c:148:25: note: Assuming that condition 'adt_ptr' is not redundant
        if (ale->adt && adt_ptr) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_nla\nla_buttons.c:162:15: note: Condition 'adt_ptr' is always true
          if (adt_ptr) {
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_nla\nla_buttons.c:547:13: style: The scope of the variable 'col' can be reduced. [variableScope]
  uiLayout *col, *row;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_nla\nla_buttons.c:547:19: style: The scope of the variable 'row' can be reduced. [variableScope]
  uiLayout *col, *row;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_image\image_ops.c:3842:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_nla\nla_channels.c:585:7: style: Condition 'adt' is always true [knownConditionTrueFalse]
  if (adt && adt->action) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_nla\nla_channels.c:580:11: note: Assuming that condition 'adt==NULL' is not redundant
  if (adt == NULL) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_nla\nla_channels.c:585:7: note: Condition 'adt' is always true
  if (adt && adt->action) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:913:7: style: Condition 'bbuf' is always false [knownConditionTrueFalse]
  if (bbuf) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:908:10: note: Assignment 'bbuf=NULL', assigned value is 0
  bbuf = NULL;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_file\filelist.c:913:7: note: Condition 'bbuf' is always false
  if (bbuf) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_nla\nla_draw.c:329:11: style: The scope of the variable 'cfra' can be reduced. [variableScope]
    float cfra;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_nla\nla_select.c:552:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = ac.scene;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_add.c:103:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, b;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_add.c:103:10: style: The scope of the variable 'b' can be reduced. [variableScope]
  int i, b;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_buttons.c:75:35: style: The scope of the variable 'split' can be reduced. [variableScope]
  uiLayout *layout = pa->layout, *split;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_ops.c:154:7: style: Variable 'mot' is reassigned a value before the old one has been used. [redundantAssignment]
  mot = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_ops.c:145:7: note: mot is assigned
  mot = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_ops.c:154:7: note: mot is overwritten
  mot = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_ops.c:183:7: style: Variable 'mot' is reassigned a value before the old one has been used. [redundantAssignment]
  mot = WM_operatortype_macro_define(ot, "NODE_OT_duplicate");
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_ops.c:168:7: note: mot is assigned
  mot = WM_operatortype_macro_define(ot, "TRANSFORM_OT_translate");
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_ops.c:183:7: note: mot is overwritten
  mot = WM_operatortype_macro_define(ot, "NODE_OT_duplicate");
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_gizmo.c:100:15: style: Variable 'snode->zoom' is reassigned a value before the old one has been used. [redundantAssignment]
  snode->zoom = matrix[1][1];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_gizmo.c:99:15: note: snode->zoom is assigned
  snode->zoom = matrix[0][0];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_gizmo.c:100:15: note: snode->zoom is overwritten
  snode->zoom = matrix[1][1];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_group.c:983:14: style: The scope of the variable 'ngroup' can be reduced. [variableScope]
  bNodeTree *ngroup;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:393:12: warning: Either the condition 'if(snode&&snode->edittree)' is redundant or there is possible null pointer dereference: snode. [nullPointerRedundantCheck]
  ID *id = snode->id;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1850:11: note: Assuming that condition 'if(snode&&snode->edittree)' is not redundant
  else if (snode && snode->edittree) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1840:39: note: Assignment 'snode=CTX_wm_space_node(C)', assigned value is 0
  SpaceNode *snode = CTX_wm_space_node(C);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1862:19: note: Calling function 'snode_notify', 2nd argument 'snode' value is 0
  snode_notify(C, snode);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:393:12: note: Null pointer dereference
  ID *id = snode->id;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:428:16: warning: Either the condition 'if(snode&&snode->edittree)' is redundant or there is possible null pointer dereference: snode. [nullPointerRedundantCheck]
  return STREQ(snode->tree_idname, ntreeType_Composite->idname);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1850:11: note: Assuming that condition 'if(snode&&snode->edittree)' is not redundant
  else if (snode && snode->edittree) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1840:39: note: Assignment 'snode=CTX_wm_space_node(C)', assigned value is 0
  SpaceNode *snode = CTX_wm_space_node(C);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1862:19: note: Calling function 'snode_notify', 2nd argument 'snode' value is 0
  snode_notify(C, snode);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:408:34: note: Calling function 'ED_node_is_compositor', 1st argument 'snode' value is 0
  else if (ED_node_is_compositor(snode)) {
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:428:16: note: Null pointer dereference
  return STREQ(snode->tree_idname, ntreeType_Composite->idname);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:433:16: warning: Either the condition 'if(snode&&snode->edittree)' is redundant or there is possible null pointer dereference: snode. [nullPointerRedundantCheck]
  return STREQ(snode->tree_idname, ntreeType_Shader->idname);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1850:11: note: Assuming that condition 'if(snode&&snode->edittree)' is not redundant
  else if (snode && snode->edittree) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1840:39: note: Assignment 'snode=CTX_wm_space_node(C)', assigned value is 0
  SpaceNode *snode = CTX_wm_space_node(C);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1862:19: note: Calling function 'snode_notify', 2nd argument 'snode' value is 0
  snode_notify(C, snode);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:397:25: note: Calling function 'ED_node_is_shader', 1st argument 'snode' value is 0
  if (ED_node_is_shader(snode)) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:433:16: note: Null pointer dereference
  return STREQ(snode->tree_idname, ntreeType_Shader->idname);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_select.c:1027:9: style: Condition 'same_type' is always true [knownConditionTrueFalse]
    if (same_type) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:438:16: warning: Either the condition 'if(snode&&snode->edittree)' is redundant or there is possible null pointer dereference: snode. [nullPointerRedundantCheck]
  return STREQ(snode->tree_idname, ntreeType_Texture->idname);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1850:11: note: Assuming that condition 'if(snode&&snode->edittree)' is not redundant
  else if (snode && snode->edittree) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1840:39: note: Assignment 'snode=CTX_wm_space_node(C)', assigned value is 0
  SpaceNode *snode = CTX_wm_space_node(C);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1862:19: note: Calling function 'snode_notify', 2nd argument 'snode' value is 0
  snode_notify(C, snode);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:411:31: note: Calling function 'ED_node_is_texture', 1st argument 'snode' value is 0
  else if (ED_node_is_texture(snode)) {
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:438:16: note: Null pointer dereference
  return STREQ(snode->tree_idname, ntreeType_Texture->idname);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_select.c:186:9: style: The scope of the variable 'sel' can be reduced. [variableScope]
    int sel = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_select.c:219:10: style: The scope of the variable 'sel' can be reduced. [variableScope]
    bool sel = false;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1036:7: style: The scope of the variable 'dir' can be reduced. [variableScope]
  int dir;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_edit.c:1219:15: style: Variable 'newnode' is assigned a value that is never used. [unreadVariable]
      newnode = BKE_node_copy_store_new_pointers(ntree, node, LIB_ID_COPY_DEFAULT);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_relationships.c:595:18: warning: Either the condition 'if(tlink&&tlink->fromsock==from)' is redundant or there is possible null pointer dereference: tlink. [nullPointerRedundantCheck]
    tlink_next = tlink->next;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_relationships.c:600:8: note: Assuming that condition 'if(tlink&&tlink->fromsock==from)' is not redundant
    if (tlink && tlink->fromsock == from) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_relationships.c:595:18: note: Null pointer dereference
    tlink_next = tlink->next;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_relationships.c:1830:30: warning: Either the condition '!snode' is redundant or there is possible null pointer dereference: snode. [nullPointerRedundantCheck]
  NodeInsertOfsData *iofsd = snode->iofsd;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_relationships.c:1835:7: note: Assuming that condition '!snode' is not redundant
  if (!snode || event->type != TIMER || iofsd == NULL || iofsd->anim_timer != event->customdata) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_relationships.c:1830:30: note: Null pointer dereference
  NodeInsertOfsData *iofsd = snode->iofsd;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_relationships.c:1007:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, b;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_relationships.c:1007:10: style: The scope of the variable 'b' can be reduced. [variableScope]
  int i, b;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_relationships.c:1029:8: style: The scope of the variable 'do_tag_update' can be reduced. [variableScope]
  bool do_tag_update = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_relationships.c:1927:16: style: The scope of the variable 'sockto' can be reduced. [variableScope]
  bNodeSocket *sockto;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\drawnode.c:578:8: style: The scope of the variable 'showname' can be reduced. [variableScope]
  char showname[128]; /* 128 used below */
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\drawnode.c:1441:19: style: The scope of the variable 'row' can be reduced. [variableScope]
  uiLayout *col, *row;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\drawnode.c:2511:13: style: The scope of the variable 'col' can be reduced. [variableScope]
  uiLayout *col;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\drawnode.c:3467:9: style: The scope of the variable 'shuffle' can be reduced. [variableScope]
  float shuffle[4] = {0.0f, 0.0f, 0.0f, 0.0f};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_templates.c:559:11: style: Variable 'but' is reassigned a value before the old one has been used. [redundantAssignment]
      but = uiDefIconTextBut(block,
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_templates.c:525:13: note: but is assigned
        but = block->buttons.last;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_templates.c:559:11: note: but is overwritten
      but = uiDefIconTextBut(block,
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_templates.c:720:11: style: Variable 'col' is reassigned a value before the old one has been used. [redundantAssignment]
      col = uiLayoutColumn(split, false);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_templates.c:719:11: note: col is assigned
      col = uiLayoutColumn(split, false);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_templates.c:720:11: note: col is overwritten
      col = uiLayoutColumn(split, false);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_templates.c:330:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_templates.c:364:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_templates.c:711:13: style: The scope of the variable 'col' can be reduced. [variableScope]
  uiLayout *col, *split;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_templates.c:711:19: style: The scope of the variable 'split' can be reduced. [variableScope]
  uiLayout *col, *split;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\drawnode.c:707:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = CTX_data_scene(C);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_view.c:65:30: style: The scope of the variable 'width' can be reduced. [variableScope]
  float oldwidth, oldheight, width, height;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_view.c:65:37: style: The scope of the variable 'height' can be reduced. [variableScope]
  float oldwidth, oldheight, width, height;
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_view.c:66:17: style: The scope of the variable 'asp' can be reduced. [variableScope]
  float oldasp, asp;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_node\node_view.c:452:18: style: The scope of the variable 'fp' can be reduced. [variableScope]
    const float *fp;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:536:13: warning: Either the condition 'region&&soops' is redundant or there is possible null pointer dereference: soops. [nullPointerRedundantCheck]
  for (te = soops->tree.first; te; te = te->next) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:532:21: note: Assuming that condition 'region&&soops' is not redundant
  BLI_assert(region && soops);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:528:47: note: Assignment 'soops=CTX_wm_space_outliner(C)', assigned value is 0
  SpaceOutliner *soops = CTX_wm_space_outliner(C);
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:536:13: note: Null pointer dereference
  for (te = soops->tree.first; te; te = te->next) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:913:13: warning: Either the condition 'region&&soops' is redundant or there is possible null pointer dereference: soops. [nullPointerRedundantCheck]
  for (te = soops->tree.first; te; te = te->next) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:909:21: note: Assuming that condition 'region&&soops' is not redundant
  BLI_assert(region && soops);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:905:47: note: Assignment 'soops=CTX_wm_space_outliner(C)', assigned value is 0
  SpaceOutliner *soops = CTX_wm_space_outliner(C);
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:913:13: note: Null pointer dereference
  for (te = soops->tree.first; te; te = te->next) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:961:13: warning: Either the condition 'region&&soops' is redundant or there is possible null pointer dereference: soops. [nullPointerRedundantCheck]
  for (te = soops->tree.first; te; te = te->next) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:957:21: note: Assuming that condition 'region&&soops' is not redundant
  BLI_assert(region && soops);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:953:47: note: Assignment 'soops=CTX_wm_space_outliner(C)', assigned value is 0
  SpaceOutliner *soops = CTX_wm_space_outliner(C);
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:961:13: note: Null pointer dereference
  for (te = soops->tree.first; te; te = te->next) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1006:25: style: The scope of the variable 'lev' can be reduced. [variableScope]
  int level = curlevel, lev;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1021:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1022:7: style: The scope of the variable 'level' can be reduced. [variableScope]
  int level;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1047:8: style: The scope of the variable 'has_flag' can be reduced. [variableScope]
  bool has_flag;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1071:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1236:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1512:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1586:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1604:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1701:18: style: The scope of the variable 'tse' can be reduced. [variableScope]
  TreeStoreElem *tse /* , *tsenext */ /* UNUSED */;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:1857:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_edit.c:2041:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_utils.c:105:8: style: The scope of the variable 'over_element' can be reduced. [variableScope]
  bool over_element = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_utils.c:153:21: style: The scope of the variable 'tes' can be reduced. [variableScope]
  TreeElement *te, *tes;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_utils.c:260:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_utils.c:378:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_utils.c:105:21: style: Variable 'over_element' is assigned a value that is never used. [unreadVariable]
  bool over_element = false;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_select.c:1357:25: style: The scope of the variable 'rebuild_tree' can be reduced. [variableScope]
  bool changed = false, rebuild_tree = false;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_select.c:242:12: style: Local variable 'scene' shadows outer argument [shadowArgument]
    Scene *scene = WM_window_get_active_scene(win);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_select.c:228:52: note: Shadowed declaration
                                     Scene *UNUSED(scene),
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_select.c:242:12: note: Shadow variable
    Scene *scene = WM_window_get_active_scene(win);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_select.c:127:11: style: Variable 'obact' is assigned a value that is never used. [unreadVariable]
    obact = ob;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_select.c:175:11: style: Variable 'obact' is assigned a value that is never used. [unreadVariable]
    obact = ob;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tools.c:217:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, totcol = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tools.c:397:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tools.c:431:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tools.c:1141:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tools.c:1907:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:390:34: warning: Possible null pointer dereference: layer_collection [nullPointer]
    for (CollectionObject *cob = layer_collection->collection->gobject.first; cob;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:674:48: note: Calling function 'outliner_collection_set_flag_recursive_cb', 2nd argument 'NULL' value is 0
  outliner_collection_set_flag_recursive_cb(C, NULL, collection, propname);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:620:44: note: Calling function 'outliner_collection_set_flag_recursive', 3rd argument 'layer_collection' value is 0
                                           layer_collection,
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:390:34: note: Null pointer dereference
    for (CollectionObject *cob = layer_collection->collection->gobject.first; cob;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:444:61: warning: Either the condition 'layer_collection?&layer_collection->layer_collections:&collection->children' is redundant or there is possible null pointer dereference: layer_collection. [nullPointerRedundantCheck]
  Collection *collection_ensure = collection ? collection : layer_collection->collection;
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:469:36: note: Assuming that condition 'layer_collection?&layer_collection->layer_collections:&collection->children' is not redundant
  ListBase *lb = (layer_collection ? &layer_collection->layer_collections : &collection->children);
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:444:61: note: Null pointer dereference
  Collection *collection_ensure = collection ? collection : layer_collection->collection;
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:473:53: warning: Either the condition 'if(layer_collection_iter&&layer_collection_iter->flag&LAYER_COLLECTION_EXCLUDE)' is redundant or there is possible null pointer dereference: layer_collection_iter. [nullPointerRedundantCheck]
                                      (collection ? layer_collection_iter->collection : NULL) :
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:475:8: note: Assuming that condition 'if(layer_collection_iter&&layer_collection_iter->flag&LAYER_COLLECTION_EXCLUDE)' is not redundant
    if (layer_collection_iter && layer_collection_iter->flag & LAYER_COLLECTION_EXCLUDE) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:473:53: note: Null pointer dereference
                                      (collection ? layer_collection_iter->collection : NULL) :
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:3596:22: style: The scope of the variable 'y2' can be reduced. [variableScope]
  float y1 = ystart, y2;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_draw.c:2862:23: style: Variable 'active' is assigned a value that is never used. [unreadVariable]
  eOLDrawState active = OL_DRAWSEL_NONE;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:798:10: warning: Possible null pointer dereference: parent [nullPointer]
    id = TREESTORE(parent)->id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:1307:59: note: Calling function 'outliner_add_element', 4th argument 'NULL' value is 0
            tenlib = outliner_add_element(soops, lb, lib, NULL, 0, 0);
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:798:10: note: Null pointer dereference
    id = TREESTORE(parent)->id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:104:9: style: The scope of the variable 'unused' can be reduced. [variableScope]
    int unused = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:136:26: style: The scope of the variable 'tsenew' can be reduced. [variableScope]
          TreeStoreElem *tsenew;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:371:24: style: The scope of the variable 'ten1' can be reduced. [variableScope]
          TreeElement *ten1;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:440:18: style: The scope of the variable 'ten' can be reduced. [variableScope]
    TreeElement *ten;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:508:18: style: The scope of the variable 'ten' can be reduced. [variableScope]
    TreeElement *ten;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:916:22: style: The scope of the variable 'ten' can be reduced. [variableScope]
        TreeElement *ten;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:1125:10: style: The scope of the variable 'opname' can be reduced. [variableScope]
    char opname[OP_MAX_TYPENAME];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:1502:18: style: The scope of the variable 'tselem' can be reduced. [variableScope]
  TreeStoreElem *tselem;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:1761:11: style: The scope of the variable 'skip' can be reduced. [variableScope]
      int skip = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:1915:28: style: The scope of the variable 'te_sub' can be reduced. [variableScope]
    TreeElement *te_iter, *te_sub;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:1942:21: style: The scope of the variable 'te_sub' can be reduced. [variableScope]
  TreeElement *te, *te_sub;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:2389:9: style: The scope of the variable 'op' can be reduced. [variableScope]
    int op;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_outliner\outliner_tree.c:1761:16: style: Variable 'skip' is assigned a value that is never used. [unreadVariable]
      int skip = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_add.c:1042:60: style: Same expression on both sides of '|'. [duplicateExpression]
                                     WM_FILESEL_SHOW_PROPS | WM_FILESEL_DIRECTORY,
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_add.c:885:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_add.c:174:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_add.c:959:9: style: Variable 'se' is assigned a value that is never used. [unreadVariable]
      se++;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_scopes.c:644:9: style: Variable 'x' is assigned a value that is never used. [unreadVariable]
  int x = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_draw.c:248:15: style: The scope of the variable 'p' can be reduced. [variableScope]
    int i, j, p;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_draw.c:255:11: style: The scope of the variable 'value1' can be reduced. [variableScope]
    float value1, value2;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_draw.c:255:19: style: The scope of the variable 'value2' can be reduced. [variableScope]
    float value1, value2;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_select.c:398:9: style: The scope of the variable 'oldflag' can be reduced. [variableScope]
    int oldflag;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_draw.c:773:33: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  col[3] = seq->flag & SEQ_MUTE ? MUTE_ALPHA : 200;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_select.c:1420:13: style: The scope of the variable 'seq' can be reduced. [variableScope]
  Sequence *seq, *actseq = BKE_sequencer_active_get(scene);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_autocomplete.c:360:19: style: Variable 'swallow' is assigned a value that is never used. [unreadVariable]
          swallow = 1;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_autocomplete.c:382:19: style: Variable 'swallow' is assigned a value that is never used. [unreadVariable]
          swallow = 1;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_autocomplete.c:421:19: style: Variable 'swallow' is assigned a value that is never used. [unreadVariable]
          swallow = 1;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_autocomplete.c:505:19: style: Variable 'swallow' is assigned a value that is never used. [unreadVariable]
          swallow = 1;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_autocomplete.c:526:19: style: Variable 'swallow' is assigned a value that is never used. [unreadVariable]
          swallow = 1;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_autocomplete.c:541:19: style: Variable 'swallow' is assigned a value that is never used. [unreadVariable]
          swallow = 1;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_autocomplete.c:557:19: style: Variable 'swallow' is assigned a value that is never used. [unreadVariable]
          swallow = 1;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:2252:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (changed) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:2206:7: note: First condition
  if (changed) { /* got new strips ? */
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:2252:7: note: Second condition
  if (changed) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:1551:25: style: Condition 'endframe<=seq->enddisp' is always true [knownConditionTrueFalse]
      else if (endframe <= seq->enddisp) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:1562:27: style: Condition 'seq->start<=seq->startdisp' is always true [knownConditionTrueFalse]
      else if (seq->start <= seq->startdisp) {
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:1535:9: style: The scope of the variable 'endframe' can be reduced. [variableScope]
    int endframe;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:2179:8: style: The scope of the variable 'seq_selected' can be reduced. [variableScope]
  bool seq_selected = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:3116:7: style: The scope of the variable 'orig_height' can be reduced. [variableScope]
  int orig_height;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:3117:7: style: The scope of the variable 'ymid' can be reduced. [variableScope]
  int ymid;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:3118:7: style: The scope of the variable 'ymargin' can be reduced. [variableScope]
  int ymargin = 1;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:698:47: error: Uninitialized variable: current_sequence [uninitvar]
    if (!(current_sequence->flag & SELECT) && current_sequence != deleting_sequence) {
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:701:18: error: Uninitialized variable: current_sequence [uninitvar]
      for (smd = current_sequence->modifiers.first; smd; smd = smd->next) {
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:745:14: style: Variable 'ts.machine' is assigned a value that is never used. [unreadVariable]
  ts.machine = seq->machine;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:746:17: style: Variable 'ts.startstill' is assigned a value that is never used. [unreadVariable]
  ts.startstill = seq->startstill;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:748:16: style: Variable 'ts.startdisp' is assigned a value that is never used. [unreadVariable]
  ts.startdisp = seq->startdisp;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:750:15: style: Variable 'ts.startofs' is assigned a value that is never used. [unreadVariable]
  ts.startofs = seq->startofs;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:752:20: style: Variable 'ts.anim_startofs' is assigned a value that is never used. [unreadVariable]
  ts.anim_startofs = seq->anim_startofs;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:863:14: style: Variable 'ts.machine' is assigned a value that is never used. [unreadVariable]
  ts.machine = seq->machine;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:864:17: style: Variable 'ts.startstill' is assigned a value that is never used. [unreadVariable]
  ts.startstill = seq->startstill;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:866:16: style: Variable 'ts.startdisp' is assigned a value that is never used. [unreadVariable]
  ts.startdisp = seq->startdisp;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:868:15: style: Variable 'ts.startofs' is assigned a value that is never used. [unreadVariable]
  ts.startofs = seq->startofs;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:870:20: style: Variable 'ts.anim_startofs' is assigned a value that is never used. [unreadVariable]
  ts.anim_startofs = seq->anim_startofs;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:871:18: style: Variable 'ts.anim_endofs' is assigned a value that is never used. [unreadVariable]
  ts.anim_endofs = seq->anim_endofs;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:1354:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:2264:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = CTX_data_scene(C);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_sequencer\sequencer_edit.c:4038:11: style: Variable 'se' is assigned a value that is never used. [unreadVariable]
        se++;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:206:13: style: The scope of the variable 'start' can be reduced. [variableScope]
  int i, j, start, end, max, chop;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:206:20: style: The scope of the variable 'end' can be reduced. [variableScope]
  int i, j, start, end, max, chop;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:206:30: style: The scope of the variable 'chop' can be reduced. [variableScope]
  int i, j, start, end, max, chop;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:311:8: style: The scope of the variable 'ch' can be reduced. [variableScope]
  char ch;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:395:7: style: The scope of the variable 'col' can be reduced. [variableScope]
  int col;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:521:7: style: The scope of the variable 'columns' can be reduced. [variableScope]
  int columns, size, n, w = 0, padding, amount = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:521:16: style: The scope of the variable 'size' can be reduced. [variableScope]
  int columns, size, n, w = 0, padding, amount = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:799:8: style: The scope of the variable 'ch' can be reduced. [variableScope]
  char ch;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:1144:7: style: The scope of the variable 'w' can be reduced. [variableScope]
  int w, boxw = 0, boxh, i, x, y, *top;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:1238:7: style: The scope of the variable 'vcurl' can be reduced. [variableScope]
  int vcurl, vcurc, vsell, vselc, hidden = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:1238:14: style: The scope of the variable 'vcurc' can be reduced. [variableScope]
  int vcurl, vcurc, vsell, vselc, hidden = 0;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:1239:13: style: The scope of the variable 'w' can be reduced. [variableScope]
  int x, y, w, i;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:1239:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  int x, y, w, i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:1570:7: style: The scope of the variable 'margin_column_x' can be reduced. [variableScope]
  int margin_column_x;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_draw.c:1750:10: style: The scope of the variable 'x' can be reduced. [variableScope]
  int i, x, winx = region->winx;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_ops.c:1334:10: style: The scope of the variable 'a' can be reduced. [variableScope]
  size_t a, j, max_len = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_ops.c:1334:13: style: The scope of the variable 'j' can be reduced. [variableScope]
  size_t a, j, max_len = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_ops.c:1640:8: style: The scope of the variable 'ch' can be reduced. [variableScope]
  char ch;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_ops.c:1824:8: style: The scope of the variable 'ch' can be reduced. [variableScope]
  char ch;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_ops.c:1908:8: style: The scope of the variable 'ch' can be reduced. [variableScope]
  char ch;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_ops.c:2978:8: style: The scope of the variable 'found' can be reduced. [variableScope]
  bool found = false;               /* flags */
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_ops.c:3221:9: style: The scope of the variable 'buffer' can be reduced. [variableScope]
  char *buffer;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_text\text_ops.c:3538:9: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  char *tmp;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:1215:15: style: Variable 'row' is reassigned a value before the old one has been used. [redundantAssignment]
          row = uiLayoutRow(split, true);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:1192:15: note: row is assigned
          row = uiLayoutRow(split, true);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:1215:15: note: row is overwritten
          row = uiLayoutRow(split, true);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:233:13: style: The scope of the variable 'eve' can be reduced. [variableScope]
    BMVert *eve;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:234:13: style: The scope of the variable 'eed' can be reduced. [variableScope]
    BMEdge *eed;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:839:15: style: The scope of the variable 'eve' can be reduced. [variableScope]
      BMVert *eve;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:840:15: style: The scope of the variable 'eed' can be reduced. [variableScope]
      BMEdge *eed;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:842:11: style: The scope of the variable 'cd_vert_bweight_offset' can be reduced. [variableScope]
      int cd_vert_bweight_offset = -1;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:843:11: style: The scope of the variable 'cd_vert_skin_offset' can be reduced. [variableScope]
      int cd_vert_skin_offset = -1;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:844:11: style: The scope of the variable 'cd_edge_bweight_offset' can be reduced. [variableScope]
      int cd_edge_bweight_offset = -1;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:845:11: style: The scope of the variable 'cd_edge_crease_offset' can be reduced. [variableScope]
      int cd_edge_crease_offset = -1;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:847:13: style: The scope of the variable 'scale_bv_weight' can be reduced. [variableScope]
      float scale_bv_weight = 1.0f;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:848:13: style: The scope of the variable 'scale_skin' can be reduced. [variableScope]
      float scale_skin[2] = {1.0f, 1.0f};
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:849:13: style: The scope of the variable 'scale_be_weight' can be reduced. [variableScope]
      float scale_be_weight = 1.0f;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_buttons.c:850:13: style: The scope of the variable 'scale_crease' can be reduced. [variableScope]
      float scale_crease = 1.0f;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_fly.c:741:9: style: The scope of the variable 'mat' can be reduced. [variableScope]
  float mat[3][3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_fly.c:743:9: style: The scope of the variable 'dvec' can be reduced. [variableScope]
  float dvec[3] = {0, 0, 0};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_fly.c:746:9: style: The scope of the variable 'moffset' can be reduced. [variableScope]
  float moffset[2];  /* mouse offset from the views center */
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_fly.c:747:9: style: The scope of the variable 'tmp_quat' can be reduced. [variableScope]
  float tmp_quat[4]; /* used for rotating the view */
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_draw.c:1360:15: style: The scope of the variable 'msg_pin' can be reduced. [variableScope]
  const char *msg_pin = " (Pinned)";
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_draw.c:1361:15: style: The scope of the variable 'msg_sep' can be reduced. [variableScope]
  const char *msg_sep = " : ";
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_draw.c:2334:15: style: Variable 'depth' is assigned a value that is never used. [unreadVariable]
  float depth = FLT_MAX;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_edit.c:3602:18: style: The scope of the variable 'vb' can be reduced. [variableScope]
  float dvec[3], vb[2], xscale, yscale;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_edit.c:3602:25: style: The scope of the variable 'xscale' can be reduced. [variableScope]
  float dvec[3], vb[2], xscale, yscale;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_edit.c:3602:33: style: The scope of the variable 'yscale' can be reduced. [variableScope]
  float dvec[3], vb[2], xscale, yscale;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_draw.c:1076:9: style: The scope of the variable 'end' can be reduced. [variableScope]
  float end[3]; /* endpoints for drawing */
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_navigate_type.c:452:14: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (select == false) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_navigate_type.c:446:14: note: First condition
  if (select == false) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_navigate_type.c:452:14: note: Second condition
  if (select == false) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_preselect_type.c:178:15: style: Variable 'best.ob' is assigned a value that is never used. [unreadVariable]
      best.ob = base->object;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_preselect_type.c:345:13: style: Variable 'best.ob' is assigned a value that is never used. [unreadVariable]
    best.ob = gz_ring->bases[base_index]->object;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_ruler.c:1007:27: warning: Either the condition 'if(gz)' is redundant or there is possible null pointer dereference: gz. [nullPointerRedundantCheck]
  wmGizmoGroup *gzgroup = gz->parent_gzgroup;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_ruler.c:1021:6: note: Assuming that condition 'if(gz)' is not redundant
  if (gz) {
     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_ruler.c:1007:27: note: Null pointer dereference
  wmGizmoGroup *gzgroup = gz->parent_gzgroup;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_ruler.c:329:13: style: The scope of the variable 'ray_start' can be reduced. [variableScope]
      float ray_start[3];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_ruler.c:432:15: style: The scope of the variable 'ruler_name' can be reduced. [variableScope]
  const char *ruler_name = RULER_ID;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_ruler.c:224:19: style: Variable 'dist_best' is assigned a value that is never used. [unreadVariable]
        dist_best = dist;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_gizmo_ruler.c:245:19: style: Variable 'dist_best' is assigned a value that is never used. [unreadVariable]
        dist_best = dist;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_edit.c:1129:9: style: The scope of the variable 'view_inv' can be reduced. [variableScope]
  float view_inv[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_edit.c:1330:11: style: The scope of the variable 'rotation' can be reduced. [variableScope]
    float rotation[4];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_snap.c:79:14: style: The scope of the variable 'tv' can be reduced. [variableScope]
  TransVert *tv;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_snap.c:80:28: style: The scope of the variable 'bmat' can be reduced. [variableScope]
  float gridf, imat[3][3], bmat[3][3], vec[3];
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_snap.c:81:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_snap.c:323:14: style: The scope of the variable 'tv' can be reduced. [variableScope]
  TransVert *tv;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_snap.c:324:21: style: The scope of the variable 'bmat' can be reduced. [variableScope]
  float imat[3][3], bmat[3][3];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_snap.c:325:9: style: The scope of the variable 'center_global' can be reduced. [variableScope]
  float center_global[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_snap.c:327:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_snap.c:764:14: style: The scope of the variable 'tv' can be reduced. [variableScope]
  TransVert *tv;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_snap.c:765:9: style: The scope of the variable 'bmat' can be reduced. [variableScope]
  float bmat[3][3], vec[3], min[3], max[3], centroid[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_utils.c:1559:23: warning: Either the condition 'if(vd&&vd->depths&&x>0&&y>0&&x<vd->w&&y<vd->h)' is redundant or there is possible null pointer dereference: vd. [nullPointerRedundantCheck]
    BLI_assert(1.0 <= vd->depth_range[1]);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_utils.c:1555:6: note: Assuming that condition 'if(vd&&vd->depths&&x>0&&y>0&&x<vd->w&&y<vd->h)' is not redundant
  if (vd && vd->depths && x > 0 && y > 0 && x < vd->w && y < vd->h) {
     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_utils.c:1550:28: note: Assignment 'vd=vc->rv3d->depths', assigned value is 0
  ViewDepths *vd = vc->rv3d->depths;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_utils.c:1559:23: note: Null pointer dereference
    BLI_assert(1.0 <= vd->depth_range[1]);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_utils.c:322:21: style: The scope of the variable 'fl' can be reduced. [variableScope]
  int a, flag = -1, fl;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1022:9: style: Condition 'is_pick_select' is always true [knownConditionTrueFalse]
    if (is_pick_select && select_mode == VIEW3D_SELECT_PICK_NEAREST) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1021:7: note: Assuming that condition 'is_pick_select' is not redundant
  if (is_pick_select) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1022:9: note: Condition 'is_pick_select' is always true
    if (is_pick_select && select_mode == VIEW3D_SELECT_PICK_NEAREST) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1025:14: style: Condition 'is_pick_select' is always true [knownConditionTrueFalse]
    else if (is_pick_select && select_mode == VIEW3D_SELECT_PICK_ALL) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1021:7: note: Assuming that condition 'is_pick_select' is not redundant
  if (is_pick_select) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1025:14: note: Condition 'is_pick_select' is always true
    else if (is_pick_select && select_mode == VIEW3D_SELECT_PICK_ALL) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1681:26: style: Condition 'do_reset' is always false [knownConditionTrueFalse]
  else if (reset_all && (do_reset || (local_view_bit != ~(0)))) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1678:7: note: Assuming that condition 'do_reset' is not redundant
  if (do_reset) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1681:26: note: Condition 'do_reset' is always false
  else if (reset_all && (do_reset || (local_view_bit != ~(0)))) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:322:15: style: The scope of the variable 'step_inv' can be reduced. [variableScope]
  float step, step_inv;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1244:25: style: The scope of the variable 'box' can be reduced. [variableScope]
  float min[3], max[3], box[3];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_view.c:1307:12: style: The scope of the variable 'ok_dist' can be reduced. [variableScope]
      bool ok_dist = true;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_walk.c:972:9: style: The scope of the variable 'mat' can be reduced. [variableScope]
  float mat[3][3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_walk.c:974:9: style: The scope of the variable 'dvec' can be reduced. [variableScope]
  float dvec[3] = {0.0f, 0.0f, 0.0f};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_walk.c:976:7: style: The scope of the variable 'moffset' can be reduced. [variableScope]
  int moffset[2];    /* mouse offset from the views center */
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_walk.c:977:9: style: The scope of the variable 'tmp_quat' can be reduced. [variableScope]
  float tmp_quat[4]; /* used for rotating the view */
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_walk.c:1208:14: style: The scope of the variable 'ret' can be reduced. [variableScope]
        bool ret;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_walk.c:1209:29: style: The scope of the variable 'difference' can be reduced. [variableScope]
        float ray_distance, difference = -100.0f;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:1158:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (use_zbuf) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:1149:7: note: First condition
  if (use_zbuf) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:1158:7: note: Second condition
  if (use_zbuf) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:3584:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (use_zbuf) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:3578:7: note: First condition
  if (use_zbuf) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:3584:7: note: Second condition
  if (use_zbuf) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:1550:8: style: The scope of the variable 'ok' can be reduced. [variableScope]
  bool ok;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:1757:14: style: The scope of the variable 'last_mval' can be reduced. [variableScope]
  static int last_mval[2] = {-100, -100};
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:1809:21: style: The scope of the variable 'notcol' can be reduced. [variableScope]
    int selcol = 0, notcol = 0;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:1985:7: style: The scope of the variable 'hits' can be reduced. [variableScope]
  int hits;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:2089:20: style: The scope of the variable 'hitresult' can be reduced. [variableScope]
            int i, hitresult;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\space_view3d\view3d_select.c:2296:10: style: The scope of the variable 'mv' can be reduced. [variableScope]
  MVert *mv;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_constraints.c:203:9: style: The scope of the variable 'norm' can be reduced. [variableScope]
  float norm[3], vec[3], factor, angle;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform.c:2202:17: error: Null pointer dereference: em [nullPointer]
            if (em->bm->totvertsel == em->bm->totvert) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform.c:2194:28: note: Assignment 'em=NULL', assigned value is 0
          BMEditMesh *em = NULL;  // BKE_editmesh_from_object(t->obedit);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform.c:2202:17: note: Null pointer dereference
            if (em->bm->totvertsel == em->bm->totvert) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform.c:775:10: style: Redundant initialization for 'keymap'. The initialized value is overwritten before it is read. [redundantInitialization]
  keymap = WM_modalkeymap_ensure(keyconf, "Transform Modal Map", modal_items);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform.c:773:20: note: keymap is initialized
  wmKeyMap *keymap = WM_modalkeymap_find(keyconf, "Transform Modal Map");
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform.c:775:10: note: keymap is overwritten
  keymap = WM_modalkeymap_ensure(keyconf, "Transform Modal Map", modal_items);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform.c:1823:10: style: The scope of the variable 'constraint_axis' can be reduced. [variableScope]
    bool constraint_axis[3] = {false, false, false};
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:1154:62: warning: Either the condition '(prevbezt)?prevbezt->ipo:bezt->ipo' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
  for (i = 0; i < totvert; i++, bezm++, prevbezt = bezt, bezt++) {
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:1160:29: note: Assuming that condition '(prevbezt)?prevbezt->ipo:bezt->ipo' is not redundant
    bezm->pipo = (prevbezt) ? prevbezt->ipo : bezt->ipo;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:1154:52: note: Assignment from 'bezt'
  for (i = 0; i < totvert; i++, bezm++, prevbezt = bezt, bezt++) {
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:1154:62: note: Null pointer addition
  for (i = 0; i < totvert; i++, bezm++, prevbezt = bezt, bezt++) {
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:347:25: style: The scope of the variable 'data' can be reduced. [variableScope]
  bKinematicConstraint *data;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:395:30: style: The scope of the variable 'qrmat' can be reduced. [variableScope]
          float rmat3[3][3], qrmat[3][3], imat3[3][3], smat[3][3];
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:395:43: style: The scope of the variable 'imat3' can be reduced. [variableScope]
          float rmat3[3][3], qrmat[3][3], imat3[3][3], smat[3][3];
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:395:56: style: The scope of the variable 'smat' can be reduced. [variableScope]
          float rmat3[3][3], qrmat[3][3], imat3[3][3], smat[3][3];
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:1170:12: style: The scope of the variable 'bezm' can be reduced. [variableScope]
  BeztMap *bezm;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:1171:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, ok = 1;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:1217:16: style: The scope of the variable 'td2d' can be reduced. [variableScope]
  TransData2D *td2d;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:1218:14: style: The scope of the variable 'td' can be reduced. [variableScope]
  TransData *td;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_armature.c:65:9: style: The scope of the variable 'cmat' can be reduced. [variableScope]
  float cmat[3][3], tmat[3][3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_armature.c:65:21: style: The scope of the variable 'tmat' can be reduced. [variableScope]
  float cmat[3][3], tmat[3][3];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_armature.c:685:9: style: The scope of the variable 'pid_index' can be reduced. [variableScope]
    int pid_index = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_armature.c:880:21: style: The scope of the variable 'td_old' can be reduced. [variableScope]
    TransData *td, *td_old;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert.c:1816:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = t->scene;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_gpencil.c:222:13: style: Condition '!is_multiedit' is always true [knownConditionTrueFalse]
        if (!is_multiedit) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_gpencil.c:216:39: note: Assuming that condition '!is_multiedit' is not redundant
      if ((gpf->framenum != cfra) && (!is_multiedit)) {
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_gpencil.c:222:13: note: Condition '!is_multiedit' is always true
        if (!is_multiedit) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mask.c:254:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        td++;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mask.c:255:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        td2d++;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mask.c:256:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        tdm++;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mask.c:209:9: style: Variable 'td' is assigned a value that is never used. [unreadVariable]
      td++;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mask.c:210:11: style: Variable 'td2d' is assigned a value that is never used. [unreadVariable]
      td2d++;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mask.c:211:10: style: Variable 'tdm' is assigned a value that is never used. [unreadVariable]
      tdm++;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mask.c:254:11: style: Variable 'td' is assigned a value that is never used. [unreadVariable]
        td++;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mask.c:255:13: style: Variable 'td2d' is assigned a value that is never used. [unreadVariable]
        td2d++;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mask.c:256:12: style: Variable 'tdm' is assigned a value that is never used. [unreadVariable]
        tdm++;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_nla.c:48:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = t->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_object.c:545:20: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (t->options & CTX_OBMODE_XFORM_OBDATA) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_object.c:533:20: note: First condition
    if (t->options & CTX_OBMODE_XFORM_OBDATA) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_object.c:545:20: note: Second condition
    if (t->options & CTX_OBMODE_XFORM_OBDATA) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_object.c:152:11: style: The scope of the variable 'rot' can be reduced. [variableScope]
    float rot[3][3], scale[3];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_object.c:152:22: style: The scope of the variable 'scale' can be reduced. [variableScope]
    float rot[3][3], scale[3];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mesh.c:528:20: style: The scope of the variable 'mirror_data_iter' can be reduced. [variableScope]
  TransDataMirror *mirror_data_iter, *mirror_data = NULL;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mesh.c:849:28: style: The scope of the variable 'qmat' can be reduced. [variableScope]
          float mat[3][3], qmat[3][3], imat[3][3];
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_mesh.c:1042:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_particle.c:58:15: style: The scope of the variable 'transformparticle' can be reduced. [variableScope]
    int i, k, transformparticle;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_tracking.c:88:20: warning: Possible null pointer dereference: rel [nullPointer]
    td2d->loc[0] = rel[0] * aspect[0]; /* hold original location */
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_tracking.c:169:76: note: Calling function 'markerToTransDataInit', 8th argument 'NULL' value is 0
        td++, td2d++, tdt++, track, marker, TRACK_AREA_POINT, marker->pos, NULL, NULL, aspect);
                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_tracking.c:88:20: note: Null pointer dereference
    td2d->loc[0] = rel[0] * aspect[0]; /* hold original location */
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_tracking.c:89:20: warning: Possible null pointer dereference: rel [nullPointer]
    td2d->loc[1] = rel[1] * aspect[1];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_tracking.c:169:76: note: Calling function 'markerToTransDataInit', 8th argument 'NULL' value is 0
        td++, td2d++, tdt++, track, marker, TRACK_AREA_POINT, marker->pos, NULL, NULL, aspect);
                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_tracking.c:89:20: note: Null pointer dereference
    td2d->loc[1] = rel[1] * aspect[1];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_tracking.c:580:28: style: The scope of the variable 'marker' can be reduced. [variableScope]
      MovieTrackingMarker *marker, *prev_marker;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_sequencer.c:555:19: style: The scope of the variable 'seq_user' can be reduced. [variableScope]
        Sequence *seq_user;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_tracking.c:580:37: style: The scope of the variable 'prev_marker' can be reduced. [variableScope]
      MovieTrackingMarker *marker, *prev_marker;
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_sequencer.c:631:10: style: The scope of the variable 'new_frame' can be reduced. [variableScope]
  int a, new_frame;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_sequencer.c:57:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = t->scene;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_convert_sequencer.c:527:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = t->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_gizmo_extrude_3d.c:350:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (has_redo) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_gizmo_extrude_3d.c:338:7: note: First condition
  if (has_redo) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_gizmo_extrude_3d.c:350:7: note: Second condition
  if (has_redo) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_input.c:152:10: style: The scope of the variable 'length' can be reduced. [variableScope]
  double length;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_input.c:153:10: style: The scope of the variable 'distance' can be reduced. [variableScope]
  double distance;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_input.c:154:10: style: The scope of the variable 'dx' can be reduced. [variableScope]
  double dx, dy;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_input.c:154:14: style: The scope of the variable 'dy' can be reduced. [variableScope]
  double dx, dy;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode.c:412:25: style: The scope of the variable 'size_abs' can be reduced. [variableScope]
    float size_sign[3], size_abs[3];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode.c:413:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode.c:893:21: style: The scope of the variable 'smat' can be reduced. [variableScope]
  float tmat[3][3], smat[3][3], center[3];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode.c:524:9: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
    ofs += BLI_snprintf(
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode.c:863:9: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
    ofs += BLI_snprintf(
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:364:7: style: The scope of the variable 'filter' can be reduced. [variableScope]
  int filter;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:492:11: style: The scope of the variable 'pExceeded' can be reduced. [variableScope]
    short pExceeded, nExceeded, iter;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:492:22: style: The scope of the variable 'nExceeded' can be reduced. [variableScope]
    short pExceeded, nExceeded, iter;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:874:13: style: The scope of the variable 'i' can be reduced. [variableScope]
        int i;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:927:21: style: The scope of the variable 'vec' can be reduced. [variableScope]
              float vec[3], up_axis[3];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:927:29: style: The scope of the variable 'up_axis' can be reduced. [variableScope]
              float vec[3], up_axis[3];
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:928:21: style: The scope of the variable 'qrot' can be reduced. [variableScope]
              float qrot[4];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:929:21: style: The scope of the variable 'roll' can be reduced. [variableScope]
              float roll;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:1224:9: style: The scope of the variable 'v1' can be reduced. [variableScope]
  float v1[3], v2[3], v3[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:1224:16: style: The scope of the variable 'v2' can be reduced. [variableScope]
  float v1[3], v2[3], v3[3];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:1224:23: style: The scope of the variable 'v3' can be reduced. [variableScope]
  float v1[3], v2[3], v3[3];
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:1225:25: style: The scope of the variable 'col2' can be reduced. [variableScope]
  unsigned char col[3], col2[3];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_generics.c:2300:9: style: The scope of the variable 'dist' can be reduced. [variableScope]
  float dist;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_gizmo_3d.c:360:25: warning: Possible null pointer dereference: idot [nullPointer]
      float idot_axis = idot[axis_idx_norm];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_gizmo_3d.c:1443:36: note: Calling function 'gizmo_get_axis_color', 2nd argument 'NULL' value is 0
    gizmo_get_axis_color(axis_idx, NULL, color, color);
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_gizmo_3d.c:360:25: note: Null pointer dereference
      float idot_axis = idot[axis_idx_norm];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_gizmo_3d.c:1077:21: style: The scope of the variable 'ek' can be reduced. [variableScope]
    PTCacheEditKey *ek;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_gizmo_3d.c:1078:9: style: The scope of the variable 'k' can be reduced. [variableScope]
    int k;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_gizmo_3d.c:1684:20: style: The scope of the variable 'prop' can be reduced. [variableScope]
      PropertyRNA *prop;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_edge_seq_slide.c:71:7: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
  ofs += BLI_snprintf(str + ofs,
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_maskshrinkfatten.c:99:13: style: Redundant initialization for 'td'. The initialized value is overwritten before it is read. [redundantInitialization]
    for (td = tc->data, i = 0; i < tc->data_len; i++, td++) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_maskshrinkfatten.c:98:19: note: td is initialized
    TransData *td = tc->data;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_maskshrinkfatten.c:99:13: note: td is overwritten
    for (td = tc->data, i = 0; i < tc->data_len; i++, td++) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_mirror.c:50:8: style: The scope of the variable 'str' can be reduced. [variableScope]
  char str[UI_MAX_DRAW_STR];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_edge_slide.c:382:11: style: The scope of the variable 'l_nr' can be reduced. [variableScope]
      int l_nr;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_edge_slide.c:489:11: style: The scope of the variable 'dist_sq' can be reduced. [variableScope]
    float dist_sq = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_edge_slide.c:534:15: style: The scope of the variable 'i' can be reduced. [variableScope]
  int numsel, i, loop_nr;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_edge_slide.c:1426:18: style: The scope of the variable 'sld' can be reduced. [variableScope]
  EdgeSlideData *sld;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_edge_slide.c:489:19: style: Variable 'dist_sq' is assigned a value that is never used. [unreadVariable]
    float dist_sq = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_edge_slide.c:902:9: style: Variable 'v3d' is assigned a value that is never used. [unreadVariable]
    v3d = t->sa ? t->sa->spacedata.first : NULL;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_edge_slide.c:967:13: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
          j += 1;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_edge_slide.c:1411:7: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
  ofs += BLI_snprintf(
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_timescale.c:66:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = t->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_skin_resize.c:74:25: style: The scope of the variable 'smat' can be reduced. [variableScope]
      float tmat[3][3], smat[3][3];
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_timeslide.c:185:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = t->scene;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_timetranslate.c:85:9: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
    ofs += BLI_snprintf(
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_trackball.c:128:9: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
    ofs += BLI_snprintf(
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_translate.c:189:9: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
    ofs += BLI_snprintf(
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_translate.c:205:11: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
      ofs += BLI_snprintf(str,
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_vert_slide.c:132:9: style: The scope of the variable 'dist_sq' can be reduced. [variableScope]
  float dist_sq = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_vert_slide.c:132:17: style: Variable 'dist_sq' is assigned a value that is never used. [unreadVariable]
  float dist_sq = 0.0f;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_mode_vert_slide.c:596:7: style: Variable 'ofs' is assigned a value that is never used. [unreadVariable]
  ofs += BLI_snprintf(
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_orientations.c:412:8: style: The scope of the variable 'do_next' can be reduced. [variableScope]
  bool do_next;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_orientations.c:845:11: style: The scope of the variable 'a' can be reduced. [variableScope]
      int a;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_orientations.c:1065:11: style: The scope of the variable 'imat' can be reduced. [variableScope]
    float imat[3][3], mat[3][3];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_orientations.c:1065:23: style: The scope of the variable 'mat' can be reduced. [variableScope]
    float imat[3][3], mat[3][3];
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\util\ed_transverts.c:303:13: style: Variable 'tv' is assigned a value that is never used. [unreadVariable]
          tv++;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_ops.c:326:12: style: The scope of the variable 'mesh_select_mode' can be reduced. [variableScope]
      bool mesh_select_mode[3];
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap.c:1279:17: style: Redundant initialization for 'td'. The initialized value is overwritten before it is read. [redundantInitialization]
        for (td = tc->data, i = 0; i < tc->data_len && td->flag & TD_SELECTED; i++, td++) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap.c:1278:23: note: td is initialized
        TransData *td = tc->data;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap.c:1279:17: note: td is overwritten
        for (td = tc->data, i = 0; i < tc->data_len && td->flag & TD_SELECTED; i++, td++) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap.c:352:24: style: The scope of the variable 'loc' can be reduced. [variableScope]
        float iloc[3], loc[3], no[3];
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap.c:352:32: style: The scope of the variable 'no' can be reduced. [variableScope]
        float iloc[3], loc[3], no[3];
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\util\numinput.c:206:9: style: The scope of the variable 'i' can be reduced. [variableScope]
  short i, j;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\util\numinput.c:207:9: style: The scope of the variable 'val' can be reduced. [variableScope]
  float val;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_buttons.c:139:17: style: The scope of the variable 'step' can be reduced. [variableScope]
  int imx, imy, step, digits;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_buttons.c:139:23: style: The scope of the variable 'digits' can be reduced. [variableScope]
  int imx, imy, step, digits;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_draw.c:307:27: style: The scope of the variable 'col3' can be reduced. [variableScope]
  float col1[4], col2[4], col3[4], transparent[4] = {0.0f, 0.0f, 0.0f, 0.0f};
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_draw.c:307:36: style: The scope of the variable 'transparent' can be reduced. [variableScope]
  float col1[4], col2[4], col3[4], transparent[4] = {0.0f, 0.0f, 0.0f, 0.0f};
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1522:7: warning: Either the condition 'sod!=NULL' is redundant or there is possible null pointer dereference: sod. [nullPointerRedundantCheck]
  if (sod->type == SNAP_MESH) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1520:18: note: Assuming that condition 'sod!=NULL' is not redundant
  BLI_assert(sod != NULL);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1518:48: note: Assignment 'sod=snap_object_data_lookup(sctx,ob)', assigned value is 0
  SnapObjectData *sod = snap_object_data_lookup(sctx, ob);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1522:7: note: Null pointer dereference
  if (sod->type == SNAP_MESH) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1647:9: warning: Either the condition 'sod!=NULL' is redundant or there is possible null pointer dereference: sod. [nullPointerRedundantCheck]
    if (sod->type == SNAP_MESH) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1641:18: note: Assuming that condition 'sod!=NULL' is not redundant
  BLI_assert(sod != NULL);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1639:48: note: Assignment 'sod=snap_object_data_lookup(sctx,ob)', assigned value is 0
  SnapObjectData *sod = snap_object_data_lookup(sctx, ob);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1647:9: note: Null pointer dereference
    if (sod->type == SNAP_MESH) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:267:22: style: The scope of the variable 'init_min_max' can be reduced. [variableScope]
  bool init = false, init_min_max = true, clear_cache = false;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1740:13: style: The scope of the variable 'v_near' can be reduced. [variableScope]
      float v_near[3], va_g[3], vb_g[3];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:2193:13: style: The scope of the variable 'reconstructed_camera_mat' can be reduced. [variableScope]
      float reconstructed_camera_mat[4][4], reconstructed_camera_imat[4][4];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:2529:11: style: The scope of the variable 'verts_num_active' can be reduced. [variableScope]
      int verts_num_active = -1;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:2556:11: style: The scope of the variable 'edges_num_active' can be reduced. [variableScope]
      int edges_num_active = -1;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1646:36: style: Variable 'nearest2d.use_backface_culling' is assigned a value that is never used. [unreadVariable]
    nearest2d.use_backface_culling = use_backface_culling;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1649:29: style: Variable 'nearest2d.get_vert_co' is assigned a value that is never used. [unreadVariable]
      nearest2d.get_vert_co = (Nearest2DGetVertCoCallback)cb_mvert_co_get;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1650:38: style: Variable 'nearest2d.get_edge_verts_index' is assigned a value that is never used. [unreadVariable]
      nearest2d.get_edge_verts_index = (Nearest2DGetEdgeVertsCallback)cb_medge_verts_get;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1651:30: style: Variable 'nearest2d.copy_vert_no' is assigned a value that is never used. [unreadVariable]
      nearest2d.copy_vert_no = (Nearest2DCopyVertNoCallback)cb_mvert_no_copy;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1656:29: style: Variable 'nearest2d.get_vert_co' is assigned a value that is never used. [unreadVariable]
      nearest2d.get_vert_co = (Nearest2DGetVertCoCallback)cb_bvert_co_get;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1657:38: style: Variable 'nearest2d.get_edge_verts_index' is assigned a value that is never used. [unreadVariable]
      nearest2d.get_edge_verts_index = (Nearest2DGetEdgeVertsCallback)cb_bedge_verts_get;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:1658:30: style: Variable 'nearest2d.copy_vert_no' is assigned a value that is never used. [unreadVariable]
      nearest2d.copy_vert_no = (Nearest2DCopyVertNoCallback)cb_bvert_no_copy;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:2529:28: style: Variable 'verts_num_active' is assigned a value that is never used. [unreadVariable]
      int verts_num_active = -1;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\transform\transform_snap_object.c:2556:28: style: Variable 'edges_num_active' is assigned a value that is never used. [unreadVariable]
      int edges_num_active = -1;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_unwrap_ops.c:277:11: style: The scope of the variable 'eed' can be reduced. [variableScope]
  BMEdge *eed;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_unwrap_ops.c:479:30: style: The scope of the variable 'initialDerived' can be reduced. [variableScope]
  DerivedMesh *derivedMesh, *initialDerived;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_unwrap_ops.c:723:10: style: The scope of the variable 'str' can be reduced. [variableScope]
    char str[UI_MAX_DRAW_STR];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_unwrap_ops.c:1503:9: style: The scope of the variable 'dx' can be reduced. [variableScope]
  float dx, dy, min[2], max[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_unwrap_ops.c:1503:13: style: The scope of the variable 'dy' can be reduced. [variableScope]
  float dx, dy, min[2], max[2];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:565:14: warning: Possible null pointer dereference: uvfinal_map [nullPointer]
    index1 = uvfinal_map[element1 - state->element_map->buf];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1502:49: note: Calling function 'stitch_island_calculate_edge_rotation', 5th argument 'NULL' value is 0
              edge, ssc, state, final_position, NULL, island_stitch_data);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:565:14: note: Null pointer dereference
    index1 = uvfinal_map[element1 - state->element_map->buf];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:566:14: warning: Possible null pointer dereference: uvfinal_map [nullPointer]
    index2 = uvfinal_map[element2 - state->element_map->buf];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1502:49: note: Calling function 'stitch_island_calculate_edge_rotation', 5th argument 'NULL' value is 0
              edge, ssc, state, final_position, NULL, island_stitch_data);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:566:14: note: Null pointer dereference
    index2 = uvfinal_map[element2 - state->element_map->buf];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1633:18: warning: Possible null pointer dereference: state [nullPointer]
  element_iter = state->element_map->vert[BM_elem_index_get(l->v)];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2564:28: note: Assignment 'state=NULL', assigned value is 0
      StitchState *state = NULL;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2574:33: note: Calling function 'stitch_select_uv', 2nd argument 'state' value is 0
      stitch_select_uv(element, state, false);
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1633:18: note: Null pointer dereference
  element_iter = state->element_map->vert[BM_elem_index_get(l->v)];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1885:43: warning: Possible null pointer dereference: state [nullPointer]
  UvElement *element1 = BM_uv_element_get(state->element_map, l->f, l);
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2581:26: note: Assignment 'state=NULL', assigned value is 0
    StitchState *state = NULL;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2589:39: note: Calling function 'uv_edge_get', 2nd argument 'state' value is 0
    UvEdge *edge = uv_edge_get(hit.l, state);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1885:43: note: Null pointer dereference
  UvElement *element1 = BM_uv_element_get(state->element_map, l->f, l);
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1886:43: warning: Possible null pointer dereference: state [nullPointer]
  UvElement *element2 = BM_uv_element_get(state->element_map, l->f, l->next);
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2581:26: note: Assignment 'state=NULL', assigned value is 0
    StitchState *state = NULL;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2589:39: note: Calling function 'uv_edge_get', 2nd argument 'state' value is 0
    UvEdge *edge = uv_edge_get(hit.l, state);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1886:43: note: Null pointer dereference
  UvElement *element2 = BM_uv_element_get(state->element_map, l->f, l->next);
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1888:13: warning: Possible null pointer dereference: state [nullPointer]
  int uv1 = state->map[element1 - state->element_map->buf];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2581:26: note: Assignment 'state=NULL', assigned value is 0
    StitchState *state = NULL;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2589:39: note: Calling function 'uv_edge_get', 2nd argument 'state' value is 0
    UvEdge *edge = uv_edge_get(hit.l, state);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1888:13: note: Null pointer dereference
  int uv1 = state->map[element1 - state->element_map->buf];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1889:13: warning: Possible null pointer dereference: state [nullPointer]
  int uv2 = state->map[element2 - state->element_map->buf];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2581:26: note: Assignment 'state=NULL', assigned value is 0
    StitchState *state = NULL;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2589:39: note: Calling function 'uv_edge_get', 2nd argument 'state' value is 0
    UvEdge *edge = uv_edge_get(hit.l, state);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1889:13: note: Null pointer dereference
  int uv2 = state->map[element2 - state->element_map->buf];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1900:27: warning: Possible null pointer dereference: state [nullPointer]
  return BLI_ghash_lookup(state->edge_hash, &tmp_edge);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2581:26: note: Assignment 'state=NULL', assigned value is 0
    StitchState *state = NULL;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2589:39: note: Calling function 'uv_edge_get', 2nd argument 'state' value is 0
    UvEdge *edge = uv_edge_get(hit.l, state);
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1900:27: note: Null pointer dereference
  return BLI_ghash_lookup(state->edge_hash, &tmp_edge);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2573:46: warning: Possible null pointer dereference: state [nullPointer]
      UvElement *element = BM_uv_element_get(state->element_map, hit.efa, hit.l);
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2564:28: note: Assignment 'state=NULL', assigned value is 0
      StitchState *state = NULL;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2573:46: note: Null pointer dereference
      UvElement *element = BM_uv_element_get(state->element_map, hit.efa, hit.l);
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:301:8: style: The scope of the variable 'msg' can be reduced. [variableScope]
  char msg[UI_MAX_DRAW_STR];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1762:9: style: The scope of the variable 'j' can be reduced. [variableScope]
    int j, index = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1762:12: style: The scope of the variable 'index' can be reduced. [variableScope]
    int j, index = 0;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1763:18: style: The scope of the variable 'num_line' can be reduced. [variableScope]
    unsigned int num_line = 0, num_tri, tri_idx = 0, line_idx = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1763:32: style: The scope of the variable 'num_tri' can be reduced. [variableScope]
    unsigned int num_line = 0, num_tri, tri_idx = 0, line_idx = 0;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1763:41: style: The scope of the variable 'tri_idx' can be reduced. [variableScope]
    unsigned int num_line = 0, num_tri, tri_idx = 0, line_idx = 0;
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1763:54: style: The scope of the variable 'line_idx' can be reduced. [variableScope]
    unsigned int num_line = 0, num_tri, tri_idx = 0, line_idx = 0;
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:1766:23: style: The scope of the variable 'vbo_line' can be reduced. [variableScope]
    GPUVertBuf *vbo, *vbo_line;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2076:11: style: The scope of the variable 'normal' can be reduced. [variableScope]
    float normal[2];
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_smart_stitch.c:2341:14: style: Variable 'sel_idx' is assigned a value that is never used. [unreadVariable]
      sel_idx++;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:3588:22: style: Condition 'pinned' is always true [knownConditionTrueFalse]
            else if (pinned) {
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:3580:17: note: Assuming that condition '!pinned' is not redundant
            if (!pinned || (ts->uv_flag & UV_SYNC_SELECTION)) {
                ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:3588:22: note: Condition 'pinned' is always true
            else if (pinned) {
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4444:23: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    unsigned int *tri = tris[j];
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:1253:14: warning: Opposite inner 'return' condition leads to a dead code block. [oppositeInnerCondition]
      return !dir;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:1251:7: note: outer condition: dir
  if (dir) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:1253:14: note: opposite inner condition: !dir
      return !dir;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:305:14: style: The scope of the variable 'luv' can be reduced. [variableScope]
    MLoopUV *luv;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:354:14: style: The scope of the variable 'luv' can be reduced. [variableScope]
    MLoopUV *luv;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:380:14: style: The scope of the variable 'luv' can be reduced. [variableScope]
    MLoopUV *luv;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:611:12: style: The scope of the variable 'luv' can be reduced. [variableScope]
  MLoopUV *luv;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:1838:13: style: The scope of the variable 'i' can be reduced. [variableScope]
        int i;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:2326:11: style: The scope of the variable 'efa' can be reduced. [variableScope]
  BMFace *efa;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:2327:11: style: The scope of the variable 'l' can be reduced. [variableScope]
  BMLoop *l;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:2329:12: style: The scope of the variable 'luv' can be reduced. [variableScope]
  MLoopUV *luv;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:2371:11: style: The scope of the variable 'efa' can be reduced. [variableScope]
  BMFace *efa;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:2372:11: style: The scope of the variable 'l' can be reduced. [variableScope]
  BMLoop *l;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:2374:12: style: The scope of the variable 'luv' can be reduced. [variableScope]
  MLoopUV *luv;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:5084:28: style: The scope of the variable 'separated2' can be reduced. [variableScope]
      char separated1 = 0, separated2;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_ops.c:5092:15: style: The scope of the variable 'efa1' can be reduced. [variableScope]
      BMFace *efa1, *efa2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:1311:14: style: The scope of the variable 'v1' can be reduced. [variableScope]
  PVert *v, *v1, *v2;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:1311:19: style: The scope of the variable 'v2' can be reduced. [variableScope]
  PVert *v, *v1, *v2;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:1339:9: style: The scope of the variable 'angle' can be reduced. [variableScope]
  float angle;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:2483:14: style: The scope of the variable 'e1' can be reduced. [variableScope]
  PEdge *e, *e1, *e2;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:2483:19: style: The scope of the variable 'e2' can be reduced. [variableScope]
  PEdge *e, *e1, *e2;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:2594:10: style: The scope of the variable 'e' can be reduced. [variableScope]
  PEdge *e;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:2825:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:3167:18: style: The scope of the variable 'id' can be reduced. [variableScope]
  int npins = 0, id = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:3660:43: style: The scope of the variable 'len' can be reduced. [variableScope]
  float rotated, minarea, minangle, area, len;
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:3661:42: style: The scope of the variable 'mina' can be reduced. [variableScope]
  float *angles, miny, maxy, v[2], a[4], mina;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:3662:48: style: The scope of the variable 'nextidx' can be reduced. [variableScope]
  int npoints, right, i_min, i_max, i, idx[4], nextidx;
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:3663:35: style: The scope of the variable 'p4' can be reduced. [variableScope]
  PVert **points, *p1, *p2, *p3, *p4, *p1n;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:3663:40: style: The scope of the variable 'p1n' can be reduced. [variableScope]
  PVert **points, *p1, *p2, *p3, *p4, *p1n;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:3927:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:3999:15: style: The scope of the variable 'maxiter2' can be reduced. [variableScope]
  int j, it2, maxiter2, it;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4000:31: style: The scope of the variable 'nwheel' can be reduced. [variableScope]
  int nedges = chart->nedges, nwheel, gridx, gridy;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4003:36: style: The scope of the variable 'dlimit' can be reduced. [variableScope]
  float center[2], dx, dy, *nodes, dlimit, d, *oldnodesx, *oldnodesy;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4004:53: style: The scope of the variable 'moved' can be reduced. [variableScope]
  float *nodesx, *nodesy, *hedges, *vedges, climit, moved, padding;
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4578:11: style: The scope of the variable 'chart' can be reduced. [variableScope]
  PChart *chart;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4659:11: style: The scope of the variable 'chart' can be reduced. [variableScope]
  PChart *chart;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4703:11: style: The scope of the variable 'chart' can be reduced. [variableScope]
  PChart *chart;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4908:11: style: The scope of the variable 'chart' can be reduced. [variableScope]
  PChart *chart;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4920:11: style: The scope of the variable 'chart' can be reduced. [variableScope]
  PChart *chart;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:121:19: style: union member 'PEdgeUnion::nextcollapse' is never used. [unusedStructMember]
    struct PEdge *nextcollapse; /* simplification */
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4165:11: style: Variable 'totiter' is assigned a value that is never used. [unreadVariable]
  totiter = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\editors\uvedit\uvedit_parametrizer.c:4190:15: style: Variable 'totiter' is assigned a value that is never used. [unreadVariable]
      totiter += 1;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:32:20: warning: Member variable 'BlenderFileLoader::_viewplane_left' is not initialized in the constructor. [uninitMemberVar]
BlenderFileLoader::BlenderFileLoader(Render *re, ViewLayer *view_layer, Depsgraph *depsgraph)
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:32:20: warning: Member variable 'BlenderFileLoader::_viewplane_right' is not initialized in the constructor. [uninitMemberVar]
BlenderFileLoader::BlenderFileLoader(Render *re, ViewLayer *view_layer, Depsgraph *depsgraph)
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:32:20: warning: Member variable 'BlenderFileLoader::_viewplane_bottom' is not initialized in the constructor. [uninitMemberVar]
BlenderFileLoader::BlenderFileLoader(Render *re, ViewLayer *view_layer, Depsgraph *depsgraph)
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:32:20: warning: Member variable 'BlenderFileLoader::_viewplane_top' is not initialized in the constructor. [uninitMemberVar]
BlenderFileLoader::BlenderFileLoader(Render *re, ViewLayer *view_layer, Depsgraph *depsgraph)
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:32:20: warning: Member variable 'BlenderFileLoader::_z_near' is not initialized in the constructor. [uninitMemberVar]
BlenderFileLoader::BlenderFileLoader(Render *re, ViewLayer *view_layer, Depsgraph *depsgraph)
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:32:20: warning: Member variable 'BlenderFileLoader::_z_far' is not initialized in the constructor. [uninitMemberVar]
BlenderFileLoader::BlenderFileLoader(Render *re, ViewLayer *view_layer, Depsgraph *depsgraph)
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:32:20: warning: Member variable 'BlenderFileLoader::_z_offset' is not initialized in the constructor. [uninitMemberVar]
BlenderFileLoader::BlenderFileLoader(Render *re, ViewLayer *view_layer, Depsgraph *depsgraph)
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomCleaner.h:182:5: performance: Variable '_Vector' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Vector = iVector;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:48:5: performance: Variable '_Id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Id = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:54:5: performance: Variable '_Id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Id = iBrother._Id;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:55:5: performance: Variable '_Name' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Name = iBrother._Name;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:56:5: performance: Variable '_LibraryPath' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _LibraryPath = iBrother._LibraryPath;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Node.h:49:5: performance: Variable '_BBox' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _BBox = iBrother.bbox();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeTransform.h:40:5: performance: Variable '_Matrix' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Matrix = Matrix44r::identity();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Bezier.cpp:90:3: warning: Class 'BezierCurve' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
  _currentSegment = new BezierCurveSegment;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Bezier.cpp:90:3: warning: Class 'BezierCurve' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
  _currentSegment = new BezierCurveSegment;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\VecMat.h:310:28: style: Class 'Vec2' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  template<class U> inline Vec2(const Vec<U, 2> &v) : Vec<T, 2>(v)
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\VecMat.h:314:10: style: Class 'Vec2' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline Vec2(const value_type x, const value_type y = 0) : Vec<T, 2>()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\VecMat.h:414:28: style: Class 'HVec3' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  template<class U> inline HVec3(const Vec<U, 4> &v) : Vec<T, 4>(v)
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\VecMat.h:418:10: style: Class 'HVec3' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline HVec3(const value_type sx,
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\VecMat.h:515:28: style: Class 'Vec3' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  template<class U> inline Vec3(const Vec<U, 3> &v) : Vec<T, 3>(v)
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\VecMat.h:526:10: style: Class 'Vec3' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline Vec3(const value_type x, const value_type y = 0, const value_type z = 0) : Vec<T, 3>()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\VecMat.h:813:28: style: Class 'SquareMatrix' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  template<class U> inline SquareMatrix(const Matrix<U, N, N> &m) : Matrix<T, N, N>(m)
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Id.h:48:3: style: Class 'Id' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Id(id_type id)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Bezier.h:74:3: style: Class 'BezierCurve' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BezierCurve(std::vector<Vec2d> &iPoints, double error = 4.0);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\RenderMonitor.h:37:10: style: Class 'RenderMonitor' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline RenderMonitor(Render *re)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\BBox.h:50:28: style: Class 'BBox < Vec3f >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  template<class T> inline BBox(const BBox<T> &b) : _min(b.getMin()), _max(b.getMax())
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\BBox.h:50:28: style: Class 'BBox < Vec3r >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  template<class T> inline BBox(const BBox<T> &b) : _min(b.getMin()), _max(b.getMax())
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\IndexedFaceSet.h:176:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:109:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\IndexedFaceSet.h:176:16: note: Function in derived class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\IndexedFaceSet.h:179:16: style: The function 'ComputeBBox' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void ComputeBBox();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:121:16: note: Virtual function in base class
  virtual void ComputeBBox() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\IndexedFaceSet.h:179:16: note: Function in derived class
  virtual void ComputeBBox();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeGroup.h:52:15: style: The function 'destroy' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int destroy();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\BaseObject.h:46:15: note: Virtual function in base class
  virtual int destroy()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeGroup.h:52:15: note: Function in derived class
  virtual int destroy();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeGroup.h:67:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Node.h:59:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeGroup.h:67:16: note: Function in derived class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeGroup.h:70:30: style: The function 'UpdateBBox' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual const BBox<Vec3r> &UpdateBBox();
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Node.h:95:30: note: Virtual function in base class
  virtual const BBox<Vec3r> &UpdateBBox()
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeGroup.h:70:30: note: Function in derived class
  virtual const BBox<Vec3r> &UpdateBBox();
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeTransform.h:72:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeGroup.h:67:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeTransform.h:72:16: note: Function in derived class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeTransform.h:75:16: style: The function 'AddBBox' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void AddBBox(const BBox<Vec3r> &iBBox);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Node.h:80:16: note: Virtual function in base class
  virtual void AddBBox(const BBox<Vec3r> &iBox)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeTransform.h:75:16: note: Function in derived class
  virtual void AddBBox(const BBox<Vec3r> &iBBox);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeShape.h:67:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Node.h:59:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeShape.h:67:16: note: Function in derived class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:50:3: warning: Member variable 'UnaryPredicate0D::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryPredicate0D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:94:3: warning: Member variable 'BinaryPredicate0D::result' is not initialized in the constructor. [uninitMemberVar]
  BinaryPredicate0D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:224:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j, k;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:670:12: style: The scope of the variable 'vi0' can be reduced. [variableScope]
  unsigned vi0, vi1, vi2;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:670:17: style: The scope of the variable 'vi1' can be reduced. [variableScope]
  unsigned vi0, vi1, vi2;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:670:22: style: The scope of the variable 'vi2' can be reduced. [variableScope]
  unsigned vi0, vi1, vi2;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:586:20: style: Local variable 'i' shadows outer variable [shadowVariable]
      unsigned int i = 0;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:491:12: note: Shadowed declaration
  unsigned i;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:586:20: note: Shadow variable
      unsigned int i = 0;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:970:10: warning: Member variable 'ViewEdge::_Shape' is not initialized in the constructor. [uninitMemberVar]
  inline ViewEdge()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:677:11: style: Local variable 'v1' shadows outer variable [shadowVariable]
    Vec3r v1(cleanVertices[vi1], cleanVertices[vi1 + 1], cleanVertices[vi1 + 2]);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:448:9: note: Shadowed declaration
  float v1[3], v2[3], v3[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:677:11: note: Shadow variable
    Vec3r v1(cleanVertices[vi1], cleanVertices[vi1 + 1], cleanVertices[vi1 + 2]);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\TimeStamp.h:59:3: warning: Member variable 'TimeStamp::_time_stamp' is not initialized in the constructor. [uninitMemberVar]
  TimeStamp(const TimeStamp &)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:678:11: style: Local variable 'v2' shadows outer variable [shadowVariable]
    Vec3r v2(cleanVertices[vi2], cleanVertices[vi2 + 1], cleanVertices[vi2 + 2]);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:448:16: note: Shadowed declaration
  float v1[3], v2[3], v3[3];
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:678:11: note: Shadow variable
    Vec3r v2(cleanVertices[vi2], cleanVertices[vi2 + 1], cleanVertices[vi2 + 2]);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:131:3: warning: Member variable 'UnaryFunction1D_void::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D_void()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:710:13: style: Local variable 'v0' shadows outer variable [shadowVariable]
      Vec3r v0(cleanVertices[vi0], cleanVertices[vi0 + 1], cleanVertices[vi0 + 2]);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:676:11: note: Shadowed declaration
    Vec3r v0(cleanVertices[vi0], cleanVertices[vi0 + 1], cleanVertices[vi0 + 2]);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:710:13: note: Shadow variable
      Vec3r v0(cleanVertices[vi0], cleanVertices[vi0 + 1], cleanVertices[vi0 + 2]);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:136:3: warning: Member variable 'UnaryFunction1D_void::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D_void(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:711:13: style: Local variable 'v1' shadows outer variable [shadowVariable]
      Vec3r v1(cleanVertices[vi1], cleanVertices[vi1 + 1], cleanVertices[vi1 + 2]);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:677:11: note: Shadowed declaration
    Vec3r v1(cleanVertices[vi1], cleanVertices[vi1 + 1], cleanVertices[vi1 + 2]);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:711:13: note: Shadow variable
      Vec3r v1(cleanVertices[vi1], cleanVertices[vi1 + 1], cleanVertices[vi1 + 2]);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:59:3: warning: Member variable 'UnaryPredicate1D::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryPredicate1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:712:13: style: Local variable 'v2' shadows outer variable [shadowVariable]
      Vec3r v2(cleanVertices[vi2], cleanVertices[vi2 + 1], cleanVertices[vi2 + 2]);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:678:11: note: Shadowed declaration
    Vec3r v2(cleanVertices[vi2], cleanVertices[vi2 + 1], cleanVertices[vi2 + 2]);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:712:13: note: Shadow variable
      Vec3r v2(cleanVertices[vi2], cleanVertices[vi2 + 1], cleanVertices[vi2 + 2]);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:103:3: warning: Member variable 'BinaryPredicate1D::result' is not initialized in the constructor. [uninitMemberVar]
  BinaryPredicate1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:887:9: warning: Member variable 'Stroke::_sampling' is not initialized in the constructor. [uninitMemberVar]
Stroke::Stroke(InputVertexIterator iBegin, InputVertexIterator iEnd)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:887:9: warning: Member variable 'Stroke::_textureStep' is not initialized in the constructor. [uninitMemberVar]
Stroke::Stroke(InputVertexIterator iBegin, InputVertexIterator iEnd)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:887:9: warning: Member variable 'Stroke::_mediumType' is not initialized in the constructor. [uninitMemberVar]
Stroke::Stroke(InputVertexIterator iBegin, InputVertexIterator iEnd)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:887:9: warning: Member variable 'Stroke::_textureId' is not initialized in the constructor. [uninitMemberVar]
Stroke::Stroke(InputVertexIterator iBegin, InputVertexIterator iEnd)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:887:9: warning: Member variable 'Stroke::_mtex' is not initialized in the constructor. [uninitMemberVar]
Stroke::Stroke(InputVertexIterator iBegin, InputVertexIterator iEnd)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:887:9: warning: Member variable 'Stroke::_nodeTree' is not initialized in the constructor. [uninitMemberVar]
Stroke::Stroke(InputVertexIterator iBegin, InputVertexIterator iEnd)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:887:9: warning: Member variable 'Stroke::_tips' is not initialized in the constructor. [uninitMemberVar]
Stroke::Stroke(InputVertexIterator iBegin, InputVertexIterator iEnd)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:887:9: warning: Member variable 'Stroke::_rep' is not initialized in the constructor. [uninitMemberVar]
Stroke::Stroke(InputVertexIterator iBegin, InputVertexIterator iEnd)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:177:3: warning: Member variable 'ChainingIterator::result' is not initialized in the constructor. [uninitMemberVar]
  ChainingIterator(bool iRestrictToSelection = true,
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:190:3: warning: Member variable 'ChainingIterator::result' is not initialized in the constructor. [uninitMemberVar]
  ChainingIterator(const ChainingIterator &brother) : ViewEdgeIterator(brother)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:685:10: warning: Member variable 'vertex_iterator_base < Const_traits < SVertex * > >::_NextFEdge' is not initialized in the constructor. [uninitMemberVar]
  inline vertex_iterator_base() : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:685:10: warning: Member variable 'vertex_iterator_base < Const_traits < SVertex * > >::_PreviousFEdge' is not initialized in the constructor. [uninitMemberVar]
  inline vertex_iterator_base() : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:685:10: warning: Member variable 'vertex_iterator_base < Nonconst_traits < SVertex * > >::_NextFEdge' is not initialized in the constructor. [uninitMemberVar]
  inline vertex_iterator_base() : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:685:10: warning: Member variable 'vertex_iterator_base < Nonconst_traits < SVertex * > >::_PreviousFEdge' is not initialized in the constructor. [uninitMemberVar]
  inline vertex_iterator_base() : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:109:10: warning: Member variable 'edge_iterator_base < ViewVertexInternal :: edge_nonconst_traits >::_Nature' is not initialized in the constructor. [uninitMemberVar]
  inline edge_iterator_base() : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:109:10: warning: Member variable 'edge_iterator_base < ViewVertexInternal :: edge_const_traits >::_Nature' is not initialized in the constructor. [uninitMemberVar]
  inline edge_iterator_base() : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:209:24: warning: 'operator=' should check for assignment to self to avoid problems with dynamic memory. [operatorEqToSelf]
  Interface0DIterator &operator=(const Interface0DIterator &it)
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:231:13: warning: 'operator=' should check for assignment to self to avoid problems with dynamic memory. [operatorEqToSelf]
  RGBImage &operator=(const RGBImage &brother)
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:370:14: warning: 'operator=' should check for assignment to self to avoid problems with dynamic memory. [operatorEqToSelf]
  GrayImage &operator=(const GrayImage &brother)
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.h:60:5: performance: Variable 'e1' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    e1 = Vec3r(0.0, 0.0, 0.0);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.h:71:5: performance: Variable 'e1' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    e1 = iBrother.e1;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.h:72:5: performance: Variable 'e2' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    e2 = iBrother.e2;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.h:75:5: performance: Variable 'er' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    er = iBrother.er;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:591:12: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
           it++, i++) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.h:82:5: performance: Variable 'e1' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    e1 = ca.e1 + t * (cb.e1 - ca.e1);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderFileLoader.cpp:746:55: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (v = detriList.begin(); v != detriList.end(); v++) {
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.h:83:5: performance: Variable 'e2' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    e2 = ca.e2 + t * (cb.e2 - ca.e2);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.h:86:5: performance: Variable 'er' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    er = ca.er + t * (cb.er - ca.er);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:178:5: performance: Variable '_Id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Id = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:188:5: performance: Variable '_Point3D' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Point3D = iPoint3D;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:189:5: performance: Variable '_Id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Id = id;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:199:5: performance: Variable '_Id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Id = iBrother._Id;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:200:5: performance: Variable '_Point3D' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Point3D = iBrother.point3D();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:548:5: performance: Variable '_Nature' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Nature = Nature::NO_FEATURE;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:565:5: performance: Variable '_Nature' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Nature = Nature::NO_FEATURE;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1180:5: performance: Variable '_aNormal' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _aNormal = iBrother._aNormal;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1181:5: performance: Variable '_bNormal' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _bNormal = iBrother._bNormal;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1336:5: performance: Variable '_Normal' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Normal = iBrother._Normal;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1452:5: performance: Variable '_Id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Id = iBrother._Id;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1453:5: performance: Variable '_Name' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Name = iBrother._Name;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1454:5: performance: Variable '_LibraryPath' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _LibraryPath = iBrother._LibraryPath;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1455:5: performance: Variable '_BBox' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _BBox = iBrother.bbox();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:516:5: performance: Variable '_FrontEdgeA' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _FrontEdgeA = iBrother._FrontEdgeA;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:517:5: performance: Variable '_FrontEdgeB' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _FrontEdgeB = iBrother._FrontEdgeB;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:518:5: performance: Variable '_BackEdgeA' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _BackEdgeA = iBrother._BackEdgeA;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:519:5: performance: Variable '_BackEdgeB' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _BackEdgeB = iBrother._BackEdgeB;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:520:5: performance: Variable '_sortedEdges' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _sortedEdges = iBrother._sortedEdges;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1039:5: performance: Variable '_Nature' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Nature = iBrother._Nature;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1041:5: performance: Variable '_Id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Id = iBrother._Id;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:367:5: performance: Variable '_id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _id = Id(idFirst, idSecond);
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:406:5: performance: Variable '_Id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Id = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:414:5: performance: Variable '_Id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Id = id;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:422:5: performance: Variable '_Vertices' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Vertices = iBrother._Vertices;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:423:5: performance: Variable '_Id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Id = iBrother._Id;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:113:5: performance: Variable '_tbegin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _tbegin = begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:114:5: performance: Variable '_tend' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _tend = end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:115:5: performance: Variable '_tvertex_iter' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _tvertex_iter = iter;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:123:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:124:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:125:5: performance: Variable '_nontvertex_iter' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _nontvertex_iter = iter;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:64:5: performance: Variable '_internalIterator' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _internalIterator = iVertex->edgesBegin();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:72:5: performance: Variable '_internalIterator' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _internalIterator = iBrother._internalIterator;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:58:5: performance: Variable '_it' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _it = vi._it;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:59:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = vi._begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:60:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = vi._end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:67:5: performance: Variable '_it' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _it = it;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:68:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:69:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:68:5: performance: Variable '__A' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    __A = iBrother.__A;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:69:5: performance: Variable '__B' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    __B = iBrother.__B;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:70:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = iBrother._begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:71:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = iBrother._end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:75:5: performance: Variable '_Point' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Point = iBrother._Point;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:114:5: performance: Variable '__A' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    __A = iA;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:115:5: performance: Variable '__B' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    __B = iB;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:116:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = ibegin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:117:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = iend;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:692:5: performance: Variable '_SVertex' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _SVertex = iBrother._SVertex;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:700:5: performance: Variable '_SVertex' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _SVertex = iBrother._SVertex;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:710:5: performance: Variable '_SVertex' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _SVertex = iVertex;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:555:5: performance: Variable '_FEdge' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _FEdge = iBrother._FEdge;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:556:5: performance: Variable '_first' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _first = iBrother._first;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:557:5: performance: Variable '_FEdgeB' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _FEdgeB = iBrother._FEdgeB;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:563:5: performance: Variable '_FEdge' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _FEdge = iBrother._FEdge;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:564:5: performance: Variable '_first' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _first = iBrother._first;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:565:5: performance: Variable '_FEdgeB' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _FEdgeB = iBrother._FEdgeB;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:572:5: performance: Variable '_FEdge' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _FEdge = iEdge;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:573:5: performance: Variable '_first' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _first = iEdge;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:574:5: performance: Variable '_FEdgeB' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _FEdgeB = iFEdgeB;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:391:5: performance: Variable '_first' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _first = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:397:5: performance: Variable '_ViewEdge' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _ViewEdge = iBrother._ViewEdge;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:398:5: performance: Variable '_first' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _first = iBrother._first;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:405:5: performance: Variable '_ViewEdge' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _ViewEdge = iBrother._ViewEdge;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:406:5: performance: Variable '_first' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _first = iBrother._first;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:414:5: performance: Variable '_ViewEdge' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _ViewEdge = iEdge;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:415:5: performance: Variable '_first' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _first = iEdge;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:190:5: performance: Variable '_tbegin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _tbegin = begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:191:5: performance: Variable '_tend' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _tend = end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:192:5: performance: Variable '_tvertex_iter' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _tvertex_iter = iter;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:201:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:202:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:203:5: performance: Variable '_nontvertex_iter' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _nontvertex_iter = iter;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:166:3: style: Class 'ReadCompleteViewMapPixelF0D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ReadCompleteViewMapPixelF0D(int level) : UnaryFunction0D<float>()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:193:3: style: Class 'GetViewMapGradientNormF0D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  GetViewMapGradientNormF0D(int level) : UnaryFunction0D<float>()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:769:10: style: Class 'NonTVertex' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline NonTVertex(SVertex *iSVertex) : ViewVertex(Nature::NON_T_VERTEX)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1429:10: style: Class 'ViewShape' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline ViewShape(SShape *iSShape)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:136:3: style: Class 'UnaryFunction1D_void' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  UnaryFunction1D_void(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:192:3: style: Class 'GetXF1D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  GetXF1D(IntegrationType iType) : UnaryFunction1D<double>(iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:102:3: style: Class 'LocalAverageDepthF1D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  LocalAverageDepthF1D(real sigma, IntegrationType iType = MEAN)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:145:3: style: Class 'GetCompleteViewMapDensityF1D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  GetCompleteViewMapDensityF1D(unsigned level, IntegrationType iType = MEAN, float sampling = 2.0f)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:229:3: style: Class 'GetSteerableViewMapDensityF1D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  GetSteerableViewMapDensityF1D(int level, IntegrationType iType = MEAN, float sampling = 2.0f)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:272:3: style: Class 'GetViewMapGradientNormF1D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  GetViewMapGradientNormF1D(int level, IntegrationType iType = MEAN, float sampling = 2.0f)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:301:3: style: Class 'EqualToTimeStampUP1D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  EqualToTimeStampUP1D(unsigned ts) : UnaryPredicate1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:327:3: style: Class 'EqualToChainingTimeStampUP1D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  EqualToChainingTimeStampUP1D(unsigned ts) : UnaryPredicate1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:365:3: style: Class 'ShapeUP1D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ShapeUP1D(unsigned idFirst, unsigned idSecond = 0) : UnaryPredicate1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:555:3: style: Class 'ViewMapGradientNormBP1D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ViewMapGradientNormBP1D(int level, IntegrationType iType = MEAN, float sampling = 2.0)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:411:3: style: Class 'Curve' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Curve(const Id &id)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:348:3: style: Class 'StrokeVertex' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  StrokeVertex(SVertex *iSVertex);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:351:3: style: Class 'StrokeVertex' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  StrokeVertex(CurvePoint *iPoint);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.h:50:3: style: Class 'Chain' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Chain(const Id &id) : Curve(id)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:82:10: style: Class 'orientedViewEdgeIterator' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline orientedViewEdgeIterator(Nature::VertexNature iNature)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:58:3: style: Class 'AdjacencyIterator' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AdjacencyIterator(ViewVertex *iVertex,
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:697:10: style: Class 'vertex_iterator_base < Const_traits < SVertex * > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline vertex_iterator_base(const vertex_iterator_base<Nonconst_traits<SVertex *>> &iBrother)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:689:10: style: Class 'vertex_iterator_base < Nonconst_traits < SVertex * > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline vertex_iterator_base(const vertex_iterator_base<Const_traits<SVertex *>> &iBrother)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:560:10: style: Class 'fedge_iterator_base < Nonconst_traits < FEdge * > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline fedge_iterator_base(const fedge_iterator_base<Const_traits<FEdge *>> &iBrother)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:552:10: style: Class 'fedge_iterator_base < Const_traits < FEdge * > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline fedge_iterator_base(const fedge_iterator_base<Nonconst_traits<FEdge *>> &iBrother)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:402:10: style: Class 'edge_iterator_base < Nonconst_traits < ViewEdge * > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline edge_iterator_base(const edge_iterator_base<Const_traits<ViewEdge *>> &iBrother)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:412:10: style: Class 'edge_iterator_base < Nonconst_traits < ViewEdge * > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline edge_iterator_base(value_type iEdge, bool orientation = true) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:394:10: style: Class 'edge_iterator_base < Const_traits < ViewEdge * > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline edge_iterator_base(const edge_iterator_base<Nonconst_traits<ViewEdge *>> &iBrother)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:412:10: style: Class 'edge_iterator_base < Const_traits < ViewEdge * > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline edge_iterator_base(value_type iEdge, bool orientation = true) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:113:10: style: Class 'edge_iterator_base < ViewVertexInternal :: edge_nonconst_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline edge_iterator_base(Nature::VertexNature iNature) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:118:3: style: Class 'edge_iterator_base < ViewVertexInternal :: edge_nonconst_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  edge_iterator_base(const edge_iterator_base<edge_nonconst_traits> &iBrother)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:141:3: style: Class 'edge_iterator_base < ViewVertexInternal :: edge_nonconst_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  edge_iterator_base(const edge_iterator_base<edge_const_traits> &iBrother)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:113:10: style: Class 'edge_iterator_base < ViewVertexInternal :: edge_const_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline edge_iterator_base(Nature::VertexNature iNature) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:118:3: style: Class 'edge_iterator_base < ViewVertexInternal :: edge_const_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  edge_iterator_base(const edge_iterator_base<edge_nonconst_traits> &iBrother)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapAdvancedIterators.h:141:3: style: Class 'edge_iterator_base < ViewVertexInternal :: edge_const_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  edge_iterator_base(const edge_iterator_base<edge_const_traits> &iBrother)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:136:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:41:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:136:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:148:15: style: The function 'increment' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int increment() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:46:15: note: Virtual function in base class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:148:15: note: Function in derived class
  virtual int increment() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:150:15: style: The function 'decrement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int decrement() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:52:15: note: Virtual function in base class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:150:15: note: Function in derived class
  virtual int decrement() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:152:16: style: The function 'isBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isBegin() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:58:16: note: Virtual function in base class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:152:16: note: Function in derived class
  virtual bool isBegin() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:154:16: style: The function 'isEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isEnd() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:64:16: note: Virtual function in base class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:154:16: note: Function in derived class
  virtual bool isEnd() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:219:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:41:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:219:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:276:15: style: The function 'increment' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:46:15: note: Virtual function in base class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:276:15: note: Function in derived class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:282:15: style: The function 'decrement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:52:15: note: Virtual function in base class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:282:15: note: Function in derived class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:290:16: style: The function 'isBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:58:16: note: Virtual function in base class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:290:16: note: Function in derived class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:297:16: style: The function 'isEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:64:16: note: Virtual function in base class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:297:16: note: Function in derived class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:142:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:61:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:142:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:148:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:71:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &it);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:148:7: note: Function in derived class
  int operator()(Interface0DIterator &)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:165:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:61:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:165:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:171:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:71:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &it);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates0D.h:171:7: note: Function in derived class
  int operator()(Interface0DIterator &)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:271:17: style: The function 'pixel' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float pixel(unsigned x, unsigned y) const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:134:17: note: Virtual function in base class
  virtual float pixel(unsigned x, unsigned y) const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:271:17: note: Function in derived class
  virtual float pixel(unsigned x, unsigned y) const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:287:16: style: The function 'setArray' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void setArray(float *rgb,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:155:16: note: Virtual function in base class
  virtual void setArray(float *array,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:287:16: note: Function in derived class
  virtual void setArray(float *rgb,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:310:18: style: The function 'getArray' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float *getArray()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:167:18: note: Virtual function in base class
  virtual float *getArray() = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:310:18: note: Function in derived class
  virtual float *getArray()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:390:16: style: The function 'pixel' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  inline float pixel(unsigned x, unsigned y) const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:134:17: note: Virtual function in base class
  virtual float pixel(unsigned x, unsigned y) const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:390:16: note: Function in derived class
  inline float pixel(unsigned x, unsigned y) const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.h:67:3: warning: Member variable 'StrokeVertexRep::_alpha' is not initialized in the constructor. [uninitMemberVar]
  StrokeVertexRep(const Vec2r &iPoint2d)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:399:8: style: The function 'setArray' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void setArray(float *lvl,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:155:16: note: Virtual function in base class
  virtual void setArray(float *array,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:399:8: note: Function in derived class
  void setArray(float *lvl,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.cpp:77:24: warning: Member variable 'BlenderStrokeRenderer::_context' is not initialized in the constructor. [uninitMemberVar]
BlenderStrokeRenderer::BlenderStrokeRenderer(Render *re, int render_count) : StrokeRenderer()
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:423:18: style: The function 'getArray' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float *getArray()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:167:18: note: Virtual function in base class
  virtual float *getArray() = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\Image.h:423:18: note: Function in derived class
  virtual float *getArray()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.cpp:77:24: warning: Member variable 'BlenderStrokeRenderer::_use_shading_nodes' is not initialized in the constructor. [uninitMemberVar]
BlenderStrokeRenderer::BlenderStrokeRenderer(Render *re, int render_count) : StrokeRenderer()
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:74:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:67:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:74:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:81:16: style: The function 'getX' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:75:16: note: Virtual function in base class
  virtual real getX() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:81:16: note: Function in derived class
  virtual real getX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:87:16: style: The function 'getY' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:78:16: note: Virtual function in base class
  virtual real getY() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:87:16: note: Function in derived class
  virtual real getY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:93:16: style: The function 'getZ' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:81:16: note: Virtual function in base class
  virtual real getZ() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:93:16: note: Function in derived class
  virtual real getZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:105:16: style: The function 'getProjectedX' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:87:16: note: Virtual function in base class
  virtual real getProjectedX() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:105:16: note: Function in derived class
  virtual real getProjectedX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:111:16: style: The function 'getProjectedY' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:90:16: note: Virtual function in base class
  virtual real getProjectedY() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:111:16: note: Function in derived class
  virtual real getProjectedY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.h:69:5: performance: Variable '_point2d' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _point2d = iPoint2d;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:117:16: style: The function 'getProjectedZ' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:93:16: note: Virtual function in base class
  virtual real getProjectedZ() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:117:16: note: Function in derived class
  virtual real getProjectedZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeLayer.h:49:5: performance: Variable '_strokes' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _strokes = iStrokes;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:129:18: style: The function 'getFEdge' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual FEdge *getFEdge(Interface0D &);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:100:18: note: Virtual function in base class
  virtual FEdge *getFEdge(Interface0D &);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:129:18: note: Function in derived class
  virtual FEdge *getFEdge(Interface0D &);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeLayer.h:54:5: performance: Variable '_strokes' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _strokes = iBrother._strokes;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:132:14: style: The function 'getId' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:103:14: note: Virtual function in base class
  virtual Id getId() const;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:132:14: note: Function in derived class
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:138:32: style: The function 'getNature' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Nature::VertexNature getNature() const;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:106:32: note: Virtual function in base class
  virtual Nature::VertexNature getNature() const;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:138:32: note: Function in derived class
  virtual Nature::VertexNature getNature() const;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:141:20: style: The function 'castToSVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual SVertex *castToSVertex();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:109:20: note: Virtual function in base class
  virtual SVertex *castToSVertex();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:141:20: note: Function in derived class
  virtual SVertex *castToSVertex();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:144:23: style: The function 'castToViewVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertex *castToViewVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:112:23: note: Virtual function in base class
  virtual ViewVertex *castToViewVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:144:23: note: Function in derived class
  virtual ViewVertex *castToViewVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:147:23: style: The function 'castToNonTVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual NonTVertex *castToNonTVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:115:23: note: Virtual function in base class
  virtual NonTVertex *castToNonTVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:147:23: note: Function in derived class
  virtual NonTVertex *castToNonTVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:150:20: style: The function 'castToTVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual TVertex *castToTVertex();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:118:20: note: Virtual function in base class
  virtual TVertex *castToTVertex();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:150:20: note: Function in derived class
  virtual TVertex *castToTVertex();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:481:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:144:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:481:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:489:16: style: The function 'getLength2D' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getLength2D() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:176:16: note: Virtual function in base class
  virtual real getLength2D() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:489:16: note: Function in derived class
  virtual real getLength2D() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:498:14: style: The function 'getId' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:179:14: note: Virtual function in base class
  virtual Id getId() const;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:498:14: note: Function in derived class
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:630:29: style: The function 'getNature' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  inline Nature::EdgeNature getNature() const
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:183:30: note: Virtual function in base class
  virtual Nature::EdgeNature getNature() const;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:630:29: note: Function in derived class
  inline Nature::EdgeNature getNature() const
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:951:38: style: The function 'verticesBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual inline Interface0DIterator verticesBegin();
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:152:31: note: Virtual function in base class
  virtual Interface0DIterator verticesBegin();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:951:38: note: Function in derived class
  virtual inline Interface0DIterator verticesBegin();
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:954:38: style: The function 'verticesEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual inline Interface0DIterator verticesEnd();
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:155:31: note: Virtual function in base class
  virtual Interface0DIterator verticesEnd();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:954:38: note: Function in derived class
  virtual inline Interface0DIterator verticesEnd();
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:962:38: style: The function 'pointsBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual inline Interface0DIterator pointsBegin(float t = 0.0f);
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:163:31: note: Virtual function in base class
  virtual Interface0DIterator pointsBegin(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:962:38: note: Function in derived class
  virtual inline Interface0DIterator pointsBegin(float t = 0.0f);
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:970:38: style: The function 'pointsEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual inline Interface0DIterator pointsEnd(float t = 0.0f);
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:171:31: note: Virtual function in base class
  virtual Interface0DIterator pointsEnd(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:970:38: note: Function in derived class
  virtual inline Interface0DIterator pointsEnd(float t = 0.0f);
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.h:67:3: style: Class 'StrokeVertexRep' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  StrokeVertexRep(const Vec2r &iPoint2d)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1011:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:136:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1011:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.h:149:3: style: Class 'Strip' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Strip(const std::vector<StrokeVertex *> &iStrokeVertices,
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1052:15: style: The function 'increment' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:148:15: note: Virtual function in base class
  virtual int increment() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1052:15: note: Function in derived class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.h:200:3: style: Class 'StrokeRep' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  StrokeRep(Stroke *iStroke);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1062:15: style: The function 'decrement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:150:15: note: Virtual function in base class
  virtual int decrement() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1062:15: note: Function in derived class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeLayer.h:47:3: style: Class 'StrokeLayer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  StrokeLayer(const stroke_container &iStrokes)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1072:16: style: The function 'isBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:152:16: note: Virtual function in base class
  virtual bool isBegin() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1072:16: note: Function in derived class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1077:16: style: The function 'isEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:154:16: note: Virtual function in base class
  virtual bool isEnd() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1077:16: note: Function in derived class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1082:16: style: The function 'operator==' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool operator==(const Interface0DIteratorNested &it) const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:156:16: note: Virtual function in base class
  virtual bool operator==(const Interface0DIteratorNested &it) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1082:16: note: Function in derived class
  virtual bool operator==(const Interface0DIteratorNested &it) const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1091:17: style: The function 't' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float t() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:164:17: note: Virtual function in base class
  virtual float t() const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1091:17: note: Function in derived class
  virtual float t() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1098:17: style: The function 'u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float u() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:167:17: note: Virtual function in base class
  virtual float u() const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1098:17: note: Function in derived class
  virtual float u() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1106:28: style: The function 'copy' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual SVertexIterator *copy() const
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:169:38: note: Virtual function in base class
  virtual Interface0DIteratorNested *copy() const = 0;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1106:28: note: Function in derived class
  virtual SVertexIterator *copy() const
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1158:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:481:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1158:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1194:18: style: The function 'duplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual FEdge *duplicate()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:604:18: note: Virtual function in base class
  virtual FEdge *duplicate()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1194:18: note: Function in derived class
  virtual FEdge *duplicate()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1310:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:481:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1310:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1349:18: style: The function 'duplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual FEdge *duplicate()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:604:18: note: Virtual function in base class
  virtual FEdge *duplicate()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1349:18: note: Function in derived class
  virtual FEdge *duplicate()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:66:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:67:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:66:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:274:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:67:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:274:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:73:16: style: The function 'getX' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:75:16: note: Virtual function in base class
  virtual real getX() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:73:16: note: Function in derived class
  virtual real getX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:332:32: style: The function 'getNature' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Nature::VertexNature getNature() const
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:106:32: note: Virtual function in base class
  virtual Nature::VertexNature getNature() const;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:332:32: note: Function in derived class
  virtual Nature::VertexNature getNature() const
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:79:16: style: The function 'getY' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:78:16: note: Virtual function in base class
  virtual real getY() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:79:16: note: Function in derived class
  virtual real getY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:400:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:274:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:400:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:85:16: style: The function 'getZ' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:81:16: note: Virtual function in base class
  virtual real getZ() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:85:16: note: Function in derived class
  virtual real getZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:407:16: style: The function 'getX' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:75:16: note: Virtual function in base class
  virtual real getX() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:407:16: note: Function in derived class
  virtual real getX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:97:16: style: The function 'getProjectedX' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:87:16: note: Virtual function in base class
  virtual real getProjectedX() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:97:16: note: Function in derived class
  virtual real getProjectedX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:413:16: style: The function 'getY' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:78:16: note: Virtual function in base class
  virtual real getY() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:413:16: note: Function in derived class
  virtual real getY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:103:16: style: The function 'getProjectedY' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:90:16: note: Virtual function in base class
  virtual real getProjectedY() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:103:16: note: Function in derived class
  virtual real getProjectedY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:419:16: style: The function 'getZ' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:81:16: note: Virtual function in base class
  virtual real getZ() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:419:16: note: Function in derived class
  virtual real getZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:109:16: style: The function 'getProjectedZ' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:93:16: note: Virtual function in base class
  virtual real getProjectedZ() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:109:16: note: Function in derived class
  virtual real getProjectedZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:433:16: style: The function 'getProjectedX' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:87:16: note: Virtual function in base class
  virtual real getProjectedX() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:433:16: note: Function in derived class
  virtual real getProjectedX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:120:18: style: The function 'getFEdge' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual FEdge *getFEdge(Interface0D &inter);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:100:18: note: Virtual function in base class
  virtual FEdge *getFEdge(Interface0D &);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:120:18: note: Function in derived class
  virtual FEdge *getFEdge(Interface0D &inter);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:439:16: style: The function 'getProjectedY' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:90:16: note: Virtual function in base class
  virtual real getProjectedY() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:439:16: note: Function in derived class
  virtual real getProjectedY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:123:14: style: The function 'getId' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:103:14: note: Virtual function in base class
  virtual Id getId() const;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:123:14: note: Function in derived class
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:444:16: style: The function 'getProjectedZ' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:93:16: note: Virtual function in base class
  virtual real getProjectedZ() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:444:16: note: Function in derived class
  virtual real getProjectedZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:136:32: style: The function 'getNature' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Nature::VertexNature getNature() const
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:106:32: note: Virtual function in base class
  virtual Nature::VertexNature getNature() const;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:136:32: note: Function in derived class
  virtual Nature::VertexNature getNature() const
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:456:14: style: The function 'getId' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:103:14: note: Virtual function in base class
  virtual Id getId() const;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:456:14: note: Function in derived class
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:149:20: style: The function 'castToSVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual SVertex *castToSVertex()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:109:20: note: Virtual function in base class
  virtual SVertex *castToSVertex();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:149:20: note: Function in derived class
  virtual SVertex *castToSVertex()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:463:23: style: The function 'castToViewVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertex *castToViewVertex()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:112:23: note: Virtual function in base class
  virtual ViewVertex *castToViewVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:463:23: note: Function in derived class
  virtual ViewVertex *castToViewVertex()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:161:23: style: The function 'castToViewVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertex *castToViewVertex()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:112:23: note: Virtual function in base class
  virtual ViewVertex *castToViewVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:161:23: note: Function in derived class
  virtual ViewVertex *castToViewVertex()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:469:20: style: The function 'castToTVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual TVertex *castToTVertex()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:118:20: note: Virtual function in base class
  virtual TVertex *castToTVertex();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:469:20: note: Function in derived class
  virtual TVertex *castToTVertex()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:173:23: style: The function 'castToNonTVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual NonTVertex *castToNonTVertex()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:115:23: note: Virtual function in base class
  virtual NonTVertex *castToNonTVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:173:23: note: Function in derived class
  virtual NonTVertex *castToNonTVertex()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:524:23: style: The function 'duplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertex *duplicate()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:322:23: note: Virtual function in base class
  virtual ViewVertex *duplicate() = 0;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:524:23: note: Function in derived class
  virtual ViewVertex *duplicate()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:185:20: style: The function 'castToTVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual TVertex *castToTVertex()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:118:20: note: Virtual function in base class
  virtual TVertex *castToTVertex();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:185:20: note: Function in derived class
  virtual TVertex *castToTVertex()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:431:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:144:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:431:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:496:15: style: The function 'getLength2D' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  inline real getLength2D() const
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:176:16: note: Virtual function in base class
  virtual real getLength2D() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:496:15: note: Function in derived class
  inline real getLength2D() const
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:502:14: style: The function 'getId' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:179:14: note: Virtual function in base class
  virtual Id getId() const;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:502:14: note: Function in derived class
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:197:3: warning: Member variable 'Grid::_timestamp' is not initialized in the constructor. [uninitMemberVar]
  Grid()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:610:16: style: The function 'Replace' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Replace(ViewEdge *iOld, ViewEdge *iNew);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:345:16: note: Virtual function in base class
  virtual void Replace(ViewEdge *, ViewEdge *)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:610:16: note: Function in derived class
  virtual void Replace(ViewEdge *iOld, ViewEdge *iNew);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:197:3: warning: Member variable 'Grid::_t_end' is not initialized in the constructor. [uninitMemberVar]
  Grid()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:582:31: style: The function 'verticesBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator verticesBegin();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:152:31: note: Virtual function in base class
  virtual Interface0DIterator verticesBegin();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:582:31: note: Function in derived class
  virtual Interface0DIterator verticesBegin();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:645:56: style: The function 'edgesBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesBegin();
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:365:56: note: Virtual function in base class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesBegin() = 0;
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:645:56: note: Function in derived class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesBegin();
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:197:3: warning: Member variable 'Grid::_t' is not initialized in the constructor. [uninitMemberVar]
  Grid()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:587:31: style: The function 'verticesEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator verticesEnd();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:155:31: note: Virtual function in base class
  virtual Interface0DIterator verticesEnd();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:587:31: note: Function in derived class
  virtual Interface0DIterator verticesEnd();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:650:56: style: The function 'edgesEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesEnd();
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:370:56: note: Virtual function in base class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesEnd() = 0;
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:650:56: note: Function in derived class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesEnd();
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:61:5: performance: Variable '_orig' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _orig = orig;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:593:31: style: The function 'pointsBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator pointsBegin(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:163:31: note: Virtual function in base class
  virtual Interface0DIterator pointsBegin(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:593:31: note: Function in derived class
  virtual Interface0DIterator pointsBegin(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:653:56: style: The function 'edgesIterator' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesIterator(ViewEdge *iEdge);
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:373:56: note: Virtual function in base class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesIterator(ViewEdge *iEdge) = 0;
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:653:56: note: Function in derived class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesIterator(ViewEdge *iEdge);
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:209:16: warning: Virtual function 'clear' is called from destructor '~Grid()' at line 203. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:203:5: note: Calling clear
    clear();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:209:16: note: clear is a virtual function
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:599:31: style: The function 'pointsEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator pointsEnd(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:171:31: note: Virtual function in base class
  virtual Interface0DIterator pointsEnd(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:599:31: note: Function in derived class
  virtual Interface0DIterator pointsEnd(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:679:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:274:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:679:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:51:16: warning: Virtual function 'clear' is called from destructor '~FastGrid()' at line 44. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:44:5: note: Calling clear
    clear();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:51:16: note: clear is a virtual function
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:330:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:66:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:330:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:686:16: style: The function 'getX' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:75:16: note: Virtual function in base class
  virtual real getX() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:686:16: note: Function in derived class
  virtual real getX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:59:3: style: Class 'Cell' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Cell(Vec3r &orig)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:508:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:144:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:508:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:692:16: style: The function 'getY' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:78:16: note: Virtual function in base class
  virtual real getY() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:692:16: note: Function in derived class
  virtual real getY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:123:3: style: Class 'allOccludersGridVisitor' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  allOccludersGridVisitor(OccludersSet &occluders) : GridVisitor(), occluders_(occluders)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:516:14: style: The function 'getId' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:179:14: note: Virtual function in base class
  virtual Id getId() const;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:516:14: note: Function in derived class
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:698:16: style: The function 'getZ' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:81:16: note: Virtual function in base class
  virtual real getZ() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:698:16: note: Function in derived class
  virtual real getZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:422:3: style: Class 'VirtualOccludersSet' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  VirtualOccludersSet(Grid &_grid) : grid(_grid){};
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:639:15: style: The function 'getLength2D' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  inline real getLength2D() const
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:176:16: note: Virtual function in base class
  virtual real getLength2D() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:639:15: note: Function in derived class
  inline real getLength2D() const
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:710:16: style: The function 'getProjectedX' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:87:16: note: Virtual function in base class
  virtual real getProjectedX() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:710:16: note: Function in derived class
  virtual real getProjectedX() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:127:16: style: The function 'examineOccluder' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void examineOccluder(Polygon3r *occ);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:102:16: note: Virtual function in base class
  virtual void examineOccluder(Polygon3r * /*occ*/)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:127:16: note: Function in derived class
  virtual void examineOccluder(Polygon3r *occ);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:868:31: style: The function 'verticesBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator verticesBegin();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:152:31: note: Virtual function in base class
  virtual Interface0DIterator verticesBegin();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:868:31: note: Function in derived class
  virtual Interface0DIterator verticesBegin();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:716:16: style: The function 'getProjectedY' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:90:16: note: Virtual function in base class
  virtual real getProjectedY() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:716:16: note: Function in derived class
  virtual real getProjectedY() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:174:16: style: The function 'discoverCell' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void discoverCell(Cell *cell)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:98:16: note: Virtual function in base class
  virtual void discoverCell(Cell * /*cell*/)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:174:16: note: Function in derived class
  virtual void discoverCell(Cell *cell)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:871:31: style: The function 'verticesEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator verticesEnd();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:155:31: note: Virtual function in base class
  virtual Interface0DIterator verticesEnd();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:871:31: note: Function in derived class
  virtual Interface0DIterator verticesEnd();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:722:16: style: The function 'getProjectedZ' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual real getProjectedZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:93:16: note: Virtual function in base class
  virtual real getProjectedZ() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:722:16: note: Function in derived class
  virtual real getProjectedZ() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:179:16: style: The function 'examineOccluder' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void examineOccluder(Polygon3r *occ);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:102:16: note: Virtual function in base class
  virtual void examineOccluder(Polygon3r * /*occ*/)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:179:16: note: Function in derived class
  virtual void examineOccluder(Polygon3r *occ);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:873:31: style: The function 'pointsBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator pointsBegin(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:163:31: note: Virtual function in base class
  virtual Interface0DIterator pointsBegin(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:873:31: note: Function in derived class
  virtual Interface0DIterator pointsBegin(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:734:14: style: The function 'getId' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:103:14: note: Virtual function in base class
  virtual Id getId() const;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:734:14: note: Function in derived class
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:181:16: style: The function 'stop' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool stop();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:110:16: note: Virtual function in base class
  virtual bool stop()
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:181:16: note: Function in derived class
  virtual bool stop();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:874:31: style: The function 'pointsEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator pointsEnd(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:171:31: note: Virtual function in base class
  virtual Interface0DIterator pointsEnd(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.h:874:31: note: Function in derived class
  virtual Interface0DIterator pointsEnd(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:740:20: style: The function 'castToSVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual SVertex *castToSVertex()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:109:20: note: Virtual function in base class
  virtual SVertex *castToSVertex();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:740:20: note: Function in derived class
  virtual SVertex *castToSVertex()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:51:16: style: The function 'clear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:209:16: note: Virtual function in base class
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:51:16: note: Function in derived class
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.h:47:16: style: The function 'RenderStrokeRep' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void RenderStrokeRep(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRenderer.h:131:16: note: Virtual function in base class
  virtual void RenderStrokeRep(StrokeRep *iStrokeRep) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.h:47:16: note: Function in derived class
  virtual void RenderStrokeRep(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.h:48:16: style: The function 'RenderStrokeRepBasic' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void RenderStrokeRepBasic(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRenderer.h:132:16: note: Virtual function in base class
  virtual void RenderStrokeRepBasic(StrokeRep *iStrokeRep) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.h:48:16: note: Function in derived class
  virtual void RenderStrokeRepBasic(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:746:23: style: The function 'castToViewVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertex *castToViewVertex()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:112:23: note: Virtual function in base class
  virtual ViewVertex *castToViewVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:746:23: note: Function in derived class
  virtual ViewVertex *castToViewVertex()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:61:16: style: The function 'configure' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void configure(const Vec3r &orig, const Vec3r &size, unsigned nb);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:219:16: note: Virtual function in base class
  virtual void configure(const Vec3r &orig, const Vec3r &size, unsigned nb);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:61:16: note: Function in derived class
  virtual void configure(const Vec3r &orig, const Vec3r &size, unsigned nb);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:752:23: style: The function 'castToNonTVertex' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual NonTVertex *castToNonTVertex()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:115:23: note: Virtual function in base class
  virtual NonTVertex *castToNonTVertex();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:752:23: note: Function in derived class
  virtual NonTVertex *castToNonTVertex()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:64:9: style: The function 'getCell' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  Cell *getCell(const Vec3u &p);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:247:17: note: Virtual function in base class
  virtual Cell *getCell(const Vec3u &coord) = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:64:9: note: Function in derived class
  Cell *getCell(const Vec3u &p);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:785:23: style: The function 'duplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertex *duplicate()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:322:23: note: Virtual function in base class
  virtual ViewVertex *duplicate() = 0;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:785:23: note: Function in derived class
  virtual ViewVertex *duplicate()
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:67:16: style: The function 'fillCell' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void fillCell(const Vec3u &p, Cell &cell);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:244:16: note: Virtual function in base class
  virtual void fillCell(const Vec3u &coord, Cell &cell) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FastGrid.h:67:16: note: Function in derived class
  virtual void fillCell(const Vec3u &p, Cell &cell);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:836:16: style: The function 'Replace' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Replace(ViewEdge *iOld, ViewEdge *iNew)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:345:16: note: Virtual function in base class
  virtual void Replace(ViewEdge *, ViewEdge *)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:836:16: note: Function in derived class
  virtual void Replace(ViewEdge *iOld, ViewEdge *iNew)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:865:56: style: The function 'edgesBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesBegin();
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:365:56: note: Virtual function in base class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesBegin() = 0;
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:865:56: note: Function in derived class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesBegin();
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:870:56: style: The function 'edgesEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesEnd();
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:370:56: note: Virtual function in base class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesEnd() = 0;
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:870:56: note: Function in derived class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesEnd();
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:228:9: style: The scope of the variable 'tmp' can be reduced. [variableScope]
    int tmp;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:873:56: style: The function 'edgesIterator' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesIterator(ViewEdge *iEdge);
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:373:56: note: Virtual function in base class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesIterator(ViewEdge *iEdge) = 0;
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:873:56: note: Function in derived class
  virtual ViewVertexInternal::orientedViewEdgeIterator edgesIterator(ViewEdge *iEdge);
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:59:15: style: Parameter 'orig' can be declared with const [constParameter]
  Cell(Vec3r &orig)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:912:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:144:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:912:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:919:14: style: The function 'getId' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:179:14: note: Virtual function in base class
  virtual Id getId() const;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:919:14: note: Function in derived class
  virtual Id getId() const
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:925:30: style: The function 'getNature' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Nature::EdgeNature getNature() const
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:183:30: note: Virtual function in base class
  virtual Nature::EdgeNature getNature() const;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:925:30: note: Function in derived class
  virtual Nature::EdgeNature getNature() const
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:378:84: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
        for (OccludersSet::iterator it = occluders.begin(); it != occluders.end(); it++) {
                                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1284:8: style: The function 'getLength2D' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  real getLength2D() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:176:16: note: Virtual function in base class
  virtual real getLength2D() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1284:8: note: Function in derived class
  real getLength2D() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1373:31: style: The function 'verticesBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator verticesBegin();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:152:31: note: Virtual function in base class
  virtual Interface0DIterator verticesBegin();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1373:31: note: Function in derived class
  virtual Interface0DIterator verticesBegin();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1378:31: style: The function 'verticesEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator verticesEnd();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:155:31: note: Virtual function in base class
  virtual Interface0DIterator verticesEnd();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1378:31: note: Function in derived class
  virtual Interface0DIterator verticesEnd();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1385:31: style: The function 'pointsBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator pointsBegin(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:163:31: note: Virtual function in base class
  virtual Interface0DIterator pointsBegin(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1385:31: note: Function in derived class
  virtual Interface0DIterator pointsBegin(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1392:31: style: The function 'pointsEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Interface0DIterator pointsEnd(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface1D.h:171:31: note: Virtual function in base class
  virtual Interface0DIterator pointsEnd(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1392:31: note: Function in derived class
  virtual Interface0DIterator pointsEnd(float t = 0.0f);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:474:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:145:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:474:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:488:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:145:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:488:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:502:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:145:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:502:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:151:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:70:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:151:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:157:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:80:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:157:7: note: Function in derived class
  int operator()(Interface1D &)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:174:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:70:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:174:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:180:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:80:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:180:7: note: Function in derived class
  int operator()(Interface1D &)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1500:32: style: C-style pointer casting [cstyleCast]
        newfedgelist.push_back((FEdge *)current->userdata);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:202:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:70:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:202:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1771:8: style: C-style pointer casting [cstyleCast]
      ((FEdgeSmooth *)newEdge)->setFace(((FEdgeSmooth *)ioEdge)->face());
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:208:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:80:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:208:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.cpp:438:18: style: C-style pointer casting [cstyleCast]
  Material *ma = (Material *)BLI_ghash_lookup(_nodetree_hash, nt);
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:232:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:70:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:232:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:238:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:80:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:238:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:267:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:70:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:267:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:273:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:80:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:273:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:307:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:70:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:307:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:313:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:80:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:313:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:333:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:70:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:333:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:339:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:80:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:339:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:371:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:70:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:371:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:377:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:80:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:377:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:415:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:70:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:415:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:421:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:80:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:421:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:464:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:114:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:464:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:470:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D & /*i1*/, Interface1D & /*i2*/)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:127:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter1, Interface1D &inter2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:470:7: note: Function in derived class
  int operator()(Interface1D & /*i1*/, Interface1D & /*i2*/)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1622:10: style: The scope of the variable 't' can be reduced. [variableScope]
    real t, T;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:482:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:114:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:482:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1622:13: style: The scope of the variable 'T' can be reduced. [variableScope]
    real t, T;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:488:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D & /*i1*/, Interface1D & /*i2*/)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:127:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter1, Interface1D &inter2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:488:7: note: Function in derived class
  int operator()(Interface1D & /*i1*/, Interface1D & /*i2*/)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:501:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:114:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:501:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:507:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &i1, Interface1D &i2)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:127:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter1, Interface1D &inter2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:507:7: note: Function in derived class
  int operator()(Interface1D &i1, Interface1D &i2)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:519:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:114:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:519:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:525:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &i1, Interface1D &i2)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:127:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter1, Interface1D &inter2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:525:7: note: Function in derived class
  int operator()(Interface1D &i1, Interface1D &i2)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:561:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:114:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:561:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:567:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &i1, Interface1D &i2)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:127:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter1, Interface1D &inter2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:567:7: note: Function in derived class
  int operator()(Interface1D &i1, Interface1D &i2)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.cpp:404:26: style: Local variable 'storage' shadows outer variable [shadowVariable]
        NodeShaderUVMap *storage = (NodeShaderUVMap *)input_uvmap->storage;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.cpp:224:24: note: Shadowed declaration
  NodeShaderAttribute *storage;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.cpp:404:26: note: Shadow variable
        NodeShaderUVMap *storage = (NodeShaderUVMap *)input_uvmap->storage;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.cpp:414:25: style: Local variable 'link' shadows outer variable [shadowVariable]
        for (bNodeLink *link = (bNodeLink *)ntree->links.first; link; link = link->next) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.cpp:337:16: note: Shadowed declaration
    bNodeLink *link;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStrokeRenderer.cpp:414:25: note: Shadow variable
        for (bNodeLink *link = (bNodeLink *)ntree->links.first; link; link = link->next) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.h:75:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.h:431:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.h:75:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:131:16: style: The function 'isBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:58:16: note: Virtual function in base class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:131:16: note: Function in derived class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:143:16: style: The function 'isEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:64:16: note: Virtual function in base class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:143:16: note: Function in derived class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:213:22: style: The function 'increment' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual inline int increment()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:46:15: note: Virtual function in base class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:213:22: note: Function in derived class
  virtual inline int increment()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:297:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:136:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:297:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:261:39: style: Parameter 'iter' can be declared with const [constParameter]
  int operator()(Interface0DIterator &iter)
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:338:15: style: The function 'increment' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:148:15: note: Virtual function in base class
  virtual int increment() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:338:15: note: Function in derived class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:279:39: style: Parameter 'iter' can be declared with const [constParameter]
  int operator()(Interface0DIterator &iter)
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:351:15: style: The function 'decrement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:150:15: note: Virtual function in base class
  virtual int decrement() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:351:15: note: Function in derived class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:803:35: style: Parameter 'iFace' can be declared with const [constParameter]
  inline void setaFace(Polygon3r &iFace)
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeLayer.h:89:44: style: Parameter 'iStrokes' can be declared with const [constParameter]
  inline void setStrokes(stroke_container &iStrokes)
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:368:16: style: The function 'isBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:152:16: note: Virtual function in base class
  virtual bool isBegin() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:368:16: note: Function in derived class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:373:16: style: The function 'isEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:154:16: note: Virtual function in base class
  virtual bool isEnd() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:373:16: note: Function in derived class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:378:17: style: The function 't' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float t() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:164:17: note: Virtual function in base class
  virtual float t() const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:378:17: note: Function in derived class
  virtual float t() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:383:17: style: The function 'u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float u() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:167:17: note: Virtual function in base class
  virtual float u() const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:383:17: note: Function in derived class
  virtual float u() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:388:16: style: The function 'operator==' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool operator==(const Interface0DIteratorNested &it) const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:156:16: note: Virtual function in base class
  virtual bool operator==(const Interface0DIteratorNested &it) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:388:16: note: Function in derived class
  virtual bool operator==(const Interface0DIteratorNested &it) const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:397:28: style: The function 'copy' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual SVertexIterator *copy() const
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:169:38: note: Virtual function in base class
  virtual Interface0DIteratorNested *copy() const = 0;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:397:28: note: Function in derived class
  virtual SVertexIterator *copy() const
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:454:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:41:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:454:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:528:15: style: The function 'increment' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:46:15: note: Virtual function in base class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:528:15: note: Function in derived class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:550:15: style: The function 'decrement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:52:15: note: Virtual function in base class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:550:15: note: Function in derived class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:557:16: style: The function 'isBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:58:16: note: Virtual function in base class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:557:16: note: Function in derived class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:563:16: style: The function 'isEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:64:16: note: Virtual function in base class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:563:16: note: Function in derived class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:89:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:41:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:89:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:94:23: style: The function 'isEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual inline bool isEnd() const
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:64:16: note: Virtual function in base class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:94:23: note: Function in derived class
  virtual inline bool isEnd() const
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:99:23: style: The function 'isBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual inline bool isBegin() const
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:58:16: note: Virtual function in base class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:99:23: note: Function in derived class
  virtual inline bool isBegin() const
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:129:15: style: The function 'increment' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int increment();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:46:15: note: Virtual function in base class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:129:15: note: Function in derived class
  virtual int increment();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:131:15: style: The function 'decrement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Iterator.h:52:15: note: Virtual function in base class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:131:15: note: Function in derived class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:199:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:454:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:199:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:252:15: style: The function 'increment' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int increment();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:528:15: note: Virtual function in base class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:252:15: note: Function in derived class
  virtual int increment();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:253:15: style: The function 'decrement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int decrement();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIterators.h:550:15: note: Virtual function in base class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:253:15: note: Function in derived class
  virtual int decrement();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:294:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:199:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:294:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:303:15: style: The function 'traverse' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int traverse(const AdjacencyIterator &it);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:217:15: note: Virtual function in base class
  virtual int traverse(const AdjacencyIterator &it);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:303:15: note: Function in derived class
  virtual int traverse(const AdjacencyIterator &it);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:306:15: style: The function 'init' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int init()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:208:15: note: Virtual function in base class
  virtual int init();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:306:15: note: Function in derived class
  virtual int init()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:402:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:199:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:402:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:410:15: style: The function 'traverse' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int traverse(const AdjacencyIterator &it);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:217:15: note: Virtual function in base class
  virtual int traverse(const AdjacencyIterator &it);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:410:15: note: Function in derived class
  virtual int traverse(const AdjacencyIterator &it);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:413:15: style: The function 'init' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int init()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:208:15: note: Virtual function in base class
  virtual int init();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.h:413:15: note: Function in derived class
  virtual int init()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:99:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:136:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:99:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:151:15: style: The function 'increment' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:148:15: note: Virtual function in base class
  virtual int increment() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:151:15: note: Function in derived class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:158:15: style: The function 'decrement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:150:15: note: Virtual function in base class
  virtual int decrement() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:158:15: note: Function in derived class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:165:8: style: The function 'isBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool isBegin() const
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:152:16: note: Virtual function in base class
  virtual bool isBegin() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:165:8: note: Function in derived class
  bool isBegin() const
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:184:8: style: The function 'isEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool isEnd() const
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:154:16: note: Virtual function in base class
  virtual bool isEnd() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:184:8: note: Function in derived class
  bool isEnd() const
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:190:16: style: The function 'operator==' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool operator==(const Interface0DIteratorNested &it) const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:156:16: note: Virtual function in base class
  virtual bool operator==(const Interface0DIteratorNested &it) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:190:16: note: Function in derived class
  virtual bool operator==(const Interface0DIteratorNested &it) const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:200:17: style: The function 't' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float t() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:164:17: note: Virtual function in base class
  virtual float t() const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:200:17: note: Function in derived class
  virtual float t() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:206:17: style: The function 'u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float u() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:167:17: note: Virtual function in base class
  virtual float u() const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:206:17: note: Function in derived class
  virtual float u() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:212:33: style: The function 'copy' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual StrokeVertexIterator *copy() const
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:169:38: note: Virtual function in base class
  virtual Interface0DIteratorNested *copy() const = 0;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeIterators.h:212:33: note: Function in derived class
  virtual StrokeVertexIterator *copy() const
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:127:31: style: The function 'copy' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual CurvePointIterator *copy() const
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:169:38: note: Virtual function in base class
  virtual Interface0DIteratorNested *copy() const = 0;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:127:31: note: Function in derived class
  virtual CurvePointIterator *copy() const
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:138:18: style: The function 'getExactTypeName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:136:18: note: Virtual function in base class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:138:18: note: Function in derived class
  virtual string getExactTypeName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:157:16: style: The function 'operator==' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool operator==(const Interface0DIteratorNested &b) const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:156:16: note: Virtual function in base class
  virtual bool operator==(const Interface0DIteratorNested &it) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:157:16: note: Function in derived class
  virtual bool operator==(const Interface0DIteratorNested &b) const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:177:16: style: The function 'isBegin' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:152:16: note: Virtual function in base class
  virtual bool isBegin() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:177:16: note: Function in derived class
  virtual bool isBegin() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:185:16: style: The function 'isEnd' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:154:16: note: Virtual function in base class
  virtual bool isEnd() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:185:16: note: Function in derived class
  virtual bool isEnd() const
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:194:15: style: The function 'increment' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:148:15: note: Virtual function in base class
  virtual int increment() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:194:15: note: Function in derived class
  virtual int increment()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:245:15: style: The function 'decrement' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:150:15: note: Virtual function in base class
  virtual int decrement() = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:245:15: note: Function in derived class
  virtual int decrement()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:292:17: style: The function 't' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float t() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:164:17: note: Virtual function in base class
  virtual float t() const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:292:17: note: Function in derived class
  virtual float t() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:297:17: style: The function 'u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual float u() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Interface0D.h:167:17: note: Virtual function in base class
  virtual float u() const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveIterators.h:297:17: note: Function in derived class
  virtual float u() const
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:382:92: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<FEdge *>::iterator fe = _FEdges.begin(), fend = _FEdges.end(); fe != fend; fe++) {
                                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:394:92: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<FEdge *>::iterator fe = _FEdges.begin(), fend = _FEdges.end(); fe != fend; fe++) {
                                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1465:78: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (sv = verticesList.begin(), svend = verticesList.end(); sv != svend; sv++) {
                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1476:68: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (e = edgesList.begin(), eend = edgesList.end(); e != eend; e++) {
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1486:64: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (fe = fedges.begin(), fend = fedges.end(); fe != fend; fe++) {
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1493:80: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (sv = _verticesList.begin(), svend = _verticesList.end(); sv != svend; sv++) {
                                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1498:12: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
           fed++) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1508:70: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (e = _edgesList.begin(), eend = _edgesList.end(); e != eend; e++) {
                                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1520:80: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (sv = _verticesList.begin(), svend = _verticesList.end(); sv != svend; sv++) {
                                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1527:70: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (e = _edgesList.begin(), eend = _edgesList.end(); e != eend; e++) {
                                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1545:82: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (sv = _verticesList.begin(), svend = _verticesList.end(); sv != svend; sv++) {
                                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1552:72: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (e = _edgesList.begin(), eend = _edgesList.end(); e != eend; e++) {
                                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1625:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         p++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1652:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         sv++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1801:76: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (v = _verticesList.begin(), vend = _verticesList.end(); v != vend; v++) {
                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1837:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         fe++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.h:1848:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         fe++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1466:32: style: C-style pointer casting [cstyleCast]
          ViewEdge *veFrontA = (ViewEdge *)(v)->frontEdgeA().first->userdata;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1467:32: style: C-style pointer casting [cstyleCast]
          ViewEdge *veFrontB = (ViewEdge *)(v)->frontEdgeB().first->userdata;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1468:31: style: C-style pointer casting [cstyleCast]
          ViewEdge *veBackA = (ViewEdge *)(v)->backEdgeA().first->userdata;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1469:31: style: C-style pointer casting [cstyleCast]
          ViewEdge *veBackB = (ViewEdge *)(v)->backEdgeB().first->userdata;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1484:33: style: C-style pointer casting [cstyleCast]
            ViewEdge *current = (ViewEdge *)((ve)->first)->userdata;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1659:12: style: The scope of the variable 'sv' can be reduced. [variableScope]
  SVertex *sv, *sv2;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1660:15: style: The scope of the variable 'vva' can be reduced. [variableScope]
  ViewVertex *vva, *vvb;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1660:21: style: The scope of the variable 'vvb' can be reduced. [variableScope]
  ViewVertex *vva, *vvb;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1480:63: style: Local variable 've' shadows outer variable [shadowVariable]
          for (vector<ViewVertex::directedViewEdge>::iterator ve = vedges.begin(),
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1441:34: note: Shadowed declaration
    vector<ViewEdge *>::iterator ve, veend;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1480:63: note: Shadow variable
          for (vector<ViewVertex::directedViewEdge>::iterator ve = vedges.begin(),
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneHash.h:39:10: warning: Member variable 'SceneHash::_prevSum' is not initialized in the constructor. [uninitMemberVar]
  inline SceneHash() : SceneVisitor()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\TimeUtils.h:35:10: warning: Member variable 'Chronometer::_start' is not initialized in the constructor. [uninitMemberVar]
  inline Chronometer()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:179:12: warning: Member variable 'incoming_edge_iterator::_vertex' is not initialized in the constructor. [uninitMemberVar]
    inline incoming_edge_iterator() : iterator<input_iterator_tag, WOEdge *, ptrdiff_t>()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:179:12: warning: Member variable 'incoming_edge_iterator::_begin' is not initialized in the constructor. [uninitMemberVar]
    inline incoming_edge_iterator() : iterator<input_iterator_tag, WOEdge *, ptrdiff_t>()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:179:12: warning: Member variable 'incoming_edge_iterator::_current' is not initialized in the constructor. [uninitMemberVar]
    inline incoming_edge_iterator() : iterator<input_iterator_tag, WOEdge *, ptrdiff_t>()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:390:10: warning: Member variable 'WOEdge::_angle' is not initialized in the constructor. [uninitMemberVar]
  inline WOEdge()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:559:10: warning: Member variable 'WEdge::_Mark' is not initialized in the constructor. [uninitMemberVar]
  inline WEdge()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:559:10: warning: Member variable 'WEdge::_Id' is not initialized in the constructor. [uninitMemberVar]
  inline WEdge()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:567:10: warning: Member variable 'WEdge::_Mark' is not initialized in the constructor. [uninitMemberVar]
  inline WEdge(WOEdge *iOEdge)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:567:10: warning: Member variable 'WEdge::_Id' is not initialized in the constructor. [uninitMemberVar]
  inline WEdge(WOEdge *iOEdge)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:575:10: warning: Member variable 'WEdge::_Mark' is not initialized in the constructor. [uninitMemberVar]
  inline WEdge(WOEdge *iaOEdge, WOEdge *ibOEdge)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:575:10: warning: Member variable 'WEdge::_Id' is not initialized in the constructor. [uninitMemberVar]
  inline WEdge(WOEdge *iaOEdge, WOEdge *ibOEdge)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:752:10: warning: Member variable 'WFace::_Id' is not initialized in the constructor. [uninitMemberVar]
  inline WFace()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:752:10: warning: Member variable 'WFace::_Mark' is not initialized in the constructor. [uninitMemberVar]
  inline WFace()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:342:3: warning: Member variable 'WXFaceLayer::_ClosestPointIndex' is not initialized in the constructor. [uninitMemberVar]
  WXFaceLayer(WXFace *iFace, WXNature iNature, bool viewDependant)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:353:3: warning: Member variable 'WXFaceLayer::_ClosestPointIndex' is not initialized in the constructor. [uninitMemberVar]
  WXFaceLayer(const WXFaceLayer &iBrother)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:510:10: warning: Member variable 'WXFace::_dotp' is not initialized in the constructor. [uninitMemberVar]
  inline WXFace() : WFace()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:517:3: warning: Member variable 'WXFace::_dotp' is not initialized in the constructor. [uninitMemberVar]
  WXFace(WXFace &iBrother) : WFace(iBrother)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.h:49:3: warning: Member variable 'FEdgeXDetector::_meanK1' is not initialized in the constructor. [uninitMemberVar]
  FEdgeXDetector()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.h:49:3: warning: Member variable 'FEdgeXDetector::_meanKr' is not initialized in the constructor. [uninitMemberVar]
  FEdgeXDetector()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.h:49:3: warning: Member variable 'FEdgeXDetector::_minK1' is not initialized in the constructor. [uninitMemberVar]
  FEdgeXDetector()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.h:49:3: warning: Member variable 'FEdgeXDetector::_minKr' is not initialized in the constructor. [uninitMemberVar]
  FEdgeXDetector()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.h:49:3: warning: Member variable 'FEdgeXDetector::_maxK1' is not initialized in the constructor. [uninitMemberVar]
  FEdgeXDetector()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.h:49:3: warning: Member variable 'FEdgeXDetector::_maxKr' is not initialized in the constructor. [uninitMemberVar]
  FEdgeXDetector()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.h:49:3: warning: Member variable 'FEdgeXDetector::_nPoints' is not initialized in the constructor. [uninitMemberVar]
  FEdgeXDetector()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.h:49:3: warning: Member variable 'FEdgeXDetector::_faceMarks' is not initialized in the constructor. [uninitMemberVar]
  FEdgeXDetector()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:50:3: warning: Member variable 'GridDensityProvider::_cellsX' is not initialized in the constructor. [uninitMemberVar]
  GridDensityProvider(OccluderSource &source) : source(source)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:50:3: warning: Member variable 'GridDensityProvider::_cellsY' is not initialized in the constructor. [uninitMemberVar]
  GridDensityProvider(OccluderSource &source) : source(source)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:50:3: warning: Member variable 'GridDensityProvider::_cellSize' is not initialized in the constructor. [uninitMemberVar]
  GridDensityProvider(OccluderSource &source) : source(source)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:50:3: warning: Member variable 'GridDensityProvider::_cellOrigin' is not initialized in the constructor. [uninitMemberVar]
  GridDensityProvider(OccluderSource &source) : source(source)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.h:183:10: warning: Member variable 'ViewEdgeXBuilder::_pCurrentSShape' is not initialized in the constructor. [uninitMemberVar]
  inline ViewEdgeXBuilder()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.h:183:10: warning: Member variable 'ViewEdgeXBuilder::_pCurrentVShape' is not initialized in the constructor. [uninitMemberVar]
  inline ViewEdgeXBuilder()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.h:90:10: warning: Member variable 'ViewMapBuilder::_ViewMap' is not initialized in the constructor. [uninitMemberVar]
  inline ViewMapBuilder()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.h:90:10: warning: Member variable 'ViewMapBuilder::_orthographicProjection' is not initialized in the constructor. [uninitMemberVar]
  inline ViewMapBuilder()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.h:90:10: warning: Member variable 'ViewMapBuilder::_epsilon' is not initialized in the constructor. [uninitMemberVar]
  inline ViewMapBuilder()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppView.cpp:53:10: warning: Member variable 'AppView::_width' is not initialized in the constructor. [uninitMemberVar]
AppView::AppView(const char * /*iName*/)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppView.cpp:53:10: warning: Member variable 'AppView::_height' is not initialized in the constructor. [uninitMemberVar]
AppView::AppView(const char * /*iName*/)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppView.cpp:53:10: warning: Member variable 'AppView::_thickness' is not initialized in the constructor. [uninitMemberVar]
AppView::AppView(const char * /*iName*/)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppView.cpp:53:10: warning: Member variable 'AppView::_Draw2DScene' is not initialized in the constructor. [uninitMemberVar]
AppView::AppView(const char * /*iName*/)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppView.cpp:53:10: warning: Member variable 'AppView::_Draw3DScene' is not initialized in the constructor. [uninitMemberVar]
AppView::AppView(const char * /*iName*/)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\LineRep.h:46:10: warning: Member variable 'LineRep::_Style' is not initialized in the constructor. [uninitMemberVar]
  inline LineRep() : Rep()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\VertexRep.h:31:10: warning: Member variable 'VertexRep::_coordinates' is not initialized in the constructor. [uninitMemberVar]
  inline VertexRep() : Rep()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:73:5: performance: Variable '_Vertex' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Vertex = v;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:282:7: performance: Variable '_edge_it' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
      _edge_it = it;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:293:7: performance: Variable '_edge_it' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
      _edge_it = iBrother._edge_it;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:120:5: performance: Variable '_nature' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _nature = Nature::NO_FEATURE;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:127:5: performance: Variable '_nature' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _nature = Nature::NO_FEATURE;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:134:5: performance: Variable '_nature' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _nature = Nature::NO_FEATURE;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:142:5: performance: Variable '_nature' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _nature = iBrother.nature();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:348:5: performance: Variable '_Nature' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Nature = iNature;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:357:5: performance: Variable '_DotP' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _DotP = iBrother._DotP;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:360:5: performance: Variable '_Nature' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Nature = iBrother._Nature;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:519:5: performance: Variable '_center' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _center = iBrother.center();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\LineRep.h:68:5: performance: Variable '_vertices' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _vertices = vertices;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.cpp:35:12: warning: Member variable 'AppCanvas::_pass_diffuse' is not initialized in the constructor. [uninitMemberVar]
AppCanvas::AppCanvas() : Canvas()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.cpp:35:12: warning: Member variable 'AppCanvas::_pass_z' is not initialized in the constructor. [uninitMemberVar]
AppCanvas::AppCanvas() : Canvas()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.cpp:41:12: warning: Member variable 'AppCanvas::_pass_diffuse' is not initialized in the constructor. [uninitMemberVar]
AppCanvas::AppCanvas(AppView *iViewer) : Canvas()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.cpp:41:12: warning: Member variable 'AppCanvas::_pass_z' is not initialized in the constructor. [uninitMemberVar]
AppCanvas::AppCanvas(AppView *iViewer) : Canvas()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.cpp:46:12: warning: Member variable 'AppCanvas::_pass_diffuse' is not initialized in the constructor. [uninitMemberVar]
AppCanvas::AppCanvas(const AppCanvas &iBrother) : Canvas(iBrother)
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.cpp:46:12: warning: Member variable 'AppCanvas::_pass_z' is not initialized in the constructor. [uninitMemberVar]
AppCanvas::AppCanvas(const AppCanvas &iBrother) : Canvas(iBrother)
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Interpreter.h:39:5: performance: Variable '_language' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _language = "Unknown";
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:595:66: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (fe = vfEdges.begin(), fend = vfEdges.end(); fe != fend; fe++) {
                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:602:66: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (fe = vbEdges.begin(), fend = vbEdges.end(); fe != fend; fe++) {
                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:840:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         ve++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:846:9: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
        insertedve++;  // insertedve points now to e1
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1447:72: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vv = vvertices.begin(), vvend = vvertices.end(); vv != vvend; vv++) {
                                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1454:68: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (ve = vvedges.begin(), veend = vvedges.end(); ve != veend; ve++) {
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1462:72: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vv = _Vertices.begin(), vvend = _Vertices.end(); vv != vvend; vv++) {
                                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1483:16: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
               ve++) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1497:66: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (ve = _Edges.begin(), veend = _Edges.end(); ve != veend; ve++) {
                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1511:72: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vv = vvertices.begin(), vvend = vvertices.end(); vv != vvend; vv++) {
                                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1518:68: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (ve = vvedges.begin(), veend = vvedges.end(); ve != veend; ve++) {
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.h:1662:78: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vv = iViewVertices.begin(), vvend = iViewVertices.end(); vv != vvend; vv++) {
                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.h:98:5: warning: Class 'ViewMapBuilder' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
    _pViewEdgeBuilder = new ViewEdgeXBuilder;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.h:98:5: warning: Class 'ViewMapBuilder' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
    _pViewEdgeBuilder = new ViewEdgeXBuilder;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppView.cpp:56:3: warning: Class 'AppView' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
  _ModelRootNode = new NodeDrawingStyle;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppView.cpp:56:3: warning: Class 'AppView' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
  _ModelRootNode = new NodeDrawingStyle;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:70:10: style: Class 'WVertex' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline WVertex(const Vec3f &v)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:275:12: style: Class 'face_iterator' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    inline face_iterator(incoming_edge_iterator it)
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:567:10: style: Class 'WEdge' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline WEdge(WOEdge *iOEdge)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:51:10: style: Class 'WXVertex' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline WXVertex(const Vec3f &v) : WVertex(v)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:125:10: style: Class 'WXEdge' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline WXEdge(WOEdge *iOEdge) : WEdge(iOEdge)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:50:3: style: Class 'GridDensityProvider' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  GridDensityProvider(OccluderSource &source) : source(source)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.h:97:3: style: Class 'OWXFaceLayer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  OWXFaceLayer(WXFaceLayer *ifl, bool iOrder = true)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.h:139:3: style: Class 'OWXEdge' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  OWXEdge(WXEdge *ie, bool iOrder = true)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\LineRep.h:66:10: style: Class 'LineRep' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline LineRep(const vector<Vec3r> &vertices) : Rep()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\LineRep.h:74:10: style: Class 'LineRep' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline LineRep(const list<Vec3r> &vertices) : Rep()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AutoPtrHelper.h:51:3: style: Class 'AutoPtr < GridDensityProvider >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AutoPtr(T *ptr) : std::auto_ptr<T>(ptr)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AutoPtrHelper.h:54:3: style: Class 'AutoPtr < GridDensityProvider >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AutoPtr(std::auto_ptr_ref<T> ref) : std::auto_ptr<T>(ref)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\BBox.h:50:28: style: Class 'BBox < Vec2i >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  template<class T> inline BBox(const BBox<T> &b) : _min(b.getMin()), _max(b.getMax())
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeCamera.h:58:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Node.h:59:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeCamera.h:58:16: note: Function in derived class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeViewLayer.h:56:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Node.h:59:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeViewLayer.h:56:16: note: Function in derived class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneHash.h:48:3: style: The function 'visitNodeCamera' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(NodeCamera);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:94:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeCamera)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneHash.h:48:3: note: Function in derived class
  VISIT_DECL(NodeCamera);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneHash.h:49:3: style: The function 'visitNodeViewLayer' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(NodeViewLayer);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:97:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeViewLayer)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneHash.h:49:3: note: Function in derived class
  VISIT_DECL(NodeViewLayer);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneHash.h:50:3: style: The function 'visitIndexedFaceSet' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(IndexedFaceSet);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:104:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(IndexedFaceSet)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneHash.h:50:3: note: Function in derived class
  VISIT_DECL(IndexedFaceSet);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:62:20: style: The function 'duplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual WVertex *duplicate()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:82:20: note: Virtual function in base class
  virtual WVertex *duplicate();
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:62:20: note: Function in derived class
  virtual WVertex *duplicate()
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:147:18: style: The function 'duplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual WEdge *duplicate()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:585:18: note: Virtual function in base class
  virtual WEdge *duplicate();
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:147:18: note: Function in derived class
  virtual WEdge *duplicate()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:530:18: style: The function 'duplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual WFace *duplicate()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:760:18: note: Virtual function in base class
  virtual WFace *duplicate();
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:530:18: note: Function in derived class
  virtual WFace *duplicate()
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:550:18: style: The function 'instanciateEdge' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual WEdge *instanciateEdge() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:987:18: note: Virtual function in base class
  virtual WEdge *instanciateEdge() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:550:18: note: Function in derived class
  virtual WEdge *instanciateEdge() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:689:16: style: The function 'ResetUserData' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void ResetUserData()
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:1015:16: note: Virtual function in base class
  virtual void ResetUserData()
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:689:16: note: Function in derived class
  virtual void ResetUserData()
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:734:19: style: The function 'duplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual WShape *duplicate()
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:1063:19: note: Virtual function in base class
  virtual WShape *duplicate();
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:734:19: note: Function in derived class
  virtual WShape *duplicate()
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:755:18: style: The function 'instanciateFace' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual WFace *instanciateFace() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:1203:18: note: Virtual function in base class
  virtual WFace *instanciateFace() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:755:18: note: Function in derived class
  virtual WFace *instanciateFace() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:768:18: style: The function 'MakeFace' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual WFace *MakeFace(vector<WVertex *> &iVertexList,
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:1217:18: note: Virtual function in base class
  virtual WFace *MakeFace(vector<WVertex *> &iVertexList,
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:768:18: note: Function in derived class
  virtual WFace *MakeFace(vector<WVertex *> &iVertexList,
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:790:18: style: The function 'MakeFace' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual WFace *MakeFace(vector<WVertex *> &iVertexList,
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:1232:18: note: Virtual function in base class
  virtual WFace *MakeFace(vector<WVertex *> &iVertexList,
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.h:790:18: note: Function in derived class
  virtual WFace *MakeFace(vector<WVertex *> &iVertexList,
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\TriangleRep.h:134:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:109:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\TriangleRep.h:134:16: note: Function in derived class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\TriangleRep.h:141:16: style: The function 'ComputeBBox' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void ComputeBBox();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:121:16: note: Virtual function in base class
  virtual void ComputeBBox() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\TriangleRep.h:141:16: note: Function in derived class
  virtual void ComputeBBox();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeDrawingStyle.h:77:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeGroup.h:67:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeDrawingStyle.h:77:16: note: Function in derived class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\LineRep.h:132:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:109:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\LineRep.h:132:16: note: Function in derived class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\LineRep.h:139:16: style: The function 'ComputeBBox' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void ComputeBBox();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:121:16: note: Virtual function in base class
  virtual void ComputeBBox() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\LineRep.h:139:16: note: Function in derived class
  virtual void ComputeBBox();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeLight.h:45:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Node.h:59:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeLight.h:45:16: note: Function in derived class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\VertexRep.h:52:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:109:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\VertexRep.h:52:16: note: Function in derived class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\VertexRep.h:59:16: style: The function 'ComputeBBox' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void ComputeBBox();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\Rep.h:121:16: note: Virtual function in base class
  virtual void ComputeBBox() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\VertexRep.h:59:16: note: Function in derived class
  virtual void ComputeBBox();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GridHelpers.h:86:10: style: Local variable 't' shadows outer variable [shadowVariable]
    real t;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GridHelpers.h:76:8: note: Shadowed declaration
  real t, u, v;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GridHelpers.h:86:10: note: Shadow variable
    real t;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GridHelpers.h:109:10: style: Local variable 't' shadows outer variable [shadowVariable]
    real t = GeomUtils::distPointSegment(point, poly.getVertices()[i], poly.getVertices()[i + 1]);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GridHelpers.h:101:8: note: Shadowed declaration
  real t, u, v;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GridHelpers.h:109:10: note: Shadow variable
    real t = GeomUtils::distPointSegment(point, poly.getVertices()[i], poly.getVertices()[i + 1]);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:275:49: performance: Function parameter 'it' should be passed by const reference. [passedByValue]
    inline face_iterator(incoming_edge_iterator it)
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:32:3: style: Class 'AppCanvas' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AppCanvas(AppView *iViewer);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FitCurve.cpp:423:10: style: The scope of the variable 'dist' can be reduced. [variableScope]
  double dist;    /* Current error */
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FitCurve.cpp:521:7: style: The scope of the variable 'maxIterations' can be reduced. [variableScope]
  int maxIterations = 4; /* Max times to try iterating */
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\FitCurve.cpp:523:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:37:16: style: The function 'preDraw' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void preDraw();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:101:16: note: Virtual function in base class
  virtual void preDraw();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:37:16: note: Function in derived class
  virtual void preDraw();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:40:16: style: The function 'postDraw' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void postDraw();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:107:16: note: Virtual function in base class
  virtual void postDraw();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:40:16: note: Function in derived class
  virtual void postDraw();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:43:16: style: The function 'Erase' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void Erase();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:123:16: note: Virtual function in base class
  virtual void Erase();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:43:16: note: Function in derived class
  virtual void Erase();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:46:16: style: The function 'init' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void init();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:117:16: note: Virtual function in base class
  virtual void init() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:46:16: note: Function in derived class
  virtual void init();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:49:16: style: The function 'readColorPixels' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void readColorPixels(int x, int y, int w, int h, RGBImage &oImage) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:126:16: note: Virtual function in base class
  virtual void readColorPixels(int x, int y, int w, int h, RGBImage &oImage) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:49:16: note: Function in derived class
  virtual void readColorPixels(int x, int y, int w, int h, RGBImage &oImage) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:51:16: style: The function 'readDepthPixels' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void readDepthPixels(int x, int y, int w, int h, GrayImage &oImage) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:128:16: note: Virtual function in base class
  virtual void readDepthPixels(int x, int y, int w, int h, GrayImage &oImage) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:51:16: note: Function in derived class
  virtual void readDepthPixels(int x, int y, int w, int h, GrayImage &oImage) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:53:23: style: The function 'scene3DBBox' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual BBox<Vec3r> scene3DBBox() const;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:197:23: note: Virtual function in base class
  virtual BBox<Vec3r> scene3DBBox() const = 0;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:53:23: note: Function in derived class
  virtual BBox<Vec3r> scene3DBBox() const;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:56:16: style: The function 'RenderStroke' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void RenderStroke(Stroke *);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:114:16: note: Virtual function in base class
  virtual void RenderStroke(Stroke *iStroke) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:56:16: note: Function in derived class
  virtual void RenderStroke(Stroke *);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:57:16: style: The function 'update' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void update();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:131:16: note: Virtual function in base class
  virtual void update() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:57:16: note: Function in derived class
  virtual void update();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:60:15: style: The function 'width' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int width() const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:194:15: note: Virtual function in base class
  virtual int width() const = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:60:15: note: Function in derived class
  virtual int width() const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:61:15: style: The function 'height' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int height() const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:195:15: note: Virtual function in base class
  virtual int height() const = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:61:15: note: Function in derived class
  virtual int height() const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:62:23: style: The function 'border' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual BBox<Vec2i> border() const;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.h:196:23: note: Virtual function in base class
  virtual BBox<Vec2i> border() const = 0;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.h:62:23: note: Function in derived class
  virtual BBox<Vec2i> border() const;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:817:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         woe++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:830:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         woe++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:839:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         woe++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:891:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         woe++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:1257:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         v++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:1261:94: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<WEdge *>::iterator e = _EdgeList.begin(), eend = _EdgeList.end(); e != eend; e++) {
                                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:1274:94: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<WFace *>::iterator f = _FaceList.begin(), fend = _FaceList.end(); f != fend; f++) {
                                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:1357:82: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<WShape *>::iterator it = _wshapes.begin(); it != _wshapes.end(); it++) {
                                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GridHelpers.h:158:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       woe++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.cpp:154:13: style: The scope of the variable 'jj' can be reduced. [variableScope]
    int ii, jj;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\AppCanvas.cpp:204:13: style: The scope of the variable 'jj' can be reduced. [variableScope]
    int ii, jj;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomCleaner.cpp:72:67: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (iv = indexedVertices.begin(); iv != indexedVertices.end(); iv++) {
                                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomCleaner.cpp:115:3: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  v++;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomCleaner.cpp:118:31: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (; v != vertices.end(); v++) {
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomCleaner.cpp:135:71: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (v = compressedVertices.begin(); v != compressedVertices.end(); v++) {
                                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomCleaner.cpp:224:20: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (; v != end; v++) {
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomCleaner.cpp:243:43: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (v = newVertices.begin(); v != end; v++) {
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\Controller.cpp:77:13: warning: Member variable 'Controller::_render_count' is not initialized in the constructor. [uninitMemberVar]
Controller::Controller()
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\Controller.cpp:77:13: warning: Member variable 'Controller::_suggestiveContourKrDerivativeEpsilon' is not initialized in the constructor. [uninitMemberVar]
Controller::Controller()
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapTesselator.h:53:5: performance: Variable '_nature' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _nature = Nature::SILHOUETTE | Nature::BORDER | Nature::CREASE;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStyleModule.h:40:5: performance: Variable '_buffer' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _buffer = buffer;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomUtils.cpp:616:8: style: The scope of the variable 'scale' can be reduced. [variableScope]
  real scale;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomUtils.cpp:757:11: style: The scope of the variable 'N' can be reduced. [variableScope]
  real t, N, D;                  // intersect parameter t = N / D
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomUtils.cpp:757:14: style: The scope of the variable 'D' can be reduced. [variableScope]
  real t, N, D;                  // intersect parameter t = N / D
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomUtils.cpp:351:32: style: Parameter 'boxcenter' can be declared with const [constParameter]
bool overlapTriangleBox(Vec3r &boxcenter, Vec3r &boxhalfsize, Vec3r triverts[3])
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomUtils.cpp:797:36: style: Parameter 'normal' can be declared with const [constParameter]
inline bool overlapPlaneBox(Vec3r &normal, real d, Vec3r &maxbox)
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GeomUtils.cpp:797:59: style: Parameter 'maxbox' can be declared with const [constParameter]
inline bool overlapPlaneBox(Vec3r &normal, real d, Vec3r &maxbox)
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\Controller.cpp:120:3: warning: Class 'Controller' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
  _Canvas = new AppCanvas;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\Controller.cpp:120:3: warning: Class 'Controller' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
  _Canvas = new AppCanvas;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:44:5: warning: Class 'WingedEdgeBuilder' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
    _winged_edge = new WingedEdge;  // Not deleted by the destructor
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:44:5: warning: Class 'WingedEdgeBuilder' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
    _winged_edge = new WingedEdge;  // Not deleted by the destructor
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\OrientedLineRep.h:47:10: style: Class 'OrientedLineRep' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline OrientedLineRep(const vector<Vec3r> &vertices) : LineRep(vertices)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\OrientedLineRep.h:52:10: style: Class 'OrientedLineRep' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline OrientedLineRep(const list<Vec3r> &vertices) : LineRep(vertices)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:60:3: style: The function 'visitNode' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(Node);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:90:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(Node)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:60:3: note: Function in derived class
  VISIT_DECL(Node);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:61:3: style: The function 'visitNodeShape' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(NodeShape);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:91:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeShape)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:61:3: note: Function in derived class
  VISIT_DECL(NodeShape);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:62:3: style: The function 'visitNodeGroup' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(NodeGroup);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:92:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeGroup)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:62:3: note: Function in derived class
  VISIT_DECL(NodeGroup);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:63:3: style: The function 'visitNodeLight' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(NodeLight);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:93:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeLight)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:63:3: note: Function in derived class
  VISIT_DECL(NodeLight);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:64:3: style: The function 'visitNodeDrawingStyle' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(NodeDrawingStyle);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:95:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeDrawingStyle)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:64:3: note: Function in derived class
  VISIT_DECL(NodeDrawingStyle);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:65:3: style: The function 'visitNodeTransform' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(NodeTransform);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:96:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeTransform)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:65:3: note: Function in derived class
  VISIT_DECL(NodeTransform);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:67:3: style: The function 'visitLineRep' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(LineRep);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:100:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(LineRep)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:67:3: note: Function in derived class
  VISIT_DECL(LineRep);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:68:3: style: The function 'visitOrientedLineRep' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(OrientedLineRep);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:101:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(OrientedLineRep)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:68:3: note: Function in derived class
  VISIT_DECL(OrientedLineRep);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:69:3: style: The function 'visitTriangleRep' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(TriangleRep);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:102:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(TriangleRep)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:69:3: note: Function in derived class
  VISIT_DECL(TriangleRep);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:70:3: style: The function 'visitVertexRep' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(VertexRep);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:103:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(VertexRep)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:70:3: note: Function in derived class
  VISIT_DECL(VertexRep);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:71:3: style: The function 'visitIndexedFaceSet' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(IndexedFaceSet);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:104:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(IndexedFaceSet)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:71:3: note: Function in derived class
  VISIT_DECL(IndexedFaceSet);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:73:16: style: The function 'visitNodeShapeBefore' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void visitNodeShapeBefore(NodeShape &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:91:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeShape)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:73:16: note: Function in derived class
  virtual void visitNodeShapeBefore(NodeShape &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:74:16: style: The function 'visitNodeShapeAfter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void visitNodeShapeAfter(NodeShape &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:91:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeShape)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:74:16: note: Function in derived class
  virtual void visitNodeShapeAfter(NodeShape &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:75:16: style: The function 'visitNodeGroupBefore' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void visitNodeGroupBefore(NodeGroup &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:92:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeGroup)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:75:16: note: Function in derived class
  virtual void visitNodeGroupBefore(NodeGroup &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.cpp:178:12: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned i, x, y, z;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:76:16: style: The function 'visitNodeGroupAfter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void visitNodeGroupAfter(NodeGroup &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:92:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeGroup)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:76:16: note: Function in derived class
  virtual void visitNodeGroupAfter(NodeGroup &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:77:16: style: The function 'visitNodeDrawingStyleBefore' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void visitNodeDrawingStyleBefore(NodeDrawingStyle &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:95:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeDrawingStyle)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:77:16: note: Function in derived class
  virtual void visitNodeDrawingStyleBefore(NodeDrawingStyle &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:78:16: style: The function 'visitNodeDrawingStyleAfter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void visitNodeDrawingStyleAfter(NodeDrawingStyle &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:95:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeDrawingStyle)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:78:16: note: Function in derived class
  virtual void visitNodeDrawingStyleAfter(NodeDrawingStyle &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:79:16: style: The function 'visitNodeTransformBefore' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void visitNodeTransformBefore(NodeTransform &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:96:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeTransform)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:79:16: note: Function in derived class
  virtual void visitNodeTransformBefore(NodeTransform &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.cpp:238:31: style: Parameter 'current_cell' can be declared with const [constParameter]
bool Grid::nextRayCell(Vec3u &current_cell, Vec3u &next_cell)
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:80:16: style: The function 'visitNodeTransformAfter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void visitNodeTransformAfter(NodeTransform &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:96:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeTransform)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:80:16: note: Function in derived class
  virtual void visitNodeTransformAfter(NodeTransform &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\PSStrokeRenderer.h:47:16: style: The function 'RenderStrokeRep' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void RenderStrokeRep(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRenderer.h:131:16: note: Virtual function in base class
  virtual void RenderStrokeRep(StrokeRep *iStrokeRep) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\PSStrokeRenderer.h:47:16: note: Function in derived class
  virtual void RenderStrokeRep(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\PSStrokeRenderer.h:48:16: style: The function 'RenderStrokeRepBasic' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void RenderStrokeRepBasic(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRenderer.h:132:16: note: Virtual function in base class
  virtual void RenderStrokeRepBasic(StrokeRep *iStrokeRep) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\PSStrokeRenderer.h:48:16: note: Function in derived class
  virtual void RenderStrokeRepBasic(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\TextStrokeRenderer.h:59:16: style: The function 'RenderStrokeRep' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void RenderStrokeRep(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRenderer.h:131:16: note: Virtual function in base class
  virtual void RenderStrokeRep(StrokeRep *iStrokeRep) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\TextStrokeRenderer.h:59:16: note: Function in derived class
  virtual void RenderStrokeRep(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\TextStrokeRenderer.h:60:16: style: The function 'RenderStrokeRepBasic' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void RenderStrokeRepBasic(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRenderer.h:132:16: note: Virtual function in base class
  virtual void RenderStrokeRepBasic(StrokeRep *iStrokeRep) const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\TextStrokeRenderer.h:60:16: note: Function in derived class
  virtual void RenderStrokeRepBasic(StrokeRep *iStrokeRep) const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.cpp:312:13: style: Variable 'end' is assigned a value that is never used. [unreadVariable]
  Vec3r end = Vec3r(orig + FLT_MAX * dir / dir.norm());
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.cpp:325:13: style: Variable 'end' is assigned a value that is never used. [unreadVariable]
  Vec3r end = Vec3r(orig + FLT_MAX * dir / dir.norm());
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.cpp:97:82: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (OccludersSet::iterator it = _occluders.begin(); it != _occluders.end(); it++) {
                                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.cpp:185:55: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (it = vertices.begin(); it != vertices.end(); it++) {
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\PythonInterpreter.h:70:7: style: The function 'interpretFile' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int interpretFile(const string &filename)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Interpreter.h:46:15: note: Virtual function in base class
  virtual int interpretFile(const string &filename) = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\PythonInterpreter.h:70:7: note: Function in derived class
  int interpretFile(const string &filename)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\PythonInterpreter.h:143:8: style: The function 'reset' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void reset()
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\Interpreter.h:53:16: note: Virtual function in base class
  virtual void reset() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\system\PythonInterpreter.h:143:8: note: Function in derived class
  void reset()
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\OrientedLineRep.h:61:16: style: The function 'accept' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\LineRep.h:132:16: note: Virtual function in base class
  virtual void accept(SceneVisitor &v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\OrientedLineRep.h:61:16: note: Function in derived class
  virtual void accept(SceneVisitor &v);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapTesselator.h:120:16: style: The function 'AddVertexToLine' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void AddVertexToLine(LineRep *iLine, SVertex *v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapTesselator.h:97:16: note: Virtual function in base class
  virtual void AddVertexToLine(LineRep *iLine, SVertex *v) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapTesselator.h:120:16: note: Function in derived class
  virtual void AddVertexToLine(LineRep *iLine, SVertex *v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapTesselator.h:141:16: style: The function 'AddVertexToLine' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void AddVertexToLine(LineRep *iLine, SVertex *v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapTesselator.h:97:16: note: Virtual function in base class
  virtual void AddVertexToLine(LineRep *iLine, SVertex *v) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapTesselator.h:141:16: note: Function in derived class
  virtual void AddVertexToLine(LineRep *iLine, SVertex *v)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:57:3: style: The function 'visitIndexedFaceSet' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(IndexedFaceSet);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:104:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(IndexedFaceSet)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:57:3: note: Function in derived class
  VISIT_DECL(IndexedFaceSet);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:58:3: style: The function 'visitNodeShape' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(NodeShape);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:91:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeShape)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:58:3: note: Function in derived class
  VISIT_DECL(NodeShape);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:59:3: style: The function 'visitNodeTransform' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(NodeTransform);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:96:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeTransform)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:59:3: note: Function in derived class
  VISIT_DECL(NodeTransform);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:61:16: style: The function 'visitNodeTransformAfter' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void visitNodeTransformAfter(NodeTransform &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\SceneVisitor.h:96:3: note: Virtual function in base class
  VISIT_COMPLETE_DEF(NodeTransform)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:61:16: note: Function in derived class
  virtual void visitNodeTransformAfter(NodeTransform &);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdgeBuilder.h:40:3: style: The function 'visitIndexedFaceSet' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  VISIT_DECL(IndexedFaceSet);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:57:3: note: Virtual function in base class
  VISIT_DECL(IndexedFaceSet);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdgeBuilder.h:40:3: note: Function in derived class
  VISIT_DECL(IndexedFaceSet);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdgeBuilder.h:43:16: style: The function 'buildWVertices' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void buildWVertices(WShape &shape, const float *vertices, unsigned vsize);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.h:117:16: note: Virtual function in base class
  virtual void buildWVertices(WShape &shape, const float *vertices, unsigned vsize);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdgeBuilder.h:43:16: note: Function in derived class
  virtual void buildWVertices(WShape &shape, const float *vertices, unsigned vsize);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStyleModule.h:48:15: style: The function 'interpret' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int interpret()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StyleModule.h:97:15: note: Virtual function in base class
  virtual int interpret()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStyleModule.h:48:15: note: Function in derived class
  virtual int interpret()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStyleModule.h:76:15: style: The function 'interpret' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int interpret()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StyleModule.h:97:15: note: Virtual function in base class
  virtual int interpret()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\blender_interface\BlenderStyleModule.h:76:15: note: Function in derived class
  virtual int interpret()
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapTesselator.h:165:12: style: The scope of the variable 'line' can be reduced. [variableScope]
  LineRep *line;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\ScenePrettyPrinter.h:37:35: performance: Function parameter 'filename' should be passed by const reference. [passedByValue]
  ScenePrettyPrinter(const string filename = "SceneLog.txt") : SceneVisitor()
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\application\Controller.cpp:1013:76: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<unsigned>::const_iterator it = vec.begin(); it != vec.end(); it++) {
                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:72:16: warning: Virtual function 'clear' is called from destructor '~HashGrid()' at line 66. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:66:5: note: Calling clear
    clear();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:72:16: note: clear is a virtual function
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:72:16: style: The function 'clear' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:209:16: note: Virtual function in base class
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:72:16: note: Function in derived class
  virtual void clear();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:82:16: style: The function 'configure' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void configure(const Vec3r &orig, const Vec3r &size, unsigned nb);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:219:16: note: Virtual function in base class
  virtual void configure(const Vec3r &orig, const Vec3r &size, unsigned nb);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:82:16: note: Function in derived class
  virtual void configure(const Vec3r &orig, const Vec3r &size, unsigned nb);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:85:17: style: The function 'getCell' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Cell *getCell(const Vec3u &p)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:247:17: note: Virtual function in base class
  virtual Cell *getCell(const Vec3u &coord) = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:85:17: note: Function in derived class
  virtual Cell *getCell(const Vec3u &p)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:97:16: style: The function 'fillCell' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void fillCell(const Vec3u &p, Cell &cell)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Grid.h:244:16: note: Virtual function in base class
  virtual void fillCell(const Vec3u &coord, Cell &cell) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.h:97:16: note: Function in derived class
  virtual void fillCell(const Vec3u &p, Cell &cell)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\HashGrid.cpp:29:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (GridHashTable::iterator it = _cells.begin(); it != _cells.end(); it++) {
                                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:48:18: style: The scope of the variable 'a_normEPS' can be reduced. [variableScope]
  double a_norm, a_normEPS, thr, thr_nn;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:48:29: style: The scope of the variable 'thr' can be reduced. [variableScope]
  double a_norm, a_normEPS, thr, thr_nn;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:48:34: style: The scope of the variable 'thr_nn' can be reduced. [variableScope]
  double a_norm, a_normEPS, thr, thr_nn;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:49:7: style: The scope of the variable 'nb_iter' can be reduced. [variableScope]
  int nb_iter = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:50:7: style: The scope of the variable 'jj' can be reduced. [variableScope]
  int jj;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:20: style: The scope of the variable 'ik' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:24: style: The scope of the variable 'l' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:27: style: The scope of the variable 'm' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:30: style: The scope of the variable 'lm' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:34: style: The scope of the variable 'mq' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:38: style: The scope of the variable 'lq' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:42: style: The scope of the variable 'll' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:46: style: The scope of the variable 'mm' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:50: style: The scope of the variable 'imv' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:55: style: The scope of the variable 'im' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:59: style: The scope of the variable 'iq' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:63: style: The scope of the variable 'ilv' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:51:68: style: The scope of the variable 'il' can be reduced. [variableScope]
  int i, j, k, ij, ik, l, m, lm, mq, lq, ll, mm, imv, im, iq, ilv, il, nn;
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:53:16: style: The scope of the variable 'a_lm' can be reduced. [variableScope]
  double a_ij, a_lm, a_ll, a_mm, a_im, a_il;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:53:22: style: The scope of the variable 'a_ll' can be reduced. [variableScope]
  double a_ij, a_lm, a_ll, a_mm, a_im, a_il;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:53:28: style: The scope of the variable 'a_mm' can be reduced. [variableScope]
  double a_ij, a_lm, a_ll, a_mm, a_im, a_il;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:53:34: style: The scope of the variable 'a_im' can be reduced. [variableScope]
  double a_ij, a_lm, a_ll, a_mm, a_im, a_il;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:53:40: style: The scope of the variable 'a_il' can be reduced. [variableScope]
  double a_ij, a_lm, a_ll, a_mm, a_im, a_il;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:54:10: style: The scope of the variable 'a_lm_2' can be reduced. [variableScope]
  double a_lm_2;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:55:10: style: The scope of the variable 'v_ilv' can be reduced. [variableScope]
  double v_ilv, v_imv;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:55:17: style: The scope of the variable 'v_imv' can be reduced. [variableScope]
  double v_ilv, v_imv;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:57:10: style: The scope of the variable 'sinx' can be reduced. [variableScope]
  double sinx, sinx_2, cosx, cosx_2, sincos;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:57:16: style: The scope of the variable 'sinx_2' can be reduced. [variableScope]
  double sinx, sinx_2, cosx, cosx_2, sincos;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:57:24: style: The scope of the variable 'cosx' can be reduced. [variableScope]
  double sinx, sinx_2, cosx, cosx_2, sincos;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:57:30: style: The scope of the variable 'cosx_2' can be reduced. [variableScope]
  double sinx, sinx_2, cosx, cosx_2, sincos;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:57:38: style: The scope of the variable 'sincos' can be reduced. [variableScope]
  double sinx, sinx_2, cosx, cosx_2, sincos;
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\matrix_util.cpp:58:10: style: The scope of the variable 'delta' can be reduced. [variableScope]
  double delta;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Noise.cpp:89:9: style: The scope of the variable 'vec' can be reduced. [variableScope]
  float vec;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\Noise.cpp:242:13: style: The scope of the variable 'k' can be reduced. [variableScope]
  int i, j, k;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:175:12: warning: Member variable 'incoming_edge_iterator::_vertex' is not initialized in the constructor. [uninitMemberVar]
    inline incoming_edge_iterator() : input_iterator<WOEdge *, ptrdiff_t>()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:175:12: warning: Member variable 'incoming_edge_iterator::_begin' is not initialized in the constructor. [uninitMemberVar]
    inline incoming_edge_iterator() : input_iterator<WOEdge *, ptrdiff_t>()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.h:175:12: warning: Member variable 'incoming_edge_iterator::_current' is not initialized in the constructor. [uninitMemberVar]
    inline incoming_edge_iterator() : input_iterator<WOEdge *, ptrdiff_t>()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\GaussianFilter.cpp:45:33: warning: 'operator=' should check for assignment to self to avoid problems with dynamic memory. [operatorEqToSelf]
GaussianFilter &GaussianFilter::operator=(const GaussianFilter &iBrother)
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\normal_cycle.cpp:43:14: warning: Member variable 'NormalCycle::eigen_value_' is not initialized in the constructor. [uninitMemberVar]
NormalCycle::NormalCycle()
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\normal_cycle.cpp:43:14: warning: Member variable 'NormalCycle::M_' is not initialized in the constructor. [uninitMemberVar]
NormalCycle::NormalCycle()
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\normal_cycle.cpp:43:14: warning: Member variable 'NormalCycle::i_' is not initialized in the constructor. [uninitMemberVar]
NormalCycle::NormalCycle()
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.h:103:16: warning: Virtual function 'BuildPyramid' is called from constructor 'GaussianPyramid(const GrayImage&level0,int nbLevels,float iSigma=1.0f)' at line 130. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void BuildPyramid(const GrayImage &level0, unsigned nbLevels);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.cpp:130:3: note: Calling BuildPyramid
  BuildPyramid(level0, nbLevels);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.h:103:16: note: BuildPyramid is a virtual function
  virtual void BuildPyramid(const GrayImage &level0, unsigned nbLevels);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.h:104:16: warning: Virtual function 'BuildPyramid' is called from constructor 'GaussianPyramid(GrayImage*level0,int nbLevels,float iSigma=1.0f)' at line 137. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void BuildPyramid(GrayImage *level0, unsigned nbLevels);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.cpp:137:3: note: Calling BuildPyramid
  BuildPyramid(level0, nbLevels);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.h:104:16: note: BuildPyramid is a virtual function
  virtual void BuildPyramid(GrayImage *level0, unsigned nbLevels);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.h:103:16: style: The function 'BuildPyramid' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void BuildPyramid(const GrayImage &level0, unsigned nbLevels);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.h:53:16: note: Virtual function in base class
  virtual void BuildPyramid(const GrayImage &level0, unsigned nbLevels) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.h:103:16: note: Function in derived class
  virtual void BuildPyramid(const GrayImage &level0, unsigned nbLevels);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.h:104:16: style: The function 'BuildPyramid' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void BuildPyramid(GrayImage *level0, unsigned nbLevels);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.h:56:16: note: Virtual function in base class
  virtual void BuildPyramid(GrayImage *level0, unsigned nbLevels) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\image\ImagePyramid.h:104:16: note: Function in derived class
  virtual void BuildPyramid(GrayImage *level0, unsigned nbLevels);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:104:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Id *)py_id)->id = new Id(id.getFirst(), id.getSecond());
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:199:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Interface0D *)py_if0D)->if0D = &if0D;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:200:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Interface0D *)py_if0D)->borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:207:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Interface1D *)py_if1D)->if1D = &if1D;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:208:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Interface1D *)py_if1D)->borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:215:4: style: C-style pointer casting [cstyleCast]
  ((BPy_SVertex *)py_sv)->sv = &sv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:216:4: style: C-style pointer casting [cstyleCast]
  ((BPy_SVertex *)py_sv)->py_if0D.if0D = ((BPy_SVertex *)py_sv)->sv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:217:4: style: C-style pointer casting [cstyleCast]
  ((BPy_SVertex *)py_sv)->py_if0D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:224:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdgeSharp *)py_fe)->fes = &fes;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:225:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdgeSharp *)py_fe)->py_fe.fe = ((BPy_FEdgeSharp *)py_fe)->fes;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:226:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdgeSharp *)py_fe)->py_fe.py_if1D.if1D = ((BPy_FEdgeSharp *)py_fe)->fes;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:227:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdgeSharp *)py_fe)->py_fe.py_if1D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:234:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdgeSmooth *)py_fe)->fes = &fes;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:235:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdgeSmooth *)py_fe)->py_fe.fe = ((BPy_FEdgeSmooth *)py_fe)->fes;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:236:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdgeSmooth *)py_fe)->py_fe.py_if1D.if1D = ((BPy_FEdgeSmooth *)py_fe)->fes;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:237:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdgeSmooth *)py_fe)->py_fe.py_if1D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:244:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdge *)py_fe)->fe = &fe;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:245:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdge *)py_fe)->py_if1D.if1D = ((BPy_FEdge *)py_fe)->fe;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:246:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FEdge *)py_fe)->py_if1D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:262:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Stroke *)py_s)->s = &s;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:263:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Stroke *)py_s)->py_if1D.if1D = ((BPy_Stroke *)py_s)->s;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:264:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Stroke *)py_s)->py_if1D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:271:4: style: C-style pointer casting [cstyleCast]
  ((BPy_StrokeAttribute *)py_sa)->sa = &sa;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:272:4: style: C-style pointer casting [cstyleCast]
  ((BPy_StrokeAttribute *)py_sa)->borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:288:4: style: C-style pointer casting [cstyleCast]
  ((BPy_StrokeVertex *)py_sv)->sv = &sv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:289:4: style: C-style pointer casting [cstyleCast]
  ((BPy_StrokeVertex *)py_sv)->py_cp.cp = ((BPy_StrokeVertex *)py_sv)->sv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:290:4: style: C-style pointer casting [cstyleCast]
  ((BPy_StrokeVertex *)py_sv)->py_cp.py_if0D.if0D = ((BPy_StrokeVertex *)py_sv)->sv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:291:4: style: C-style pointer casting [cstyleCast]
  ((BPy_StrokeVertex *)py_sv)->py_cp.py_if0D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:298:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewVertex *)py_vv)->vv = &vv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:299:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewVertex *)py_vv)->py_if0D.if0D = ((BPy_ViewVertex *)py_vv)->vv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:300:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewVertex *)py_vv)->py_if0D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:307:4: style: C-style pointer casting [cstyleCast]
  ((BPy_NonTVertex *)py_ntv)->ntv = &ntv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:308:4: style: C-style pointer casting [cstyleCast]
  ((BPy_NonTVertex *)py_ntv)->py_vv.vv = ((BPy_NonTVertex *)py_ntv)->ntv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:309:4: style: C-style pointer casting [cstyleCast]
  ((BPy_NonTVertex *)py_ntv)->py_vv.py_if0D.if0D = ((BPy_NonTVertex *)py_ntv)->ntv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:310:4: style: C-style pointer casting [cstyleCast]
  ((BPy_NonTVertex *)py_ntv)->py_vv.py_if0D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:317:4: style: C-style pointer casting [cstyleCast]
  ((BPy_TVertex *)py_tv)->tv = &tv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:318:4: style: C-style pointer casting [cstyleCast]
  ((BPy_TVertex *)py_tv)->py_vv.vv = ((BPy_TVertex *)py_tv)->tv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:319:4: style: C-style pointer casting [cstyleCast]
  ((BPy_TVertex *)py_tv)->py_vv.py_if0D.if0D = ((BPy_TVertex *)py_tv)->tv;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:320:4: style: C-style pointer casting [cstyleCast]
  ((BPy_TVertex *)py_tv)->py_vv.py_if0D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:327:4: style: C-style pointer casting [cstyleCast]
  ((BPy_BBox *)py_bb)->bb = new BBox<Vec3r>(bb);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:334:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewEdge *)py_ve)->ve = &ve;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:335:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewEdge *)py_ve)->py_if1D.if1D = ((BPy_ViewEdge *)py_ve)->ve;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:336:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewEdge *)py_ve)->py_if1D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:343:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Chain *)py_c)->c = &c;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:344:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Chain *)py_c)->py_c.c = ((BPy_Chain *)py_c)->c;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:345:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Chain *)py_c)->py_c.py_if1D.if1D = ((BPy_Chain *)py_c)->c;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:346:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Chain *)py_c)->py_c.py_if1D.borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:353:4: style: C-style pointer casting [cstyleCast]
  ((BPy_SShape *)py_ss)->ss = &ss;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:354:4: style: C-style pointer casting [cstyleCast]
  ((BPy_SShape *)py_ss)->borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:361:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewShape *)py_vs)->vs = &vs;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:362:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewShape *)py_vs)->borrowed = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:363:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewShape *)py_vs)->py_ss = NULL;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:370:4: style: C-style pointer casting [cstyleCast]
  ((BPy_FrsMaterial *)py_m)->m = new FrsMaterial(m);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:391:4: style: C-style pointer casting [cstyleCast]
  ((BPy_CurvePoint *)py_cp)->cp = new CurvePoint(cp);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:392:4: style: C-style pointer casting [cstyleCast]
  ((BPy_CurvePoint *)py_cp)->py_if0D.if0D = ((BPy_CurvePoint *)py_cp)->cp;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:393:4: style: C-style pointer casting [cstyleCast]
  ((BPy_CurvePoint *)py_cp)->py_if0D.borrowed = false;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:412:4: style: C-style pointer casting [cstyleCast]
  ((BPy_AdjacencyIterator *)py_a_it)->a_it = new AdjacencyIterator(a_it);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:413:4: style: C-style pointer casting [cstyleCast]
  ((BPy_AdjacencyIterator *)py_a_it)->py_it.it = ((BPy_AdjacencyIterator *)py_a_it)->a_it;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:414:4: style: C-style pointer casting [cstyleCast]
  ((BPy_AdjacencyIterator *)py_a_it)->at_start = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:422:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Interface0DIterator *)py_if0D_it)->if0D_it = new Interface0DIterator(if0D_it);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:423:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Interface0DIterator *)py_if0D_it)->py_it.it =
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:424:8: style: C-style pointer casting [cstyleCast]
      ((BPy_Interface0DIterator *)py_if0D_it)->if0D_it;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:425:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Interface0DIterator *)py_if0D_it)->at_start = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:426:4: style: C-style pointer casting [cstyleCast]
  ((BPy_Interface0DIterator *)py_if0D_it)->reversed = reversed;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:433:4: style: C-style pointer casting [cstyleCast]
  ((BPy_CurvePointIterator *)py_cp_it)->cp_it = new CurveInternal::CurvePointIterator(cp_it);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:434:4: style: C-style pointer casting [cstyleCast]
  ((BPy_CurvePointIterator *)py_cp_it)->py_it.it = ((BPy_CurvePointIterator *)py_cp_it)->cp_it;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:442:4: style: C-style pointer casting [cstyleCast]
  ((BPy_StrokeVertexIterator *)py_sv_it)->sv_it = new StrokeInternal::StrokeVertexIterator(sv_it);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:443:4: style: C-style pointer casting [cstyleCast]
  ((BPy_StrokeVertexIterator *)py_sv_it)->py_it.it = ((BPy_StrokeVertexIterator *)py_sv_it)->sv_it;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:444:4: style: C-style pointer casting [cstyleCast]
  ((BPy_StrokeVertexIterator *)py_sv_it)->at_start = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:445:4: style: C-style pointer casting [cstyleCast]
  ((BPy_StrokeVertexIterator *)py_sv_it)->reversed = reversed;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:452:4: style: C-style pointer casting [cstyleCast]
  ((BPy_SVertexIterator *)py_sv_it)->sv_it = new ViewEdgeInternal::SVertexIterator(sv_it);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:453:4: style: C-style pointer casting [cstyleCast]
  ((BPy_SVertexIterator *)py_sv_it)->py_it.it = ((BPy_SVertexIterator *)py_sv_it)->sv_it;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:461:4: style: C-style pointer casting [cstyleCast]
  ((BPy_orientedViewEdgeIterator *)py_ove_it)->ove_it =
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:463:4: style: C-style pointer casting [cstyleCast]
  ((BPy_orientedViewEdgeIterator *)py_ove_it)->py_it.it =
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:464:8: style: C-style pointer casting [cstyleCast]
      ((BPy_orientedViewEdgeIterator *)py_ove_it)->ove_it;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:465:4: style: C-style pointer casting [cstyleCast]
  ((BPy_orientedViewEdgeIterator *)py_ove_it)->at_start = true;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:466:4: style: C-style pointer casting [cstyleCast]
  ((BPy_orientedViewEdgeIterator *)py_ove_it)->reversed = reversed;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:473:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewEdgeIterator *)py_ve_it)->ve_it = new ViewEdgeInternal::ViewEdgeIterator(ve_it);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:474:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ViewEdgeIterator *)py_ve_it)->py_it.it = ((BPy_ViewEdgeIterator *)py_ve_it)->ve_it;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:481:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ChainingIterator *)py_c_it)->c_it = new ChainingIterator(c_it);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:482:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ChainingIterator *)py_c_it)->py_ve_it.py_it.it = ((BPy_ChainingIterator *)py_c_it)->c_it;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:489:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ChainPredicateIterator *)py_cp_it)->cp_it = new ChainPredicateIterator(cp_it);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:490:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ChainPredicateIterator *)py_cp_it)->py_c_it.py_ve_it.py_it.it =
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:491:8: style: C-style pointer casting [cstyleCast]
      ((BPy_ChainPredicateIterator *)py_cp_it)->cp_it;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:498:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ChainSilhouetteIterator *)py_cs_it)->cs_it = new ChainSilhouetteIterator(cs_it);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:499:4: style: C-style pointer casting [cstyleCast]
  ((BPy_ChainSilhouetteIterator *)py_cs_it)->py_c_it.py_ve_it.py_it.it =
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:500:8: style: C-style pointer casting [cstyleCast]
      ((BPy_ChainSilhouetteIterator *)py_cs_it)->cs_it;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Convert.cpp:101:30: style: Parameter 'id' can be declared with const [constParameter]
PyObject *BPy_Id_from_Id(Id &id)
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:82:3: warning: Member variable 'UnaryFunction0D < double >::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction0D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:82:3: warning: Member variable 'UnaryFunction0D < float >::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction0D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:82:3: warning: Member variable 'UnaryFunction0D < unsigned int >::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction0D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:82:3: warning: Member variable 'UnaryFunction0D < ViewShape * >::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction0D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Id.cpp:76:26: style: C-style pointer casting [cstyleCast]
    self->id = new Id(*(((BPy_Id *)brother)->id));
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:147:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:147:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:153:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:153:7: note: Function in derived class
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:165:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:165:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:171:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:171:7: note: Function in derived class
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:183:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:183:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:189:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:189:7: note: Function in derived class
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:201:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:201:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:207:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:207:7: note: Function in derived class
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:219:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:219:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:225:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:225:7: note: Function in derived class
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:237:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:237:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:243:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:243:7: note: Function in derived class
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:255:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:255:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:261:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:261:7: note: Function in derived class
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:273:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:273:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:279:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:279:7: note: Function in derived class
  int operator()(Interface0DIterator &iter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:294:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:294:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:300:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:300:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:311:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:311:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:317:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:317:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:328:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:328:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:334:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:334:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:346:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:346:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:352:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:352:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:363:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:363:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:369:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:369:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:384:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:384:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:390:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:390:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:404:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:404:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:410:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:410:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:424:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:424:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:430:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:430:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:438:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:438:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:444:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:444:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:452:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:452:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:458:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:458:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:466:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:466:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:472:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:472:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:480:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:480:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:486:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:486:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:57:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:57:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:63:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:63:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:85:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:85:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:91:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:91:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:116:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:116:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:122:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:122:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:146:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:146:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:152:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:152:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:172:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:172:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:178:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:178:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:200:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:93:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:200:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:206:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.h:104:15: note: Virtual function in base class
  virtual int operator()(Interface0DIterator &iter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions0D.h:206:7: note: Function in derived class
  int operator()(Interface0DIterator &iter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_IntegrationType.cpp:212:21: style: The scope of the variable 'f' can be reduced. [variableScope]
  PyObject *m, *d, *f;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Interface0D.cpp:149:39: style: C-style pointer casting [cstyleCast]
  FEdge *fe = self->if0D->getFEdge(*(((BPy_Interface0D *)py_if0D)->if0D));
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Operators.cpp:553:9: style: C-style pointer casting [cstyleCast]
  if (!((BPy_BinaryPredicate1D *)obj)->bp1D) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_Operators.cpp:558:26: style: C-style pointer casting [cstyleCast]
  if (Operators::sort(*(((BPy_BinaryPredicate1D *)obj)->bp1D)) < 0) {
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_SShape.cpp:80:30: style: C-style pointer casting [cstyleCast]
    self->ss = new SShape(*(((BPy_SShape *)brother)->ss));
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_SShape.cpp:226:24: style: C-style pointer casting [cstyleCast]
  self->ss->setBBox(*(((BPy_BBox *)value)->bb));
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_SShape.cpp:243:53: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = vertices.begin(); it != vertices.end(); it++) {
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_SShape.cpp:263:47: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = edges.begin(); it != edges.end(); it++) {
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_StrokeAttribute.cpp:110:41: style: C-style pointer casting [cstyleCast]
      self->sa = new StrokeAttribute(*(((BPy_StrokeAttribute *)obj1)->sa));
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_StrokeAttribute.cpp:124:12: style: C-style pointer casting [cstyleCast]
        *(((BPy_StrokeAttribute *)obj1)->sa), *(((BPy_StrokeAttribute *)obj2)->sa), t);
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_StrokeAttribute.cpp:457:31: style: C-style pointer casting [cstyleCast]
  BPy_StrokeAttribute *self = (BPy_StrokeAttribute *)bmo->cb_user;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_StrokeAttribute.cpp:476:31: style: C-style pointer casting [cstyleCast]
  BPy_StrokeAttribute *self = (BPy_StrokeAttribute *)bmo->cb_user;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_StrokeAttribute.cpp:492:31: style: C-style pointer casting [cstyleCast]
  BPy_StrokeAttribute *self = (BPy_StrokeAttribute *)bmo->cb_user;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_StrokeAttribute.cpp:529:31: style: C-style pointer casting [cstyleCast]
  BPy_StrokeAttribute *self = (BPy_StrokeAttribute *)bmo->cb_user;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewMap.cpp:169:31: style: C-style pointer casting [cstyleCast]
  self->vm->setScene3dBBox(*(((BPy_BBox *)value)->bb));
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:190:34: warning: Either the condition '!ss' is redundant or there is possible null pointer dereference: ss. [nullPointerRedundantCheck]
  return BPy_SShape_from_SShape(*ss);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:187:7: note: Assuming that condition '!ss' is not redundant
  if (!ss) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:186:32: note: Assignment 'ss=self->vs->sshape()', assigned value is 0
  SShape *ss = self->vs->sshape();
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:190:34: note: Null pointer dereference
  return BPy_SShape_from_SShape(*ss);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:87:35: style: C-style pointer casting [cstyleCast]
      self->vs = new ViewShape(*(((BPy_ViewShape *)obj)->vs));
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:88:22: style: C-style pointer casting [cstyleCast]
      self->py_ss = ((BPy_ViewShape *)obj)->py_ss;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:93:25: style: C-style pointer casting [cstyleCast]
    BPy_SShape *py_ss = (BPy_SShape *)obj;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:199:23: style: C-style pointer casting [cstyleCast]
  BPy_SShape *py_ss = (BPy_SShape *)value;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:231:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  PyObject *item;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:274:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  PyObject *item;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:223:53: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = vertices.begin(); it != vertices.end(); it++) {
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\BPy_ViewShape.cpp:266:47: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = edges.begin(); it != edges.end(); it++) {
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_CurvePoint.cpp:95:36: style: C-style pointer casting [cstyleCast]
      self->cp = new CurvePoint(*(((BPy_CurvePoint *)obj1)->cp));
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_CurvePoint.cpp:120:24: style: C-style pointer casting [cstyleCast]
    CurvePoint *cp1 = ((BPy_CurvePoint *)obj1)->cp;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_CurvePoint.cpp:121:24: style: C-style pointer casting [cstyleCast]
    CurvePoint *cp2 = ((BPy_CurvePoint *)obj2)->cp;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < double >::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < double >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < double >::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < double >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < Vec2f >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < Vec2f >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < Vec3f >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < Vec3f >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < unsigned int >::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < unsigned int >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < unsigned int >::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < unsigned int >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < Nature :: EdgeNature >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < Nature :: EdgeNature >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < std :: vector < ViewShape * > >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < std :: vector < ViewShape * > >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < float >::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < float >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < float >::result' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < float >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:69:3: warning: Member variable 'UnaryFunction1D < vector < ViewShape * > >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: warning: Member variable 'UnaryFunction1D < vector < ViewShape * > >::py_uf1D' is not initialized in the constructor. [uninitMemberVar]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:411:12: warning: Either the condition '!info' is redundant or there is possible null pointer dereference: info. [nullPointerRedundantCheck]
  Vec3r e1(info->e1.x(), info->e1.y(), info->e1.z());
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:408:7: note: Assuming that condition '!info' is not redundant
  if (!info) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:407:57: note: Assignment 'info=self->sv->getCurvatureInfo()', assigned value is 0
  const CurvatureInfo *info = self->sv->getCurvatureInfo();
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:411:12: note: Null pointer dereference
  Vec3r e1(info->e1.x(), info->e1.y(), info->e1.z());
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:412:12: warning: Either the condition '!info' is redundant or there is possible null pointer dereference: info. [nullPointerRedundantCheck]
  Vec3r e2(info->e2.x(), info->e2.y(), info->e2.z());
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:408:7: note: Assuming that condition '!info' is not redundant
  if (!info) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:407:57: note: Assignment 'info=self->sv->getCurvatureInfo()', assigned value is 0
  const CurvatureInfo *info = self->sv->getCurvatureInfo();
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:412:12: note: Null pointer dereference
  Vec3r e2(info->e2.x(), info->e2.y(), info->e2.z());
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:413:12: warning: Either the condition '!info' is redundant or there is possible null pointer dereference: info. [nullPointerRedundantCheck]
  Vec3r er(info->er.x(), info->er.y(), info->er.z());
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:408:7: note: Assuming that condition '!info' is not redundant
  if (!info) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:407:57: note: Assignment 'info=self->sv->getCurvatureInfo()', assigned value is 0
  const CurvatureInfo *info = self->sv->getCurvatureInfo();
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:413:12: note: Null pointer dereference
  Vec3r er(info->er.x(), info->er.y(), info->er.z());
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:416:40: warning: Either the condition '!info' is redundant or there is possible null pointer dereference: info. [nullPointerRedundantCheck]
                    PyFloat_FromDouble(info->K1),
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:408:7: note: Assuming that condition '!info' is not redundant
  if (!info) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:407:57: note: Assignment 'info=self->sv->getCurvatureInfo()', assigned value is 0
  const CurvatureInfo *info = self->sv->getCurvatureInfo();
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:416:40: note: Null pointer dereference
                    PyFloat_FromDouble(info->K1),
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:417:40: warning: Either the condition '!info' is redundant or there is possible null pointer dereference: info. [nullPointerRedundantCheck]
                    PyFloat_FromDouble(info->K2),
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:408:7: note: Assuming that condition '!info' is not redundant
  if (!info) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:407:57: note: Assignment 'info=self->sv->getCurvatureInfo()', assigned value is 0
  const CurvatureInfo *info = self->sv->getCurvatureInfo();
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:417:40: note: Null pointer dereference
                    PyFloat_FromDouble(info->K2),
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:420:40: warning: Either the condition '!info' is redundant or there is possible null pointer dereference: info. [nullPointerRedundantCheck]
                    PyFloat_FromDouble(info->Kr),
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:408:7: note: Assuming that condition '!info' is not redundant
  if (!info) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:407:57: note: Assignment 'info=self->sv->getCurvatureInfo()', assigned value is 0
  const CurvatureInfo *info = self->sv->getCurvatureInfo();
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:420:40: note: Null pointer dereference
                    PyFloat_FromDouble(info->Kr),
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:422:40: warning: Either the condition '!info' is redundant or there is possible null pointer dereference: info. [nullPointerRedundantCheck]
                    PyFloat_FromDouble(info->dKr));
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:408:7: note: Assuming that condition '!info' is not redundant
  if (!info) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:407:57: note: Assignment 'info=self->sv->getCurvatureInfo()', assigned value is 0
  const CurvatureInfo *info = self->sv->getCurvatureInfo();
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:422:40: note: Null pointer dereference
                    PyFloat_FromDouble(info->dKr));
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:72:33: style: C-style pointer casting [cstyleCast]
      self->sv = new SVertex(*(((BPy_SVertex *)obj)->sv));
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:167:23: style: C-style pointer casting [cstyleCast]
  BPy_SVertex *self = (BPy_SVertex *)bmo->cb_user;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:187:23: style: C-style pointer casting [cstyleCast]
  BPy_SVertex *self = (BPy_SVertex *)bmo->cb_user;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:205:23: style: C-style pointer casting [cstyleCast]
  BPy_SVertex *self = (BPy_SVertex *)bmo->cb_user;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:245:23: style: C-style pointer casting [cstyleCast]
  BPy_SVertex *self = (BPy_SVertex *)bmo->cb_user;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\BPy_SVertex.cpp:360:51: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = normals.begin(); it != normals.end(); it++) {
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: style: Class 'UnaryFunction1D < double >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: style: Class 'UnaryFunction1D < Vec2f >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: style: Class 'UnaryFunction1D < Vec3f >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: style: Class 'UnaryFunction1D < unsigned int >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: style: Class 'UnaryFunction1D < Nature :: EdgeNature >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: style: Class 'UnaryFunction1D < std :: vector < ViewShape * > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: style: Class 'UnaryFunction1D < float >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:80:3: style: Class 'UnaryFunction1D < vector < ViewShape * > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  UnaryFunction1D(IntegrationType iType)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:197:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:197:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:203:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:203:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:222:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:222:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:228:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:228:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:247:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:247:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:253:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:253:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:272:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:272:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:278:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:278:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:297:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:297:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:303:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:303:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:322:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:322:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:328:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:328:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:347:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:347:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:353:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:353:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:372:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:372:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:378:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:378:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:401:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:401:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:407:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:407:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:430:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:430:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:436:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:436:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:460:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:460:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:466:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:466:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:524:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:524:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:530:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:530:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:553:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:553:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:559:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:559:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:579:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:579:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:585:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:585:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:598:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:598:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:604:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:604:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:617:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:617:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:623:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:623:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:71:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:71:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:77:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:77:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:108:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:108:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:114:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:114:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:152:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:152:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:158:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:158:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:196:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:196:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:202:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:202:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:242:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:242:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:248:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:248:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:280:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:91:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:280:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:286:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions1D.h:102:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.h:286:7: note: Function in derived class
  int operator()(Interface1D &inter);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Director.cpp:263:48: style: C-style pointer casting [cstyleCast]
    ((UnaryFunction0D<Id> *)uf0D)->result = *(((BPy_Id *)result)->id);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Director.cpp:266:57: style: C-style pointer casting [cstyleCast]
    ((UnaryFunction0D<FrsMaterial> *)uf0D)->result = *(((BPy_FrsMaterial *)result)->m);
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\CurvePoint\BPy_StrokeVertex.cpp:103:13: style: C-style pointer casting [cstyleCast]
      if (!((BPy_StrokeVertex *)obj1)->sv) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\CurvePoint\BPy_StrokeVertex.cpp:107:38: style: C-style pointer casting [cstyleCast]
      self->sv = new StrokeVertex(*(((BPy_StrokeVertex *)obj1)->sv));
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\CurvePoint\BPy_StrokeVertex.cpp:120:26: style: C-style pointer casting [cstyleCast]
    StrokeVertex *sv1 = ((BPy_StrokeVertex *)obj1)->sv;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\CurvePoint\BPy_StrokeVertex.cpp:121:26: style: C-style pointer casting [cstyleCast]
    StrokeVertex *sv2 = ((BPy_StrokeVertex *)obj2)->sv;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\CurvePoint\BPy_StrokeVertex.cpp:135:23: style: C-style pointer casting [cstyleCast]
    CurvePoint *cp = ((BPy_CurvePoint *)obj1)->cp;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\CurvePoint\BPy_StrokeVertex.cpp:184:28: style: C-style pointer casting [cstyleCast]
  BPy_StrokeVertex *self = (BPy_StrokeVertex *)bmo->cb_user;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\CurvePoint\BPy_StrokeVertex.cpp:192:28: style: C-style pointer casting [cstyleCast]
  BPy_StrokeVertex *self = (BPy_StrokeVertex *)bmo->cb_user;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\CurvePoint\BPy_StrokeVertex.cpp:200:28: style: C-style pointer casting [cstyleCast]
  BPy_StrokeVertex *self = (BPy_StrokeVertex *)bmo->cb_user;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface0D\CurvePoint\BPy_StrokeVertex.cpp:216:28: style: C-style pointer casting [cstyleCast]
  BPy_StrokeVertex *self = (BPy_StrokeVertex *)bmo->cb_user;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\BPy_FEdge.cpp:81:31: style: C-style pointer casting [cstyleCast]
      self->fe = new FEdge(*(((BPy_FEdge *)obj1)->fe));
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\BPy_FEdge.cpp:211:26: style: C-style pointer casting [cstyleCast]
  self->fe->setNextEdge(((BPy_FEdge *)value)->fe);
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\BPy_FEdge.cpp:236:30: style: C-style pointer casting [cstyleCast]
  self->fe->setPreviousEdge(((BPy_FEdge *)value)->fe);
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\BPy_FrsCurve.cpp:72:30: style: C-style pointer casting [cstyleCast]
      self->c = new Curve(*(((BPy_FrsCurve *)obj)->c));
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\BPy_Stroke.cpp:72:29: style: C-style pointer casting [cstyleCast]
    self->s = new Stroke(*(((BPy_Stroke *)brother)->s));
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\BPy_Stroke.cpp:81:47: style: C-style pointer casting [cstyleCast]
  StrokeInternal::StrokeVertexIterator sv_it(((BPy_Stroke *)self)->s->strokeVerticesBegin());
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\BPy_ViewEdge.cpp:69:32: style: C-style pointer casting [cstyleCast]
    self->ve = new ViewEdge(*(((BPy_ViewEdge *)brother)->ve));
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\Curve\BPy_Chain.cpp:71:30: style: C-style pointer casting [cstyleCast]
      self->c = new Chain(*(((BPy_Chain *)obj)->c));
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\FEdge\BPy_FEdgeSmooth.cpp:73:38: style: C-style pointer casting [cstyleCast]
      self->fes = new FEdgeSmooth(*(((BPy_FEdgeSmooth *)obj1)->fes));
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\FEdge\BPy_FEdgeSmooth.cpp:109:27: style: C-style pointer casting [cstyleCast]
  BPy_FEdgeSmooth *self = (BPy_FEdgeSmooth *)bmo->cb_user;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\FEdge\BPy_FEdgeSmooth.cpp:119:27: style: C-style pointer casting [cstyleCast]
  BPy_FEdgeSmooth *self = (BPy_FEdgeSmooth *)bmo->cb_user;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\FEdge\BPy_FEdgeSmooth.cpp:127:27: style: C-style pointer casting [cstyleCast]
  BPy_FEdgeSmooth *self = (BPy_FEdgeSmooth *)bmo->cb_user;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\FEdge\BPy_FEdgeSmooth.cpp:135:27: style: C-style pointer casting [cstyleCast]
  BPy_FEdgeSmooth *self = (BPy_FEdgeSmooth *)bmo->cb_user;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\FEdge\BPy_FEdgeSharp.cpp:75:37: style: C-style pointer casting [cstyleCast]
      self->fes = new FEdgeSharp(*(((BPy_FEdgeSharp *)obj1)->fes));
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\FEdge\BPy_FEdgeSharp.cpp:115:26: style: C-style pointer casting [cstyleCast]
  BPy_FEdgeSharp *self = (BPy_FEdgeSharp *)bmo->cb_user;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\FEdge\BPy_FEdgeSharp.cpp:137:26: style: C-style pointer casting [cstyleCast]
  BPy_FEdgeSharp *self = (BPy_FEdgeSharp *)bmo->cb_user;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\FEdge\BPy_FEdgeSharp.cpp:155:26: style: C-style pointer casting [cstyleCast]
  BPy_FEdgeSharp *self = (BPy_FEdgeSharp *)bmo->cb_user;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Interface1D\FEdge\BPy_FEdgeSharp.cpp:173:26: style: C-style pointer casting [cstyleCast]
  BPy_FEdgeSharp *self = (BPy_FEdgeSharp *)bmo->cb_user;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_AdjacencyIterator.cpp:81:45: style: C-style pointer casting [cstyleCast]
      self->a_it = new AdjacencyIterator(*(((BPy_AdjacencyIterator *)obj1)->a_it));
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_AdjacencyIterator.cpp:82:25: style: C-style pointer casting [cstyleCast]
      self->at_start = ((BPy_AdjacencyIterator *)obj1)->at_start;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_AdjacencyIterator.cpp:101:23: style: C-style pointer casting [cstyleCast]
    self->at_start = ((BPy_AdjacencyIterator *)obj1)->at_start;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_AdjacencyIterator.cpp:72:29: style: Variable 'obj2' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_AdjacencyIterator.cpp:72:40: style: Variable 'obj3' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainPredicateIterator.cpp:111:49: style: C-style pointer casting [cstyleCast]
    self->cp_it = new ChainPredicateIterator(*(((BPy_ChainPredicateIterator *)obj1)->cp_it));
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainPredicateIterator.cpp:112:20: style: C-style pointer casting [cstyleCast]
    self->upred = ((BPy_ChainPredicateIterator *)obj1)->upred;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainPredicateIterator.cpp:113:20: style: C-style pointer casting [cstyleCast]
    self->bpred = ((BPy_ChainPredicateIterator *)obj1)->bpred;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainPredicateIterator.cpp:136:32: style: C-style pointer casting [cstyleCast]
    BinaryPredicate1D *bp1D = ((BPy_BinaryPredicate1D *)obj2)->bp1D;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainSilhouetteIterator.cpp:92:50: style: C-style pointer casting [cstyleCast]
    self->cs_it = new ChainSilhouetteIterator(*(((BPy_ChainSilhouetteIterator *)obj1)->cs_it));
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainPredicateIterator.cpp:107:40: style: Variable 'obj3' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0, *obj4 = 0, *obj5 = 0, *obj6 = 0;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainPredicateIterator.cpp:107:51: style: Variable 'obj4' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0, *obj4 = 0, *obj5 = 0, *obj6 = 0;
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainPredicateIterator.cpp:107:62: style: Variable 'obj5' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0, *obj4 = 0, *obj5 = 0, *obj6 = 0;
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainPredicateIterator.cpp:107:73: style: Variable 'obj6' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0, *obj4 = 0, *obj5 = 0, *obj6 = 0;
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainSilhouetteIterator.cpp:88:29: style: Variable 'obj2' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainSilhouetteIterator.cpp:88:40: style: Variable 'obj3' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainingIterator.cpp:92:42: style: C-style pointer casting [cstyleCast]
    self->c_it = new ChainingIterator(*(((BPy_ChainingIterator *)obj1)->c_it));
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainingIterator.cpp:88:29: style: Variable 'obj2' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0, *obj4 = 0;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainingIterator.cpp:88:40: style: Variable 'obj3' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0, *obj4 = 0;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ChainingIterator.cpp:88:51: style: Variable 'obj4' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0, *obj3 = 0, *obj4 = 0;
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_CurvePointIterator.cpp:75:14: style: C-style pointer casting [cstyleCast]
          *(((BPy_CurvePointIterator *)brother)->cp_it));
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_SVertexIterator.cpp:82:62: style: C-style pointer casting [cstyleCast]
      self->sv_it = new ViewEdgeInternal::SVertexIterator(*(((BPy_SVertexIterator *)obj1)->sv_it));
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_Interface0DIterator.cpp:94:48: style: C-style pointer casting [cstyleCast]
    self->if0D_it = new Interface0DIterator(*(((BPy_Interface0DIterator *)brother)->if0D_it));
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_Interface0DIterator.cpp:95:23: style: C-style pointer casting [cstyleCast]
    self->at_start = ((BPy_Interface0DIterator *)brother)->at_start;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_Interface0DIterator.cpp:96:23: style: C-style pointer casting [cstyleCast]
    self->reversed = ((BPy_Interface0DIterator *)brother)->reversed;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_StrokeVertexIterator.cpp:72:12: style: C-style pointer casting [cstyleCast]
        *(((BPy_StrokeVertexIterator *)brother)->sv_it));
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_StrokeVertexIterator.cpp:73:23: style: C-style pointer casting [cstyleCast]
    self->reversed = ((BPy_StrokeVertexIterator *)brother)->reversed;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_StrokeVertexIterator.cpp:74:23: style: C-style pointer casting [cstyleCast]
    self->at_start = ((BPy_StrokeVertexIterator *)brother)->at_start;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ViewEdgeIterator.cpp:79:61: style: C-style pointer casting [cstyleCast]
    self->ve_it = new ViewEdgeInternal::ViewEdgeIterator(*(((BPy_ViewEdgeIterator *)obj1)->ve_it));
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_ViewEdgeIterator.cpp:75:29: style: Variable 'obj2' is assigned a value that is never used. [unreadVariable]
  PyObject *obj1 = 0, *obj2 = 0;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:60:3: style: Class 'ConstantThicknessShader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ConstantThicknessShader(float thickness) : StrokeShader()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:90:3: style: Class 'ConstantExternThicknessShader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ConstantExternThicknessShader(float thickness) : StrokeShader()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:442:3: style: Class 'SamplingShader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SamplingShader(float sampling) : StrokeShader()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:521:3: style: Class 'PolygonalizationShader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  PolygonalizationShader(float iError) : StrokeShader()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:552:3: style: Class 'GuidingLinesShader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  GuidingLinesShader(float iOffset) : StrokeShader()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:575:3: style: Class 'TipRemoverShader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TipRemoverShader(real tipLength);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:608:3: style: Class 'BlenderTextureShader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BlenderTextureShader(MTex *mtex) : StrokeShader()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:618:3: style: Class 'BlenderTextureShader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BlenderTextureShader(bNodeTree *nodetree) : StrokeShader()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:646:3: style: Class 'StrokeTextureStepShader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  StrokeTextureStepShader(float step) : StrokeShader()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:71:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:71:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:77:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:77:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:99:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:99:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:104:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:104:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:135:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:135:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:141:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:141:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:180:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:180:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:186:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:186:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:213:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:213:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:218:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:218:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:241:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:241:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:247:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:247:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:277:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:277:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:283:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:283:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:339:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:339:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:345:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:345:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:362:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:362:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:367:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:367:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:389:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:389:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:395:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:395:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:420:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:420:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:426:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:426:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:447:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:447:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:453:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:453:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:466:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:466:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:471:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:471:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:495:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:495:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:501:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:501:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:526:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:526:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:532:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:532:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:557:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:557:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:563:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:563:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:583:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:583:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:588:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:588:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:624:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:624:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:630:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:630:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:651:18: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:81:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:651:18: note: Function in derived class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:657:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.h:657:15: note: Function in derived class
  virtual int shade(Stroke &stroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_orientedViewEdgeIterator.cpp:70:12: style: C-style pointer casting [cstyleCast]
        *(((BPy_orientedViewEdgeIterator *)brother)->ove_it));
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_orientedViewEdgeIterator.cpp:71:23: style: C-style pointer casting [cstyleCast]
    self->at_start = ((BPy_orientedViewEdgeIterator *)brother)->at_start;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\Iterator\BPy_orientedViewEdgeIterator.cpp:72:23: style: C-style pointer casting [cstyleCast]
    self->reversed = ((BPy_orientedViewEdgeIterator *)brother)->reversed;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\StrokeShader\BPy_BlenderTextureShader.cpp:69:11: style: C-style pointer casting [cstyleCast]
  _mtex = (MTex *)PyC_RNA_AsPointer(obj, "LineStyleTextureSlot");
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\python\StrokeShader\BPy_BlenderTextureShader.cpp:75:15: style: C-style pointer casting [cstyleCast]
  _nodetree = (bNodeTree *)PyC_RNA_AsPointer(obj, "ShaderNodeTree");
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.h:160:3: style: Class 'Smoother' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Smoother(Stroke &ioStroke);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.h:200:3: style: Class 'Omitter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Omitter(Stroke &ioStroke);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.h:57:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.h:57:15: note: Function in derived class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.h:93:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.h:93:15: note: Function in derived class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.h:145:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.h:145:15: note: Function in derived class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.h:225:15: style: The function 'shade' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeShader.h:91:15: note: Virtual function in base class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.h:225:15: note: Function in derived class
  virtual int shade(Stroke &ioStroke) const;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedPredicates1D.h:54:3: style: Class 'DensityLowerThanUP1D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  DensityLowerThanUP1D(double threshold, double sigma = 2)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedPredicates1D.h:61:10: style: The function 'getName' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:70:18: note: Virtual function in base class
  virtual string getName() const
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedPredicates1D.h:61:10: note: Function in derived class
  string getName() const
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedPredicates1D.h:67:7: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Predicates1D.h:80:15: note: Virtual function in base class
  virtual int operator()(Interface1D &inter);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedPredicates1D.h:67:7: note: Function in derived class
  int operator()(Interface1D &inter)
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeGroup.cpp:53:7: style: The scope of the variable 'refCount' can be reduced. [variableScope]
  int refCount = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\scene_graph\NodeGroup.cpp:53:16: style: Variable 'refCount' is assigned a value that is never used. [unreadVariable]
  int refCount = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:203:11: warning: Member variable 'Smoother::_factorPoint' is not initialized in the constructor. [uninitMemberVar]
Smoother::Smoother(Stroke &ioStroke)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:203:11: warning: Member variable 'Smoother::_factorCurvature' is not initialized in the constructor. [uninitMemberVar]
Smoother::Smoother(Stroke &ioStroke)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:203:11: warning: Member variable 'Smoother::_factorCurvatureDifference' is not initialized in the constructor. [uninitMemberVar]
Smoother::Smoother(Stroke &ioStroke)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:203:11: warning: Member variable 'Smoother::_anisoPoint' is not initialized in the constructor. [uninitMemberVar]
Smoother::Smoother(Stroke &ioStroke)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:203:11: warning: Member variable 'Smoother::_anisoNormal' is not initialized in the constructor. [uninitMemberVar]
Smoother::Smoother(Stroke &ioStroke)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:203:11: warning: Member variable 'Smoother::_anisoCurvature' is not initialized in the constructor. [uninitMemberVar]
Smoother::Smoother(Stroke &ioStroke)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:203:11: warning: Member variable 'Smoother::_carricatureFactor' is not initialized in the constructor. [uninitMemberVar]
Smoother::Smoother(Stroke &ioStroke)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:203:11: warning: Member variable 'Smoother::_isFixedVertex' is not initialized in the constructor. [uninitMemberVar]
Smoother::Smoother(Stroke &ioStroke)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:44:3: performance: Variable '_orientation' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _orientation = iOrientation;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:208:3: warning: Class 'Smoother' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
  _vertex = new Vec2r[_nbVertices];
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:208:3: warning: Class 'Smoother' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
  _vertex = new Vec2r[_nbVertices];
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:53:17: style: The scope of the variable 'sv' can be reduced. [variableScope]
  StrokeVertex *sv;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:126:11: style: Local variable 'p' shadows outer variable [shadowVariable]
    Vec2r p(sv->getPoint());
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:111:9: note: Shadowed declaration
  Vec2r p(v->getProjectedX(), v->getProjectedY());
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedStrokeShaders.cpp:126:11: note: Shadow variable
    Vec2r p(sv->getPoint());
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\AdvancedFunctions1D.cpp:38:10: style: The scope of the variable 'fe' can be reduced. [variableScope]
  FEdge *fe;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:516:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = b;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:517:5: performance: Variable '_last' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _last = l;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.cpp:49:14: style: Variable 'previous' is assigned a value that is never used. [unreadVariable]
    previous = _Vertices.back()->point2d();
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.cpp:69:14: style: Variable 'previous' is assigned a value that is never used. [unreadVariable]
    previous = (*v)->point2d();
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.cpp:75:14: style: Variable 'previous' is assigned a value that is never used. [unreadVariable]
    previous = current;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.cpp:86:13: style: Variable 'current' is assigned a value that is never used. [unreadVariable]
    current = (*v)->point2d();
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.cpp:113:14: style: Variable 'previous' is assigned a value that is never used. [unreadVariable]
    previous = _Vertices.front()->point2d();
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.cpp:135:14: style: Variable 'previous' is assigned a value that is never used. [unreadVariable]
    previous = (*v)->point2d();
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.cpp:141:14: style: Variable 'previous' is assigned a value that is never used. [unreadVariable]
    previous = current;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Chain.cpp:152:13: style: Variable 'current' is assigned a value that is never used. [unreadVariable]
    current = (*v)->point2d();
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:62:12: style: Condition '1==i' is always false [knownConditionTrueFalse]
    if ((1 == i) || (size - 2 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:57:11: note: Assignment 'i=0', assigned value is 0
  int i = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:62:12: note: Condition '1==i' is always false
    if ((1 == i) || (size - 2 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:82:12: style: Condition '1==i' is always false [knownConditionTrueFalse]
    if ((1 == i) || (size - 2 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:77:11: note: Assignment 'i=0', assigned value is 0
  int i = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:82:12: note: Condition '1==i' is always false
    if ((1 == i) || (size - 2 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:161:12: style: Condition '1==i' is always false [knownConditionTrueFalse]
    if ((1 == i) || (size - 2 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:156:11: note: Assignment 'i=0', assigned value is 0
  int i = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:161:12: note: Condition '1==i' is always false
    if ((1 == i) || (size - 2 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.cpp:59:9: warning: Member variable 'Canvas::stroke_count' is not initialized in the constructor. [uninitMemberVar]
Canvas::Canvas()
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.cpp:70:9: warning: Member variable 'Canvas::stroke_count' is not initialized in the constructor. [uninitMemberVar]
Canvas::Canvas(const Canvas &iBrother)
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:65:12: style: The expression '0 == i' is always true. [knownConditionTrueFalse]
    if ((0 == i) || (size - 1 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:57:11: note: 'i' is assigned value '0' here.
  int i = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:65:12: note: The expression '0 == i' is always true.
    if ((0 == i) || (size - 1 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:85:12: style: The expression '0 == i' is always true. [knownConditionTrueFalse]
    if ((0 == i) || (size - 1 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:77:11: note: 'i' is assigned value '0' here.
  int i = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:85:12: note: The expression '0 == i' is always true.
    if ((0 == i) || (size - 1 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:164:12: style: The expression '0 == i' is always true. [knownConditionTrueFalse]
    if ((0 == i) || (size - 1 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:156:11: note: 'i' is assigned value '0' here.
  int i = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:164:12: note: The expression '0 == i' is always true.
    if ((0 == i) || (size - 1 == i)) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:195:8: style: The scope of the variable 'bruit' can be reduced. [variableScope]
  real bruit, bruit2;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:195:15: style: The scope of the variable 'bruit2' can be reduced. [variableScope]
  real bruit, bruit2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:247:17: style: The scope of the variable 'sv' can be reduced. [variableScope]
  StrokeVertex *sv;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:279:8: style: The scope of the variable 'bruit' can be reduced. [variableScope]
  real bruit;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\BasicStrokeShaders.cpp:365:17: style: The scope of the variable 'sv' can be reduced. [variableScope]
  StrokeVertex *sv;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.cpp:183:3: performance: Variable '_Point2d' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _Point2d = iBrother._Point2d;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Curve.cpp:184:3: performance: Variable '_Point3d' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _Point3d = iBrother._Point3d;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:115:5: performance: Variable '__A' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    __A = iBrother.__A;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:116:5: performance: Variable '__B' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    __B = iBrother.__B;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:117:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = iBrother._begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:118:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = iBrother._end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:134:5: performance: Variable '__A' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    __A = iBrother.__A;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:135:5: performance: Variable '__B' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    __B = iBrother.__B;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:136:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = iBrother._begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:137:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = iBrother._end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:192:5: performance: Variable '__A' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    __A = iA;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:193:5: performance: Variable '__B' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    __B = iB;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:194:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = ibegin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:195:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = iend;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:113:10: style: Class '__point_iterator < CurveInternal :: CurvePoint_nonconst_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline __point_iterator(const iterator &iBrother) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:132:10: style: Class '__point_iterator < CurveInternal :: CurvePoint_nonconst_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline __point_iterator(const const_iterator &iBrother) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:113:10: style: Class '__point_iterator < CurveInternal :: CurvePoint_const_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline __point_iterator(const iterator &iBrother) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\CurveAdvancedIterators.h:132:10: style: Class '__point_iterator < CurveInternal :: CurvePoint_const_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline __point_iterator(const const_iterator &iBrother) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.cpp:66:3: warning: Class 'Canvas' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
  _steerableViewMap = new SteerableViewMap(NB_STEERABLE_VIEWMAP - 1);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\ChainingIterators.cpp:143:24: style: C-style pointer casting [cstyleCast]
    TVertex *tvertex = (TVertex *)nextVertex;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Canvas.cpp:370:10: style: The scope of the variable 'scaledImg' can be reduced. [variableScope]
  ImBuf *scaledImg;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:1050:10: style: Class 'PredicateWrapper' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline PredicateWrapper(BinaryPredicate1D &pred)
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:815:10: style: The scope of the variable 'currentChain' can be reduced. [variableScope]
  Chain *currentChain = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:999:10: style: The scope of the variable 'currentChain' can be reduced. [variableScope]
  Chain *currentChain = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:134:33: style: Local variable 'it' shadows outer argument [shadowArgument]
    for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:84:58: note: Shadowed declaration
int Operators::chain(ViewEdgeInternal::ViewEdgeIterator &it,
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:134:33: note: Shadow variable
    for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:143:31: style: Local variable 'it' shadows outer argument [shadowArgument]
  for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:84:58: note: Shadowed declaration
int Operators::chain(ViewEdgeInternal::ViewEdgeIterator &it,
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:143:31: note: Shadow variable
  for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:210:33: style: Local variable 'it' shadows outer argument [shadowArgument]
    for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:150:58: note: Shadowed declaration
int Operators::chain(ViewEdgeInternal::ViewEdgeIterator &it, UnaryPredicate1D &pred)
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:210:33: note: Shadow variable
    for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:219:31: style: Local variable 'it' shadows outer argument [shadowArgument]
  for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:150:58: note: Shadowed declaration
int Operators::chain(ViewEdgeInternal::ViewEdgeIterator &it, UnaryPredicate1D &pred)
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:219:31: note: Shadow variable
  for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:418:33: style: Local variable 'it' shadows outer argument [shadowArgument]
    for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:331:53: note: Shadowed declaration
int Operators::bidirectionalChain(ChainingIterator &it, UnaryPredicate1D &pred)
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:418:33: note: Shadow variable
    for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:427:31: style: Local variable 'it' shadows outer argument [shadowArgument]
  for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:331:53: note: Shadowed declaration
int Operators::bidirectionalChain(ChainingIterator &it, UnaryPredicate1D &pred)
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:427:31: note: Shadow variable
  for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:498:33: style: Local variable 'it' shadows outer argument [shadowArgument]
    for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:434:53: note: Shadowed declaration
int Operators::bidirectionalChain(ChainingIterator &it)
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:498:33: note: Shadow variable
    for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:507:31: style: Local variable 'it' shadows outer argument [shadowArgument]
  for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:434:53: note: Shadowed declaration
int Operators::bidirectionalChain(ChainingIterator &it)
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:507:31: note: Shadow variable
  for (I1DContainer::iterator it = new_chains_set.begin(); it != new_chains_set.end(); ++it) {
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:1216:23: style: Local variable 'sv' shadows outer variable [shadowVariable]
        StrokeVertex *sv;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:1098:12: note: Shadowed declaration
  SVertex *sv;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:1216:23: note: Shadow variable
        StrokeVertex *sv;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:1217:47: style: Local variable 'it' shadows outer variable [shadowVariable]
        std::vector<StrokeVertex *>::iterator it = overlapping_vertices.begin();
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:1093:23: note: Shadowed declaration
  Interface0DIterator it = inter.verticesBegin(), itend = inter.verticesEnd();
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:1217:47: note: Shadow variable
        std::vector<StrokeVertex *>::iterator it = overlapping_vertices.begin();
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:717:28: style: Variable 'it0d' is assigned a value that is never used. [unreadVariable]
  Interface0DIterator it0d = it.castToInterface0DIterator();
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:883:28: style: Variable 'it0d' is assigned a value that is never used. [unreadVariable]
  Interface0DIterator it0d = it.castToInterface0DIterator();
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Operators.cpp:916:8: style: Variable 'mean' is assigned a value that is never used. [unreadVariable]
  mean /= (float)count;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:70:5: performance: Variable '_it' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _it = iBrother._it;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:71:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = iBrother._begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:72:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = iBrother._end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:77:5: performance: Variable '_it' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _it = iBrother._it;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:78:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = iBrother._begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:79:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = iBrother._end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:89:5: performance: Variable '_it' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _it = it;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:90:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = begin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:91:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = end;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:68:10: style: Class 'vertex_iterator_base < StrokeInternal :: vertex_const_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline vertex_iterator_base(const iterator &iBrother) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:75:10: style: Class 'vertex_iterator_base < StrokeInternal :: vertex_const_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline vertex_iterator_base(const const_iterator &iBrother) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:68:10: style: Class 'vertex_iterator_base < StrokeInternal :: vertex_nonconst_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline vertex_iterator_base(const iterator &iBrother) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeAdvancedIterators.h:75:10: style: Class 'vertex_iterator_base < StrokeInternal :: vertex_nonconst_traits >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  inline vertex_iterator_base(const const_iterator &iBrother) : parent_class()
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:473:17: warning: Member variable 'Stroke::_textureStep' is not assigned a value in 'Stroke::operator='. [operatorEqVarError]
Stroke &Stroke::operator=(const Stroke &iBrother)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:473:17: warning: Member variable 'Stroke::_mediumType' is not assigned a value in 'Stroke::operator='. [operatorEqVarError]
Stroke &Stroke::operator=(const Stroke &iBrother)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:473:17: warning: Member variable 'Stroke::_textureId' is not assigned a value in 'Stroke::operator='. [operatorEqVarError]
Stroke &Stroke::operator=(const Stroke &iBrother)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:473:17: warning: Member variable 'Stroke::_nodeTree' is not assigned a value in 'Stroke::operator='. [operatorEqVarError]
Stroke &Stroke::operator=(const Stroke &iBrother)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:182:35: warning: 'operator=' should check for assignment to self to avoid problems with dynamic memory. [operatorEqToSelf]
StrokeAttribute &StrokeAttribute::operator=(const StrokeAttribute &iBrother)
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:473:17: warning: 'operator=' should check for assignment to self to avoid problems with dynamic memory. [operatorEqToSelf]
Stroke &Stroke::operator=(const Stroke &iBrother)
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:355:3: performance: Variable '_Attribute' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _Attribute = iBrother._Attribute;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:375:3: performance: Variable '_Attribute' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _Attribute = StrokeAttribute(iA->attribute(), iB->attribute(), t3);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:383:3: performance: Variable '_Attribute' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _Attribute = iAttribute;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:414:3: performance: Variable '_id' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _id = 0;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:534:5: performance: Variable '_begin' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _begin = ibegin;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:535:5: performance: Variable '_end' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _end = iend;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:394:4: style: C-style pointer casting [cstyleCast]
  ((CurvePoint *)this)->operator=(iBrother);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:196:25: style: Variable '_userAttributesReal' is reassigned a value before the old one has been used. [redundantAssignment]
    _userAttributesReal = new realMap(*(iBrother._userAttributesReal));
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:194:27: note: _userAttributesReal is assigned
      _userAttributesReal = new realMap;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:196:25: note: _userAttributesReal is overwritten
    _userAttributesReal = new realMap(*(iBrother._userAttributesReal));
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:205:26: style: Variable '_userAttributesVec2f' is reassigned a value before the old one has been used. [redundantAssignment]
    _userAttributesVec2f = new Vec2fMap(*(iBrother._userAttributesVec2f));
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:203:28: note: _userAttributesVec2f is assigned
      _userAttributesVec2f = new Vec2fMap;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:205:26: note: _userAttributesVec2f is overwritten
    _userAttributesVec2f = new Vec2fMap(*(iBrother._userAttributesVec2f));
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:214:26: style: Variable '_userAttributesVec3f' is reassigned a value before the old one has been used. [redundantAssignment]
    _userAttributesVec3f = new Vec3fMap(*(iBrother._userAttributesVec3f));
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:212:28: note: _userAttributesVec3f is assigned
      _userAttributesVec3f = new Vec3fMap;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:214:26: note: _userAttributesVec3f is overwritten
    _userAttributesVec3f = new Vec3fMap(*(iBrother._userAttributesVec3f));
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:556:8: style: The scope of the variable 't' can be reduced. [variableScope]
  real t = 0.0f;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:580:8: style: The scope of the variable 'resampled' can be reduced. [variableScope]
  bool resampled;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:433:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       v++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:460:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         v++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\Stroke.cpp:482:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       v++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:751:12: warning: Member variable 'StrokeRep::_material' is not initialized in the constructor. [uninitMemberVar]
StrokeRep::StrokeRep()
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:811:12: warning: Member variable 'StrokeRep::_material' is not initialized in the constructor. [uninitMemberVar]
StrokeRep::StrokeRep(const StrokeRep &iBrother)
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:776:12: warning: Member variable 'StrokeRep::_material' is not initialized in the constructor. [uninitMemberVar]
StrokeRep::StrokeRep(Stroke *iStroke)
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:42:3: performance: Variable '_point2d' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _point2d = iBrother._point2d;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:43:3: performance: Variable '_texCoord' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _texCoord = iBrother._texCoord;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:44:3: performance: Variable '_texCoord_w_tips' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _texCoord_w_tips = iBrother._texCoord_w_tips;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:45:3: performance: Variable '_color' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _color = iBrother._color;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.h:204:16: warning: Virtual function 'create' is called from constructor 'StrokeRep(Stroke*iStroke)' at line 808. Dynamic binding is not used. [virtualCallInConstructor]
  virtual void create();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:808:3: note: Calling create
  create();
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.h:204:16: note: create is a virtual function
  virtual void create();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:409:17: style: The scope of the variable 'sv' can be reduced. [variableScope]
  StrokeVertex *sv, *sv2;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:409:22: style: The scope of the variable 'sv2' can be reduced. [variableScope]
  StrokeVertex *sv, *sv2;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:524:17: style: The scope of the variable 'sv' can be reduced. [variableScope]
  StrokeVertex *sv;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:547:17: style: The scope of the variable 'sv' can be reduced. [variableScope]
  StrokeVertex *sv;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:207:11: style: Local variable 'dir' shadows outer variable [shadowVariable]
    Vec2r dir(p2 - p);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:145:9: note: Shadowed declaration
  Vec2r dir(sv2->getPoint() - sv->getPoint());
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:207:11: note: Shadow variable
    Vec2r dir(p2 - p);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:210:11: style: Local variable 'orthDir' shadows outer variable [shadowVariable]
    Vec2r orthDir(-dir[1], dir[0]);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:146:9: note: Shadowed declaration
  Vec2r orthDir(-dir[1], dir[0]);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:210:11: note: Shadow variable
    Vec2r orthDir(-dir[1], dir[0]);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:211:11: style: Local variable 'stripDir' shadows outer variable [shadowVariable]
    Vec2r stripDir = orthDir;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:150:9: note: Shadowed declaration
  Vec2r stripDir(orthDir);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:211:11: note: Shadow variable
    Vec2r stripDir = orthDir;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:248:18: style: Local variable 'thickness' shadows outer variable [shadowVariable]
    const float *thickness = sv->attribute().getThickness();
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:166:16: note: Shadowed declaration
  const float *thickness = sv->attribute().getThickness();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:248:18: note: Shadow variable
    const float *thickness = sv->attribute().getThickness();
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:416:49: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vend = iStrokeVertices.end(); v != vend; v++) {
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:526:78: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (v = iStrokeVertices.begin(), vend = iStrokeVertices.end(); v != vend; v++) {
                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:549:78: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (v = iStrokeVertices.begin(), vend = iStrokeVertices.end(); v != vend; v++) {
                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:589:23: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (; v != vend; v++) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:649:21: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (; v != vend; v++) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\stroke\StrokeRep.cpp:709:23: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (; v != vend; v++) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ArbitraryGridDensityProvider.h:54:3: style: Class 'ArbitraryGridDensityProviderFactory' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ArbitraryGridDensityProviderFactory(unsigned numCells);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ArbitraryGridDensityProvider.h:57:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:152:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ArbitraryGridDensityProvider.h:57:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ArbitraryGridDensityProvider.h:59:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:155:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ArbitraryGridDensityProvider.h:59:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ArbitraryGridDensityProvider.h:62:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:160:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source) = 0;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ArbitraryGridDensityProvider.h:62:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AverageAreaGridDensityProvider.h:51:3: style: Class 'AverageAreaGridDensityProviderFactory' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AverageAreaGridDensityProviderFactory(real sizeFactor);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AverageAreaGridDensityProvider.h:54:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:152:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AverageAreaGridDensityProvider.h:54:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AverageAreaGridDensityProvider.h:56:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:155:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AverageAreaGridDensityProvider.h:56:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AverageAreaGridDensityProvider.h:59:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:160:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source) = 0;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AverageAreaGridDensityProvider.h:59:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\BoxGrid.cpp:41:16: warning: Member variable 'Cell::boundary' is not initialized in the constructor. [uninitMemberVar]
BoxGrid::Cell::Cell()
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\BoxGrid.cpp:73:20: warning: Member variable 'Iterator::_occludeeDepth' is not initialized in the constructor. [uninitMemberVar]
BoxGrid::Iterator::Iterator(BoxGrid &grid, Vec3r &center, real /*epsilon*/)
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\CulledOccluderSource.h:44:8: warning: Virtual function 'next' is called from constructor 'CulledOccluderSource(const GridHelpers::Transform&transform,WingedEdge&we,ViewMap&viewMap,bool extensiveFEdgeSearch=true)' at line 43. Dynamic binding is not used. [virtualCallInConstructor]
  bool next();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\CulledOccluderSource.cpp:43:5: note: Calling next
    next();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\CulledOccluderSource.h:44:8: note: next is a virtual function
  bool next();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\CulledOccluderSource.h:44:8: style: The function 'next' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool next();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\OccluderSource.h:45:16: note: Virtual function in base class
  virtual bool next();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\CulledOccluderSource.h:44:8: note: Function in derived class
  bool next();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\CulledOccluderSource.h:46:8: style: The function 'getOccluderProscenium' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void getOccluderProscenium(real proscenium[4]);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\OccluderSource.h:52:16: note: Virtual function in base class
  virtual void getOccluderProscenium(real proscenium[4]);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\CulledOccluderSource.h:46:8: note: Function in derived class
  void getOccluderProscenium(real proscenium[4]);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\BoxGrid.h:140:11: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    Vec3r operator()(const Vec3r &point) const;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GridHelpers.h:120:17: note: Virtual function in base class
  virtual Vec3r operator()(const Vec3r &point) const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\BoxGrid.h:140:11: note: Function in derived class
    Vec3r operator()(const Vec3r &point) const;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\CulledOccluderSource.cpp:138:90: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (ve = viewMap.ViewEdges().begin(), veend = viewMap.ViewEdges().end(); ve != veend; ve++) {
                                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\CulledOccluderSource.cpp:241:92: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (ve = viewMap.ViewEdges().begin(), veend = viewMap.ViewEdges().end(); ve != veend; ve++) {
                                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.cpp:332:16: style: C-style pointer casting [cstyleCast]
  WXFace *fA = (WXFace *)iEdge->GetaOEdge()->GetaFace();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.cpp:333:16: style: C-style pointer casting [cstyleCast]
  WXFace *fB = (WXFace *)iEdge->GetaOEdge()->GetbFace();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.cpp:402:16: style: C-style pointer casting [cstyleCast]
  WXFace *fA = (WXFace *)iEdge->GetaOEdge()->GetaFace();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.cpp:403:16: style: C-style pointer casting [cstyleCast]
  WXFace *fB = (WXFace *)iEdge->GetaOEdge()->GetbFace();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.cpp:644:9: style: C-style pointer casting [cstyleCast]
    v = (WXVertex *)(iFace->GetVertex(i));
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.cpp:663:27: style: C-style pointer casting [cstyleCast]
      opposite_vertex_a = (WXVertex *)opposite_edge->GetaVertex();
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.cpp:664:27: style: C-style pointer casting [cstyleCast]
      opposite_vertex_b = (WXVertex *)opposite_edge->GetbVertex();
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\FEdgeXDetector.cpp:50:84: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<WShape *>::const_iterator it = wshapes.begin(); it != wshapes.end(); it++) {
                                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Pow23GridDensityProvider.h:52:3: style: Class 'Pow23GridDensityProviderFactory' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Pow23GridDensityProviderFactory(unsigned numFaces);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AutoPtrHelper.h:51:3: style: Class 'AutoPtr < AverageAreaGridDensityProvider >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AutoPtr(T *ptr) : std::auto_ptr<T>(ptr)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AutoPtrHelper.h:54:3: style: Class 'AutoPtr < AverageAreaGridDensityProvider >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AutoPtr(std::auto_ptr_ref<T> ref) : std::auto_ptr<T>(ref)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AutoPtrHelper.h:51:3: style: Class 'AutoPtr < Pow23GridDensityProvider >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AutoPtr(T *ptr) : std::auto_ptr<T>(ptr)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AutoPtrHelper.h:54:3: style: Class 'AutoPtr < Pow23GridDensityProvider >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AutoPtr(std::auto_ptr_ref<T> ref) : std::auto_ptr<T>(ref)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Pow23GridDensityProvider.h:55:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:152:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Pow23GridDensityProvider.h:55:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Pow23GridDensityProvider.h:57:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:155:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Pow23GridDensityProvider.h:57:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Pow23GridDensityProvider.h:60:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:160:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source) = 0;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Pow23GridDensityProvider.h:60:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\HeuristicGridDensityProviderFactory.h:38:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:152:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\HeuristicGridDensityProviderFactory.h:38:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\HeuristicGridDensityProviderFactory.h:40:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:155:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\HeuristicGridDensityProviderFactory.h:40:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\HeuristicGridDensityProviderFactory.h:43:32: style: The function 'newGridDensityProvider' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\GridDensityProvider.h:160:40: note: Virtual function in base class
  virtual AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source) = 0;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\HeuristicGridDensityProviderFactory.h:43:32: note: Function in derived class
  AutoPtr<GridDensityProvider> newGridDensityProvider(OccluderSource &source);
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.cpp:315:15: style: C-style pointer casting [cstyleCast]
    result = ((FEdgeSmooth *)fe1)->frs_material();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.cpp:318:15: style: C-style pointer casting [cstyleCast]
    result = ((FEdgeSharp *)fe1)->bFrsMaterial();
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.cpp:338:21: style: The scope of the variable 'qi2' can be reduced. [variableScope]
  unsigned int qi1, qi2;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.cpp:73:25: style: Local variable 'next' shadows outer variable [shadowVariable]
    Interface0DIterator next = it;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.cpp:42:34: note: Shadowed declaration
  Interface0DIterator prev = it, next = it;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.cpp:73:25: note: Shadow variable
    Interface0DIterator next = it;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.cpp:217:58: style: Parameter 'iter' can be declared with const [constParameter]
int Curvature2DAngleF0D::operator()(Interface0DIterator &iter)
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Functions0D.cpp:42:28: style: Variable 'prev' is assigned a value that is never used. [unreadVariable]
  Interface0DIterator prev = it, next = it;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\SilhouetteGeomEngine.cpp:229:10: style: The scope of the variable 'delta_x' can be reduced. [variableScope]
    real delta_x, delta_y, dist, dist_threshold = 1.0e-6;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\SilhouetteGeomEngine.cpp:229:19: style: The scope of the variable 'delta_y' can be reduced. [variableScope]
    real delta_x, delta_y, dist, dist_threshold = 1.0e-6;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\SilhouetteGeomEngine.cpp:136:72: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (sv = ioVertices.begin(), svend = ioVertices.end(); sv != svend; sv++) {
                                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\Silhouette.cpp:199:14: style: The scope of the variable 'brother' can be reduced. [variableScope]
    SVertex *brother;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\SphericalGrid.cpp:41:22: warning: Member variable 'Cell::boundary' is not initialized in the constructor. [uninitMemberVar]
SphericalGrid::Cell::Cell()
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\SphericalGrid.cpp:73:26: warning: Member variable 'Iterator::_occludeeDepth' is not initialized in the constructor. [uninitMemberVar]
SphericalGrid::Iterator::Iterator(SphericalGrid &grid, Vec3r &center, real /*epsilon*/)
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\SphericalGrid.h:143:11: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
    Vec3r operator()(const Vec3r &point) const;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\GridHelpers.h:120:17: note: Virtual function in base class
  virtual Vec3r operator()(const Vec3r &point) const = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\SphericalGrid.h:143:11: note: Function in derived class
    Vec3r operator()(const Vec3r &point) const;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\SteerableViewMap.cpp:70:3: performance: Variable '_directions' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _directions = iBrother._directions;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\SteerableViewMap.cpp:71:3: performance: Variable '_mapping' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _mapping = iBrother._mapping;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\SteerableViewMap.cpp:87:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:332:13: style: Condition '!found' is always true [knownConditionTrueFalse]
    while ((!found) && (f != fend)) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:329:18: note: Assignment 'found=false', assigned value is 0
    bool found = false;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:332:13: note: Condition '!found' is always true
    while ((!found) && (f != fend)) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:417:13: style: Condition '!found' is always true [knownConditionTrueFalse]
    for (; (!found) && (f != fend); ++f) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:414:18: note: Assignment 'found=false', assigned value is 0
    bool found = false;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:417:13: note: Condition '!found' is always true
    for (; (!found) && (f != fend); ++f) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:789:9: style: Condition 'shared' is always true [knownConditionTrueFalse]
    if (shared && found != _SVertexMap.end()) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:783:7: note: Assuming that condition '!shared' is not redundant
  if (!shared) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:789:9: note: Condition 'shared' is always true
    if (shared && found != _SVertexMap.end()) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:211:6: style: C-style pointer casting [cstyleCast]
    ((NonTVertex *)vva)->AddOutgoingViewEdge(newVEdge);
     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:212:6: style: C-style pointer casting [cstyleCast]
    ((NonTVertex *)vvb)->AddIncomingViewEdge(newVEdge);
     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:294:6: style: C-style pointer casting [cstyleCast]
    ((NonTVertex *)vva)->AddOutgoingViewEdge(newVEdge);
     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:295:6: style: C-style pointer casting [cstyleCast]
    ((NonTVertex *)vvb)->AddIncomingViewEdge(newVEdge);
     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:608:8: style: C-style pointer casting [cstyleCast]
  if (((WXVertex *)v)->isFeature()) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:658:8: style: C-style pointer casting [cstyleCast]
  if (((WXVertex *)v)->isFeature()) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:692:30: style: C-style pointer casting [cstyleCast]
  return const_edge_iterator((ViewEdge *)this);
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:100:11: style: The scope of the variable 'wxe' can be reduced. [variableScope]
  WXEdge *wxe;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:72:64: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (wf = wfaces.begin(), wfend = wfaces.end(); wf != wfend; wf++) {
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:103:90: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<WEdge *>::iterator we = wedges.begin(), weend = wedges.end(); we != weend; we++) {
                                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:614:90: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<WEdge *>::iterator ve = vEdges.begin(), veend = vEdges.end(); ve != veend; ve++) {
                                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewEdgeXBuilder.cpp:664:90: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<WEdge *>::iterator ve = vEdges.begin(), veend = vEdges.end(); ve != veend; ve++) {
                                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:49:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       vv++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:55:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       vs++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:70:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       vs++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:72:90: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<FEdge *>::iterator it = edges.begin(), itend = edges.end(); it != itend; it++) {
                                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:81:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       it++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:83:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         vs++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:110:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       fe++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:129:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       fe++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:472:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       it++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:502:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       it++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:543:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       it++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:617:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       it++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:629:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       it++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:652:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       it++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:794:91: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (vector<ViewEdge *>::iterator e = _Edges.begin(), eend = _Edges.end(); e != eend; e++) {
                                                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:809:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<ViewEdge *>::iterator ve = _Edges.begin(), veend = _Edges.end(); ve != veend; ve++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMap.cpp:821:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       vv++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:826:16: error: Using iterator to temporary. [danglingTemporaryLifetime]
    save(out, *i);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:825:23: note: Iterator to container is created here.
  for (i = sv->normals().begin(); i != sv->normals().end(); i++) {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:826:16: note: Using iterator to temporary.
    save(out, *i);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1009:16: style: Condition '!b' is always true [knownConditionTrueFalse]
      else if (!b) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1002:11: note: Assuming that condition 'b' is not redundant
      if (b) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1009:16: note: Condition '!b' is always true
      else if (!b) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:808:5: style: Variable 'v' is reassigned a value before the old one has been used. [redundantAssignment]
  v = sv->point2D();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:804:5: note: v is assigned
  v = sv->point3D();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:808:5: note: v is overwritten
  v = sv->point2D();
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:846:12: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  unsigned tmp;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:994:24: style: The scope of the variable 'fe_rle1' can be reduced. [variableScope]
  unsigned vs_s, fe_s, fe_rle1, fe_rle2, sv_s, ve_s, vv_s, vv_rle1, vv_rle2;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:994:33: style: The scope of the variable 'fe_rle2' can be reduced. [variableScope]
  unsigned vs_s, fe_s, fe_rle1, fe_rle2, sv_s, ve_s, vv_s, vv_rle1, vv_rle2;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:994:60: style: The scope of the variable 'vv_rle1' can be reduced. [variableScope]
  unsigned vs_s, fe_s, fe_rle1, fe_rle2, sv_s, ve_s, vv_s, vv_rle1, vv_rle2;
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:994:69: style: The scope of the variable 'vv_rle2' can be reduced. [variableScope]
  unsigned vs_s, fe_s, fe_rle1, fe_rle2, sv_s, ve_s, vv_s, vv_rle1, vv_rle2;
                                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1225:16: style: The scope of the variable 'id' can be reduced. [variableScope]
  unsigned int id, index;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1225:20: style: The scope of the variable 'index' can be reduced. [variableScope]
  unsigned int id, index;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:581:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:658:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i1++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:667:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i2++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:676:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i3++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:684:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i4++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:693:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i5++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:821:70: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (i = sv->normals().begin(), tmp = 0; i != sv->normals().end(); i++, tmp++) {
                                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:825:61: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (i = sv->normals().begin(); i != sv->normals().end(); i++) {
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:832:87: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<FEdge *>::const_iterator j = sv->fedges_begin(); j != sv->fedges_end(); j++) {
                                                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:886:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         i++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:946:41: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (; i != ntv->viewedges().end(); i++) {
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1070:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i4++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1074:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<FEdge *>::const_iterator i5 = vm->FEdges().begin(); i5 != vm->FEdges().end(); i5++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1079:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i6++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1085:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i7++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:631:19: warning: Assert statement calls a function which may have desired side effects: 'GetOwner'. [assertWithSideEffect]
        assert(h->GetOwner()->GetNumberOfOEdges() ==
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1091:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i8++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1197:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i5++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1201:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<FEdge *>::const_iterator i6 = vm->FEdges().begin(); i6 != vm->FEdges().end(); i6++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1206:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i7++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1212:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i8++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1218:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       i9++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1239:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       j0++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1243:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<FEdge *>::const_iterator j1 = vm->FEdges().begin(); j1 != vm->FEdges().end(); j1++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1247:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       j2++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1252:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       j3++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapIO.cpp:1257:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       j4++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:118:5: performance: Variable 'A' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    A = iBrother.A;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:119:5: performance: Variable 'B' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    B = iBrother.B;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:120:5: performance: Variable '_Intersections' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    _Intersections = iBrother._Intersections;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:306:14: style: The scope of the variable 'c' can be reduced. [variableScope]
  real a, b, c;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:365:13: style: Local variable 'e' shadows outer variable [shadowVariable]
    WOEdge *e;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:311:7: note: Shadowed declaration
  int e;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:365:13: note: Shadow variable
    WOEdge *e;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:638:29: performance: Searching before insertion is not necessary. [stlFindInsert]
            vertices.insert(w);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:143:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (itE = v->incoming_edges_begin(); itE != v->incoming_edges_end(); itE++) {
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:149:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (itE = v->incoming_edges_begin(); itE != v->incoming_edges_end(); itE++) {
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:213:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (itE = v->incoming_edges_begin(); itE != v->incoming_edges_end(); itE++) {
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:217:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (itE = v->incoming_edges_begin(); itE != v->incoming_edges_end(); itE++) {
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:326:75: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (itE = v->incoming_edges_begin(); itE != v->incoming_edges_end(); itE++) {
                                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\Curvature.cpp:364:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (itE = v->incoming_edges_begin(); itE != v->incoming_edges_end(); itE++) {
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:60:3: performance: Variable '_Vertex' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _Vertex = iBrother._Vertex;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:61:3: performance: Variable '_EdgeList' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _EdgeList = iBrother._EdgeList;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:268:3: performance: Variable '_OEdgeList' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  _OEdgeList = iBrother.getEdgeList();
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:68:4: style: C-style pointer casting [cstyleCast]
  ((vertexdata *)(iBrother.userdata))->_copy = this;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:199:4: style: C-style pointer casting [cstyleCast]
  ((oedgedata *)(iBrother.userdata))->_copy = this;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:249:4: style: C-style pointer casting [cstyleCast]
  ((edgedata *)(iBrother.userdata))->_copy = this;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:277:4: style: C-style pointer casting [cstyleCast]
  ((facedata *)(iBrother.userdata))->_copy = this;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:521:33: style: C-style pointer casting [cstyleCast]
      edgedata *currentvedata = (edgedata *)current->userdata;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:531:25: style: C-style pointer casting [cstyleCast]
    aoEdge->setaVertex(((vertexdata *)(aoEdge->GetaVertex()->userdata))->_copy);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:532:25: style: C-style pointer casting [cstyleCast]
    aoEdge->setbVertex(((vertexdata *)(aoEdge->GetbVertex()->userdata))->_copy);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:534:25: style: C-style pointer casting [cstyleCast]
      aoEdge->setaFace(((facedata *)(aoEdge->GetaFace()->userdata))->_copy);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:536:23: style: C-style pointer casting [cstyleCast]
    aoEdge->setbFace(((facedata *)(aoEdge->GetbFace()->userdata))->_copy);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:537:23: style: C-style pointer casting [cstyleCast]
    aoEdge->setOwner(((edgedata *)(aoEdge->GetOwner()->userdata))->_copy);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:542:27: style: C-style pointer casting [cstyleCast]
      boEdge->setaVertex(((vertexdata *)(boEdge->GetaVertex()->userdata))->_copy);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:543:27: style: C-style pointer casting [cstyleCast]
      boEdge->setbVertex(((vertexdata *)(boEdge->GetbVertex()->userdata))->_copy);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:545:27: style: C-style pointer casting [cstyleCast]
        boEdge->setaFace(((facedata *)(boEdge->GetaFace()->userdata))->_copy);
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:547:25: style: C-style pointer casting [cstyleCast]
      boEdge->setbFace(((facedata *)(boEdge->GetbFace()->userdata))->_copy);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:548:25: style: C-style pointer casting [cstyleCast]
      boEdge->setOwner(((edgedata *)(boEdge->GetOwner()->userdata))->_copy);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:561:34: style: C-style pointer casting [cstyleCast]
      oedgedata *currentoedata = (oedgedata *)current->userdata;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:588:14: style: C-style pointer casting [cstyleCast]
      delete (oedgedata *)(oedgeb->userdata);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:122:55: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = _EdgeList.begin(); it != _EdgeList.end(); it++) {
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:295:90: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<WEdge *>::iterator it1 = v1Edges.begin(), end = v1Edges.end(); it1 != end; it1++) {
                                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2281:3: style: Struct 'less_SVertex2D' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  less_SVertex2D(real eps) : binary_function<SVertex *, SVertex *, bool>()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:338:51: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = v2Edges.begin(); it != v2Edges.end(); it++) {
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2311:3: style: Struct 'less_Intersection' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  less_Intersection(segment *iEdge) : binary_function<intersection *, intersection *, bool>()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:398:57: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = _OEdgeList.begin(); it != _OEdgeList.end(); it++) {
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:201:32: style: Struct 'binary_rule < Segment < FEdge * , Vec3r > , Segment < FEdge * , Vec3r > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  template<class T3, class T4> binary_rule(const binary_rule<T3, T4> &brother)
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:407:57: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = _OEdgeList.begin(); it != _OEdgeList.end(); it++) {
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:426:43: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = it++; it != _OEdgeList.end(); it++) {
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AutoPtrHelper.h:51:3: style: Class 'AutoPtr < GridHelpers :: Transform >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AutoPtr(T *ptr) : std::auto_ptr<T>(ptr)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:442:24: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (; woe != woend; woe++) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AutoPtrHelper.h:54:3: style: Class 'AutoPtr < GridHelpers :: Transform >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AutoPtr(std::auto_ptr_ref<T> ref) : std::auto_ptr<T>(ref)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:664:3: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  it++;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AutoPtrHelper.h:51:3: style: Class 'AutoPtr < OccluderSource >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AutoPtr(T *ptr) : std::auto_ptr<T>(ptr)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:666:3: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  it++;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\AutoPtrHelper.h:54:3: style: Class 'AutoPtr < OccluderSource >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  AutoPtr(std::auto_ptr_ref<T> ref) : std::auto_ptr<T>(ref)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:678:3: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  mit++;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WEdge.cpp:729:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       it++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2332:16: style: The function 'operator()' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool operator()(segment &s1, segment &s2)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:208:16: note: Virtual function in base class
  virtual bool operator()(T1 &, T2 &)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2332:16: note: Function in derived class
  virtual bool operator()(segment &s1, segment &s2)
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:69:12: style: C-style pointer casting [cstyleCast]
    face = (WFace *)fes->face();
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1878:22: style: C-style pointer casting [cstyleCast]
      WFace *wface = (WFace *)(aFace->userdata);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1912:12: style: C-style pointer casting [cstyleCast]
    face = (WFace *)fes->face();
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2035:12: style: C-style pointer casting [cstyleCast]
    face = (WFace *)fes->face();
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2110:12: style: C-style pointer casting [cstyleCast]
    face = (WFace *)fes->face();
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:206:12: style: C-style pointer casting [cstyleCast]
    face = (WFace *)fes->face();
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:72:8: style: The scope of the variable 'skipFace' can be reduced. [variableScope]
  bool skipFace;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1259:11: style: The scope of the variable 'psShape' can be reduced. [variableScope]
  SShape *psShape;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1573:15: style: The scope of the variable 'festart' can be reduced. [variableScope]
  FEdge *fe, *festart;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1574:7: style: The scope of the variable 'nSamples' can be reduced. [variableScope]
  int nSamples = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1577:12: style: The scope of the variable 'tmpQI' can be reduced. [variableScope]
  unsigned tmpQI = 0;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1579:12: style: The scope of the variable 'maxIndex' can be reduced. [variableScope]
  unsigned maxIndex, maxCard;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1579:22: style: The scope of the variable 'maxCard' can be reduced. [variableScope]
  unsigned maxIndex, maxCard;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1580:12: style: The scope of the variable 'qiMajority' can be reduced. [variableScope]
  unsigned qiMajority;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1730:15: style: The scope of the variable 'festart' can be reduced. [variableScope]
  FEdge *fe, *festart;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1731:12: style: The scope of the variable 'nSamples' can be reduced. [variableScope]
  unsigned nSamples = 0;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1736:12: style: The scope of the variable 'maxIndex' can be reduced. [variableScope]
  unsigned maxIndex, maxCard;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1736:22: style: The scope of the variable 'maxCard' can be reduced. [variableScope]
  unsigned maxIndex, maxCard;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1737:12: style: The scope of the variable 'qiMajority' can be reduced. [variableScope]
  unsigned qiMajority;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1739:8: style: The scope of the variable 'even_test' can be reduced. [variableScope]
  bool even_test;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1863:10: style: The scope of the variable 'fe' can be reduced. [variableScope]
  FEdge *fe;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1864:12: style: The scope of the variable 'qi' can be reduced. [variableScope]
  unsigned qi = 0;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1915:10: style: The scope of the variable 'oface' can be reduced. [variableScope]
  WFace *oface;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1916:8: style: The scope of the variable 'skipFace' can be reduced. [variableScope]
  bool skipFace;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2115:10: style: The scope of the variable 'oface' can be reduced. [variableScope]
  WFace *oface;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:258:10: style: The scope of the variable 'oface' can be reduced. [variableScope]
  WFace *oface;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1702:19: style: Checking if unsigned expression 'counter' is less than zero. [unsignedLessThanZero]
      if (counter <= 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1835:19: style: Checking if unsigned expression 'counter' is less than zero. [unsignedLessThanZero]
      if (counter <= 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1890:19: style: Checking if unsigned expression 'counter' is less than zero. [unsignedLessThanZero]
      if (counter <= 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2413:19: style: Checking if unsigned expression 'counter' is less than zero. [unsignedLessThanZero]
      if (counter <= 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2558:19: style: Checking if unsigned expression 'counter' is less than zero. [unsignedLessThanZero]
      if (counter <= 0) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1903:42: style: Parameter 'u' can be declared with const [constParameter]
                                  Vec3r &u,
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1905:42: style: Parameter 'origin' can be declared with const [constParameter]
                                  Vec3r &origin,
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1906:42: style: Parameter 'edgeDir' can be declared with const [constParameter]
                                  Vec3r &edgeDir,
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:229:30: style: Parameter 'p' can be declared with const [constParameter]
  inline void process(Point &p,
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:91:14: style: Parameter 's' can be declared with const [constParameter]
  Segment(T &s, const Point &iA, const Point &iB)
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1301:24: style: Unused variable: newVVertices [unusedVariable]
  vector<ViewVertex *> newVVertices;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1574:16: style: Variable 'nSamples' is assigned a value that is never used. [unreadVariable]
  int nSamples = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1577:18: style: Variable 'tmpQI' is assigned a value that is never used. [unreadVariable]
  unsigned tmpQI = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1605:11: style: Variable 'tmpQI' is assigned a value that is never used. [unreadVariable]
    tmpQI = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1731:21: style: Variable 'nSamples' is assigned a value that is never used. [unreadVariable]
  unsigned nSamples = 0;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1734:18: style: Variable 'tmpQI' is assigned a value that is never used. [unreadVariable]
  unsigned tmpQI = 0;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1864:15: style: Variable 'qi' is assigned a value that is never used. [unreadVariable]
  unsigned qi = 0;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2008:16: style: Unused variable: occluders [unusedVariable]
  OccludersSet occluders;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:843:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<ViewEdge *>::iterator ve = vedges.begin(), veend = vedges.end(); ve != veend; ve++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:973:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<ViewEdge *>::iterator ve = vedges.begin(), veend = vedges.end(); ve != veend; ve++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1133:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       ve++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1237:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         ve++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1261:84: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<WShape *>::const_iterator it = wshapes.begin(); it != wshapes.end(); it++) {
                                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1582:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<ViewEdge *>::iterator ve = vedges.begin(), veend = vedges.end(); ve != veend; ve++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1740:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<ViewEdge *>::iterator ve = vedges.begin(), veend = vedges.end(); ve != veend; ve++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1867:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<ViewEdge *>::iterator ve = vedges.begin(), veend = vedges.end(); ve != veend; ve++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:1931:68: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (p = occluders.begin(), pend = occluders.end(); p != pend; p++) {
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2122:66: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (p = occluders.begin(), pend = occluders.end(); p != pend; p++) {
                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2386:64: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (fe = ioEdges.begin(), fend = ioEdges.end(); fe != fend; fe++) {
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2394:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       sv++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2403:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         sve++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2425:68: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (s = segments.begin(), send = segments.end(); s != send; s++) {
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2433:64: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (fe = ioEdges.begin(), fend = ioEdges.end(); fe != fend; fe++) {
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2448:74: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (i = intersections.begin(), iend = intersections.end(); i != iend; i++) {
                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2538:60: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (s = iedges.begin(), send = iedges.end(); s != send; s++) {
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2550:78: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (i = eIntersections.begin(), iend = eIntersections.end(); i != iend; i++) {
                                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2566:64: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (fe = ioEdges.begin(), fend = ioEdges.end(); fe != fend; fe++) {
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:2572:66: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (s = segments.begin(), send = segments.end(); s != send; s++) {
                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:662:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<ViewEdge *>::iterator ve = vedges.begin(), veend = vedges.end(); ve != veend; ve++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\view_map\ViewMapBuilder.cpp:455:93: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (vector<ViewEdge *>::iterator ve = vedges.begin(), veend = vedges.end(); ve != veend; ve++) {
                                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:224:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         i++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:242:66: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (s = segments.begin(), send = segments.end(); s != send; s++) {
                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:250:60: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (s = toadd.begin(), send = toadd.end(); s != send; s++) {
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\geometry\SweepLine.h:281:10: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
         s++) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.cpp:288:4: style: C-style pointer casting [cstyleCast]
  ((WXFace *)face)->setCenter(center);
   ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.cpp:136:14: style: Local variable 'nedges' shadows outer variable [shadowVariable]
    unsigned nedges = _pWXFace->numberOfEdges();
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.cpp:81:12: note: Shadowed declaration
  unsigned nedges = _pWXFace->numberOfEdges();
           ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdge.cpp:136:14: note: Shadow variable
    unsigned nedges = _pWXFace->numberOfEdges();
             ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WXEdgeBuilder.cpp:48:13: style: The scope of the variable 'vertex' can be reduced. [variableScope]
  WXVertex *vertex;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\freestyle\intern\winged_edge\WingedEdgeBuilder.cpp:249:12: style: The scope of the variable 'vertex' can be reduced. [variableScope]
  WVertex *vertex;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\gpencil_modifiers\intern\MOD_gpenciltime.c:84:16: style: Variable 'segments' is assigned a value that is never used. [unreadVariable]
  int segments = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch_presets.c:126:14: style: The scope of the variable 'lat' can be reduced. [variableScope]
  float lon, lat;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch_presets.c:164:14: style: The scope of the variable 'lat' can be reduced. [variableScope]
  float lon, lat;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_attr_binding.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:442:48: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
    const GLvoid *pointer = (const GLubyte *)0 + offset + v_first * stride;
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:652:22: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  return (GLuint *)0 + v_first + el->index_start;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:652:32: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  return (GLuint *)0 + v_first + el->index_start;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:680:34: note: Calling function 'GPU_batch_draw_advanced', 2nd argument '0' value is 0
  GPU_batch_draw_advanced(batch, 0, 0, 0, 0);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:753:41: note: Calling function 'elem_offset', 2nd argument 'v_first' value is 0
    void *v_first_ofs = elem_offset(el, v_first);
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:652:32: note: Null pointer addition
  return (GLuint *)0 + v_first + el->index_start;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_context.cpp:84:3: warning: Member variable 'GPUContext::matrix_state' is not initialized in the constructor. [uninitMemberVar]
  GPUContext()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:649:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
    return (GLushort *)0 + v_first + el->index_start;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:649:36: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
    return (GLushort *)0 + v_first + el->index_start;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:680:34: note: Calling function 'GPU_batch_draw_advanced', 2nd argument '0' value is 0
  GPU_batch_draw_advanced(batch, 0, 0, 0, 0);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:753:41: note: Calling function 'elem_offset', 2nd argument 'v_first' value is 0
    void *v_first_ofs = elem_offset(el, v_first);
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_batch.c:649:36: note: Null pointer addition
    return (GLushort *)0 + v_first + el->index_start;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_buffers.c:350:17: style: The scope of the variable 'fmask' can be reduced. [variableScope]
          float fmask = 0.0f;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_buffers.c:686:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, j, k, x, y;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_buffers.c:686:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j, k, x, y;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_buffers.c:686:13: style: The scope of the variable 'k' can be reduced. [variableScope]
  int i, j, k, x, y;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_buffers.c:686:16: style: The scope of the variable 'x' can be reduced. [variableScope]
  int i, j, k, x, y;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_buffers.c:686:19: style: The scope of the variable 'y' can be reduced. [variableScope]
  int i, j, k, x, y;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:1014:23: error: Array 'fsides[4]' accessed at index 5, which is out of bounds. [arrayIndexOutOfBounds]
        memcpy(&fsides[5][y * w + x], &frectb[(h - y - 1) * rectw + w - 1 - x], block_size);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:882:12: warning: Identical inner 'return' condition is always true. [identicalInnerCondition]
    return *tex;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:881:7: note: outer condition: *tex
  if (*tex) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:882:12: note: identical inner condition: *tex
    return *tex;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:937:12: warning: Identical inner 'return' condition is always true. [identicalInnerCondition]
    return *tex;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:936:7: note: outer condition: *tex
  if (*tex) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:937:12: note: identical inner condition: *tex
    return *tex;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:118:24: style: The statement 'if (GTS.linearmipmap!=linear) GTS.linearmipmap=linear' is logically equivalent to 'GTS.linearmipmap=linear'. [duplicateConditionalAssign]
  if (GTS.linearmipmap != linear) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:119:22: note: Assignment 'GTS.linearmipmap=linear'
    GTS.linearmipmap = linear;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:118:24: note: Condition 'GTS.linearmipmap!=linear' is redundant
  if (GTS.linearmipmap != linear) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_immediate.c:341:48: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
    const GLvoid *pointer = (const GLubyte *)0 + offset;
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_material_library.c:737:16: style: The scope of the variable 'function' can be reduced. [variableScope]
  GPUFunction *function;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_material.c:345:9: style: The scope of the variable 'l' can be reduced. [variableScope]
  float l[3], d[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_material.c:345:15: style: The scope of the variable 'd' can be reduced. [variableScope]
  float l[3], d[3];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_node_graph.c:81:15: style: The scope of the variable 'name' can be reduced. [variableScope]
  const char *name;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_draw.c:1179:36: style: The scope of the variable 'size' can be reduced. [variableScope]
  int blocksize, height, width, i, size, offset = 0;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_platform.c:52:15: style: struct member 'GPUPlatformSupportTest::vendor' is never used. [unusedStructMember]
  const char *vendor;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_platform.c:53:15: style: struct member 'GPUPlatformSupportTest::renderer' is never used. [unusedStructMember]
  const char *renderer;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_platform.c:54:15: style: struct member 'GPUPlatformSupportTest::version' is never used. [unusedStructMember]
  const char *version;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\gpu\intern\gpu_shader.c:173:17: style: The scope of the variable 'c' can be reduced. [variableScope]
    const char *c, *pos, *end = code[i] + strlen(code[i]);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\iksolver_plugin.c:54:64: style: The scope of the variable 'oldchan' can be reduced. [variableScope]
  bPoseChannel *curchan, *pchan_root = NULL, *chanlist[256], **oldchan;
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\iksolver_plugin.c:59:10: style: The scope of the variable 't' can be reduced. [variableScope]
  int a, t, segcount = 0, size, newsize, *oldparent, parent;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\iksolver_plugin.c:59:27: style: The scope of the variable 'size' can be reduced. [variableScope]
  int a, t, segcount = 0, size, newsize, *oldparent, parent;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\iksolver_plugin.c:59:33: style: The scope of the variable 'newsize' can be reduced. [variableScope]
  int a, t, segcount = 0, size, newsize, *oldparent, parent;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\iksolver_plugin.c:59:43: style: The scope of the variable 'oldparent' can be reduced. [variableScope]
  int a, t, segcount = 0, size, newsize, *oldparent, parent;
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\iksolver_plugin.c:59:54: style: The scope of the variable 'parent' can be reduced. [variableScope]
  int a, t, segcount = 0, size, newsize, *oldparent, parent;
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\iksolver_plugin.c:292:10: style: The scope of the variable 'flag' can be reduced. [variableScope]
  int a, flag, hasstretch = 0, resultblend = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\iksolver_plugin.c:294:15: style: The scope of the variable 'seg' can be reduced. [variableScope]
  IK_Segment *seg, *parent, **iktree, *iktarget;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\iksolver_plugin.c:294:40: style: The scope of the variable 'iktarget' can be reduced. [variableScope]
  IK_Segment *seg, *parent, **iktree, *iktarget;
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\allocimbuf.c:133:7: style: The scope of the variable 'tx' can be reduced. [variableScope]
  int tx, ty;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\allocimbuf.c:133:11: style: The scope of the variable 'ty' can be reduced. [variableScope]
  int tx, ty;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\allocimbuf.c:632:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\anim_movie.c:1309:7: style: The scope of the variable 'position' can be reduced. [variableScope]
  int position = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\anim_movie.c:1428:10: style: The scope of the variable 'frs_sec_base_double' can be reduced. [variableScope]
  double frs_sec_base_double;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\anim_movie.c:1309:16: style: Variable 'position' is assigned a value that is never used. [unreadVariable]
  int position = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\cineon_dpx.c:91:10: style: The scope of the variable 'fbuf_ptr' can be reduced. [variableScope]
  float *fbuf_ptr;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\cineon_dpx.c:92:18: style: The scope of the variable 'rect_ptr' can be reduced. [variableScope]
  unsigned char *rect_ptr;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\cineon_dpx.c:93:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x, y, depth, bitspersample, rvalue;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\bmp.c:345:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (is_grayscale) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\bmp.c:336:7: note: First condition
  if (is_grayscale) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\bmp.c:345:7: note: Second condition
  if (is_grayscale) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cache.c:174:17: style: The scope of the variable 'ttile' can be reduced. [variableScope]
  ImThreadTile *ttile;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cache.c:210:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\bmp.c:118:10: style: The scope of the variable 'rect' can be reduced. [variableScope]
  uchar *rect;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\bmp.c:184:13: style: The scope of the variable 'index' can be reduced. [variableScope]
        int index;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:810:5: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
    values++;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:103:3: warning: Member variable 'IK_Target::errorCallback' is not initialized in the constructor. [uninitMemberVar]
  IK_Target()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:103:3: warning: Member variable 'IK_Target::eeRest' is not initialized in the constructor. [uninitMemberVar]
  IK_Target()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:448:12: style: C-style pointer casting [cstyleCast]
    return (IK_Data *)pose->ikdata;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:457:10: style: C-style pointer casting [cstyleCast]
  return (IK_Data *)pose->ikdata;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:598:23: style: C-style pointer casting [cstyleCast]
  IK_Target *target = (IK_Target *)param;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:643:23: style: C-style pointer casting [cstyleCast]
  IK_Scene *ikscene = (IK_Scene *)param;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:747:25: style: C-style pointer casting [cstyleCast]
  IK_Target *iktarget = (IK_Target *)_param;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:819:25: style: C-style pointer casting [cstyleCast]
  IK_Target *iktarget = (IK_Target *)_param;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:877:24: style: C-style pointer casting [cstyleCast]
  IK_Channel *ikchan = (IK_Channel *)_param;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1671:16: style: C-style pointer casting [cstyleCast]
  for (pchan = (bPoseChannel *)ob->pose->chanbase.first; pchan;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1672:16: style: C-style pointer casting [cstyleCast]
       pchan = (bPoseChannel *)pchan->next) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1711:19: style: C-style pointer casting [cstyleCast]
    for (scene = ((IK_Data *)ob->pose->ikdata)->first; scene != NULL; scene = scene->next) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1918:16: style: C-style pointer casting [cstyleCast]
  for (pchan = (bPoseChannel *)ob->pose->chanbase.first; pchan;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1919:16: style: C-style pointer casting [cstyleCast]
       pchan = (bPoseChannel *)pchan->next) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1941:23: style: C-style pointer casting [cstyleCast]
    IK_Data *ikdata = (IK_Data *)ob->pose->ikdata;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1966:23: style: C-style pointer casting [cstyleCast]
    IK_Data *ikdata = (IK_Data *)pose->ikdata;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1979:23: style: C-style pointer casting [cstyleCast]
    IK_Data *ikdata = (IK_Data *)pose->ikdata;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1992:23: style: C-style pointer casting [cstyleCast]
    IK_Data *ikdata = (IK_Data *)pose->ikdata;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1456:9: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
    ret = true;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1385:9: note: ret is assigned
    ret = false;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1456:9: note: ret is overwritten
    ret = true;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1511:7: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
  ret = scene->addObject(armname, ikscene->base);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1476:13: note: ret is assigned
        ret = false;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1511:7: note: ret is overwritten
  ret = scene->addObject(armname, ikscene->base);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:248:64: style: The scope of the variable 'oldchan' can be reduced. [variableScope]
  bPoseChannel *curchan, *pchan_root = NULL, *chanlist[256], **oldchan;
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:252:10: style: The scope of the variable 't' can be reduced. [variableScope]
  int a, t, segcount = 0, size, newsize, *oldparent, parent, rootbone, treecount;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:252:27: style: The scope of the variable 'size' can be reduced. [variableScope]
  int a, t, segcount = 0, size, newsize, *oldparent, parent, rootbone, treecount;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:252:33: style: The scope of the variable 'newsize' can be reduced. [variableScope]
  int a, t, segcount = 0, size, newsize, *oldparent, parent, rootbone, treecount;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:252:43: style: The scope of the variable 'oldparent' can be reduced. [variableScope]
  int a, t, segcount = 0, size, newsize, *oldparent, parent, rootbone, treecount;
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:252:54: style: The scope of the variable 'parent' can be reduced. [variableScope]
  int a, t, segcount = 0, size, newsize, *oldparent, parent, rootbone, treecount;
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:966:10: style: The scope of the variable 'flag' can be reduced. [variableScope]
  int a, flag, njoint;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1097:9: style: The scope of the variable 'bone' can be reduced. [variableScope]
  Bone *bone;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:1180:9: style: The scope of the variable 'length' can be reduced. [variableScope]
  float length;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:766:13: style: Variable 'values' is assigned a value that is never used. [unreadVariable]
      values++;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:782:13: style: Variable 'values' is assigned a value that is never used. [unreadVariable]
      values++;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\ikplugin\intern\itasc_plugin.cpp:810:11: style: Variable 'values' is assigned a value that is never used. [unreadVariable]
    values++;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\anim_movie.c:993:7: style: The scope of the variable 'len' can be reduced. [variableScope]
  int len, namelen;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\Color.h:64:3: style: Class 'Color32' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Color32(unsigned int U) : u(U)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\ColorBlock.h:39:3: style: Struct 'ColorBlock' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ColorBlock(const uint *linearImage);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\anim_movie.c:436:7: style: The scope of the variable 'y' can be reduced. [variableScope]
  int y;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:308:16: style: The scope of the variable 'pixel' can be reduced. [variableScope]
  unsigned int pixel, index;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:308:23: style: The scope of the variable 'index' can be reduced. [variableScope]
  unsigned int pixel, index;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:425:10: style: The scope of the variable 'mergedData' can be reduced. [variableScope]
  float *mergedData;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:426:16: style: The scope of the variable 'sampleIndex' can be reduced. [variableScope]
  unsigned int sampleIndex;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:831:23: style: The scope of the variable 'oldPixel' can be reduced. [variableScope]
  unsigned int pixel, oldPixel;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:925:23: style: The scope of the variable 'oldPixel' can be reduced. [variableScope]
  unsigned int pixel, oldPixel;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1155:9: style: The scope of the variable 'col' can be reduced. [variableScope]
  float col, *lut;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1176:9: style: The scope of the variable 'col' can be reduced. [variableScope]
  float col, *lut;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1311:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1410:42: style: The scope of the variable 'y' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y, cb, cr;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1410:45: style: The scope of the variable 'cb' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y, cb, cr;
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1410:49: style: The scope of the variable 'cr' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y, cb, cr;
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\FlipDXT.cpp:222:25: style: Local variable 'i' shadows outer variable [shadowVariable]
      for (unsigned int i = 0; i < blocks_per_row; i++) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\FlipDXT.cpp:211:21: note: Shadowed declaration
  for (unsigned int i = 0; i < levels; i++) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\FlipDXT.cpp:222:25: note: Shadow variable
      for (unsigned int i = 0; i < blocks_per_row; i++) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1442:42: style: The scope of the variable 'y' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y, cb, cr, a;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\FlipDXT.cpp:228:25: style: Local variable 'i' shadows outer variable [shadowVariable]
      for (unsigned int i = 0; i < blocks; i++) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\FlipDXT.cpp:211:21: note: Shadowed declaration
  for (unsigned int i = 0; i < levels; i++) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\FlipDXT.cpp:228:25: note: Shadow variable
      for (unsigned int i = 0; i < blocks; i++) {
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1442:45: style: The scope of the variable 'cb' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y, cb, cr, a;
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1442:49: style: The scope of the variable 'cr' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y, cb, cr, a;
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1442:53: style: The scope of the variable 'a' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y, cb, cr, a;
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1475:42: style: The scope of the variable 'y1' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y1, y2, cb, cr;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1475:46: style: The scope of the variable 'y2' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y1, y2, cb, cr;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1475:50: style: The scope of the variable 'cb' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y1, y2, cb, cr;
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1475:54: style: The scope of the variable 'cr' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y1, y2, cb, cr;
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1527:42: style: The scope of the variable 'y1' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y1, y2, cb, cr, a1, a2;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1527:46: style: The scope of the variable 'y2' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y1, y2, cb, cr, a1, a2;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1527:50: style: The scope of the variable 'cb' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y1, y2, cb, cr, a1, a2;
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1527:54: style: The scope of the variable 'cr' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y1, y2, cb, cr, a1, a2;
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1527:58: style: The scope of the variable 'a1' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y1, y2, cb, cr, a1, a2;
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1527:62: style: The scope of the variable 'a2' can be reduced. [variableScope]
  float conversionMatrix[9], refLowData, y1, y2, cb, cr, a1, a2;
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1581:30: style: The scope of the variable 'value' can be reduced. [variableScope]
  float conversionMatrix[9], value, refLowData;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1607:30: style: The scope of the variable 'value' can be reduced. [variableScope]
  float conversionMatrix[9], value, refLowData;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1700:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\cineon\logImageCore.c:1703:10: style: The scope of the variable 'srgbSrc_ptr' can be reduced. [variableScope]
  float *srgbSrc_ptr;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\anim_movie.c:318:11: style: The scope of the variable 'hr' can be reduced. [variableScope]
  HRESULT hr;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\anim_movie.c:319:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, firstvideo = -1;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\anim_movie.c:319:10: style: The scope of the variable 'firstvideo' can be reduced. [variableScope]
  int i, firstvideo = -1;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\dds_api.cpp:99:17: style: The scope of the variable 'rect' can be reduced. [variableScope]
  unsigned int *rect;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:68:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_NVTT = DDS_MAKEFOURCC('N', 'V', 'T', 'T');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:69:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_DDS = DDS_MAKEFOURCC('D', 'D', 'S', ' ');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:70:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_DXT1 = DDS_MAKEFOURCC('D', 'X', 'T', '1');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:71:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_DXT2 = DDS_MAKEFOURCC('D', 'X', 'T', '2');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:72:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_DXT3 = DDS_MAKEFOURCC('D', 'X', 'T', '3');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:73:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_DXT4 = DDS_MAKEFOURCC('D', 'X', 'T', '4');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:74:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_DXT5 = DDS_MAKEFOURCC('D', 'X', 'T', '5');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:75:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_RXGB = DDS_MAKEFOURCC('R', 'X', 'G', 'B');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:76:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_ATI1 = DDS_MAKEFOURCC('A', 'T', 'I', '1');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:77:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_ATI2 = DDS_MAKEFOURCC('A', 'T', 'I', '2');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:81:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_DX10 = DDS_MAKEFOURCC('D', 'X', '1', '0');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:83:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint FOURCC_UVER = DDS_MAKEFOURCC('U', 'V', 'E', 'R');
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:663:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  this->pf.fourcc = DDS_MAKEFOURCC(c0, c1, c2, c3);
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\dds\DirectDrawSurface.cpp:687:0: information: Skipping configuration 'DDS_MAKEFOURCC' since the value of 'DDS_MAKEFOURCC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  this->pf.bitcount = DDS_MAKEFOURCC(c0, c1, c2, c3);
^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:38:16: style: The scope of the variable 'c1' can be reduced. [variableScope]
  unsigned int c1, c2, c3, error;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:38:20: style: The scope of the variable 'c2' can be reduced. [variableScope]
  unsigned int c1, c2, c3, error;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:38:24: style: The scope of the variable 'c3' can be reduced. [variableScope]
  unsigned int c1, c2, c3, error;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:38:28: style: The scope of the variable 'error' can be reduced. [variableScope]
  unsigned int c1, c2, c3, error;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:58:9: style: The scope of the variable 'c1' can be reduced. [variableScope]
  float c1, c2, c3;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:58:13: style: The scope of the variable 'c2' can be reduced. [variableScope]
  float c1, c2, c3;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:58:17: style: The scope of the variable 'c3' can be reduced. [variableScope]
  float c1, c2, c3;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:76:16: style: The scope of the variable 'c1' can be reduced. [variableScope]
  unsigned int c1, c2, c3, error;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:76:20: style: The scope of the variable 'c2' can be reduced. [variableScope]
  unsigned int c1, c2, c3, error;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:76:24: style: The scope of the variable 'c3' can be reduced. [variableScope]
  unsigned int c1, c2, c3, error;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:76:28: style: The scope of the variable 'error' can be reduced. [variableScope]
  unsigned int c1, c2, c3, error;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:99:9: style: The scope of the variable 'c1' can be reduced. [variableScope]
  float c1, c2, c3, *point2;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:99:13: style: The scope of the variable 'c2' can be reduced. [variableScope]
  float c1, c2, c3, *point2;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:99:17: style: The scope of the variable 'c3' can be reduced. [variableScope]
  float c1, c2, c3, *point2;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:324:29: style: The scope of the variable 'row3' can be reduced. [variableScope]
  const char *row1, *row2, *row3;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:478:17: style: The scope of the variable 'wsum' can be reduced. [variableScope]
          float wsum = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:643:13: style: The scope of the variable 'val' can be reduced. [variableScope]
  int x, y, val;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:670:9: style: The scope of the variable 'val' can be reduced. [variableScope]
  float val, *cp;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:671:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x, y;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:671:10: style: The scope of the variable 'y' can be reduced. [variableScope]
  int x, y;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:705:9: style: The scope of the variable 'val' can be reduced. [variableScope]
  float val;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:732:9: style: The scope of the variable 'val' can be reduced. [variableScope]
  float val, *fp;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:733:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x, y;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\filter.c:733:10: style: The scope of the variable 'y' can be reduced. [variableScope]
  int x, y;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\colormanagement.c:491:36: style: The scope of the variable 'tot_display_view' can be reduced. [variableScope]
  int tot_colorspace, tot_display, tot_display_view, tot_looks;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\colormanagement.c:652:15: style: The scope of the variable 'configdir' can be reduced. [variableScope]
  const char *configdir;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\colormanagement.c:653:8: style: The scope of the variable 'configfile' can be reduced. [variableScope]
  char configfile[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\colormanagement.c:3298:21: style: The scope of the variable 'view' can be reduced. [variableScope]
  ColorManagedView *view;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\imageprocess.c:47:17: style: The scope of the variable 'rt' can be reduced. [variableScope]
  unsigned char rt, *cp = (unsigned char *)ibuf->rect;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\colormanagement.c:3382:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x, y;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\imageprocess.c:48:9: style: The scope of the variable 'rtf' can be reduced. [variableScope]
  float rtf, *cpf = ibuf->rect_float;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\colormanagement.c:3382:10: style: The scope of the variable 'y' can be reduced. [variableScope]
  int x, y;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\imageprocess.c:142:10: style: The scope of the variable 'row1' can be reduced. [variableScope]
  float *row1, *row2, *row3, *row4, a, b;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\imageprocess.c:142:17: style: The scope of the variable 'row2' can be reduced. [variableScope]
  float *row1, *row2, *row3, *row4, a, b;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\imageprocess.c:142:24: style: The scope of the variable 'row3' can be reduced. [variableScope]
  float *row1, *row2, *row3, *row4, a, b;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\imageprocess.c:142:31: style: The scope of the variable 'row4' can be reduced. [variableScope]
  float *row1, *row2, *row3, *row4, a, b;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\imageprocess.c:143:18: style: The scope of the variable 'row1I' can be reduced. [variableScope]
  unsigned char *row1I, *row2I, *row3I, *row4I;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\imageprocess.c:143:26: style: The scope of the variable 'row2I' can be reduced. [variableScope]
  unsigned char *row1I, *row2I, *row3I, *row4I;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\imageprocess.c:143:34: style: The scope of the variable 'row3I' can be reduced. [variableScope]
  unsigned char *row1I, *row2I, *row3I, *row4I;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\imageprocess.c:143:42: style: The scope of the variable 'row4I' can be reduced. [variableScope]
  unsigned char *row1I, *row2I, *row3I, *row4I;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\indexer.c:1217:7: style: Condition 'context' is always false [knownConditionTrueFalse]
  if (context) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\indexer.c:1155:32: note: Assignment 'context=NULL', assigned value is 0
  IndexBuildContext *context = NULL;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\indexer.c:1217:7: note: Condition 'context' is always false
  if (context) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\indexer.c:246:7: style: The scope of the variable 'half' can be reduced. [variableScope]
  int half;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\indexer.c:247:7: style: The scope of the variable 'middle' can be reduced. [variableScope]
  int middle;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\jpeg.c:236:9: style: The scope of the variable 'i' can be reduced. [variableScope]
  INT32 i;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\jpeg.c:237:8: style: The scope of the variable 'neogeo' can be reduced. [variableScope]
  char neogeo[128];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\iris.c:916:15: style: The scope of the variable 'cc' can be reduced. [variableScope]
  short todo, cc;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\iris.c:917:7: style: The scope of the variable 'count' can be reduced. [variableScope]
  int count;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\jp2.c:828:22: style: The scope of the variable 'from_straight' can be reduced. [variableScope]
  float *rect_float, from_straight[4];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\jp2.c:476:9: style: Variable 'a' is assigned a value that is never used. [unreadVariable]
      a = (use_alpha) ? image->comps[1].data : NULL;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\jp2.c:529:9: style: Variable 'a' is assigned a value that is never used. [unreadVariable]
      a = (use_alpha) ? image->comps[1].data : NULL;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\jp2.c:764:19: style: Variable 'temp_rate' is assigned a value that is never used. [unreadVariable]
        temp_rate = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\jp2.c:790:19: style: Variable 'temp_rate' is assigned a value that is never used. [unreadVariable]
        temp_rate = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\moviecache.c:154:9: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (remove) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\moviecache.c:150:9: note: First condition
    if (remove) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\moviecache.c:154:9: note: Second condition
    if (remove) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\iris.c:224:19: style: Same expression on both sides of '=='. [duplicateExpression]
  if (BIG_LONG(1) == 1) {
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\iris.c:235:13: warning: Redundant assignment of 'zval[0]' to itself. [selfAssignment]
    zval[0] = BIG_LONG(zval[0]);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\oiio\openimageio_api.cpp:199:8: style: The scope of the variable 'file_colorspace' can be reduced. [variableScope]
  char file_colorspace[IM_MAX_SPACE];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\indexer.c:643:8: style: The scope of the variable 'fname' can be reduced. [variableScope]
  char fname[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\readimage.c:228:13: style: The scope of the variable 'a' can be reduced. [variableScope]
  int file, a;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\radiance_hdr.c:219:9: style: The scope of the variable 'sline' can be reduced. [variableScope]
  RGBE *sline;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\radiance_hdr.c:221:10: style: The scope of the variable 'rect_float' can be reduced. [variableScope]
  float *rect_float;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\radiance_hdr.c:222:7: style: The scope of the variable 'found' can be reduced. [variableScope]
  int found = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\radiance_hdr.c:224:24: style: The scope of the variable 'ptr' can be reduced. [variableScope]
  const unsigned char *ptr, *mem_eof = mem + size;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:167:3: style: Class 'IFileStream' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  IFileStream(const char *filename) : IStream(filename)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:231:3: style: Class 'OMemStream' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  OMemStream(ImBuf *ibuf_) : OStream("<memory>"), ibuf(ibuf_), offset(0)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:273:3: style: Class 'OFileStream' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  OFileStream(const char *filename) : OStream(filename)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:485:22: style: The scope of the variable 'from' can be reduced. [variableScope]
      unsigned char *from;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:970:15: style: The scope of the variable 'echan' can be reduced. [variableScope]
  ExrChannel *echan;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:1581:17: style: Local variable 'lay' shadows outer variable [shadowVariable]
      ExrLayer *lay = imb_exr_get_layer(&data->layers, layname);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:1536:13: note: Shadowed declaration
  ExrLayer *lay;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:1581:17: note: Shadow variable
      ExrLayer *lay = imb_exr_get_layer(&data->layers, layname);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:1582:16: style: Local variable 'pass' shadows outer variable [shadowVariable]
      ExrPass *pass = imb_exr_get_pass(&lay->passes, passname);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:1537:12: note: Shadowed declaration
  ExrPass *pass;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:1582:16: note: Shadow variable
      ExrPass *pass = imb_exr_get_pass(&lay->passes, passname);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:1817:39: style: Local variable 'i' shadows outer variable [shadowVariable]
      for (std::set<string>::iterator i = layerNames.begin(); i != layerNames.end(); i++) {
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:1816:37: note: Shadowed declaration
    for (ChannelList::ConstIterator i = channels.begin(); i != channels.end(); i++) {
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:1817:39: note: Shadow variable
      for (std::set<string>::iterator i = layerNames.begin(); i != layerNames.end(); i++) {
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\openexr\openexr_api.cpp:1817:86: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (std::set<string>::iterator i = layerNames.begin(); i != layerNames.end(); i++) {
                                                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:95:13: error: The address of local variable 'data' is accessed at non-zero index. [objectIndex]
  if (putc(p[2], file) == EOF) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:94:16: note: Address of variable taken here.
  p = (uchar *)&data;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:95:13: note: The address of local variable 'data' is accessed at non-zero index.
  if (putc(p[2], file) == EOF) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:113:13: error: The address of local variable 'data' is accessed at non-zero index. [objectIndex]
  if (putc(p[2], file) == EOF) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:111:16: note: Address of variable taken here.
  p = (uchar *)&data;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:113:13: note: The address of local variable 'data' is accessed at non-zero index.
  if (putc(p[2], file) == EOF) {
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:448:5: error: The address of local variable 'col' is accessed at non-zero index. [objectIndex]
  cp[1] = cp[2] = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:434:24: note: Address of variable taken here.
  uchar *cp = (uchar *)&col;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:448:5: note: The address of local variable 'col' is accessed at non-zero index.
  cp[1] = cp[2] = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:573:5: error: The address of local variable 'col' is accessed at non-zero index. [objectIndex]
  cp[1] = cp[2] = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:559:24: note: Address of variable taken here.
  uchar *cp = (uchar *)&col;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:573:5: note: The address of local variable 'col' is accessed at non-zero index.
  cp[1] = cp[2] = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:653:5: error: The address of local variable 'cp_data' is accessed at non-zero index. [objectIndex]
  cp[1] = cp[2] = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:628:24: note: Address of variable taken here.
  uchar *cp = (uchar *)&cp_data;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:653:5: note: The address of local variable 'cp_data' is accessed at non-zero index.
  cp[1] = cp[2] = 0;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:769:20: error: The address of local variable 'col' is accessed at non-zero index. [objectIndex]
      cp[3] = ((mem[1] << 1) & 0xf8);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:767:22: note: Address of variable taken here.
      mem = (uchar *)&col;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:769:20: note: The address of local variable 'col' is accessed at non-zero index.
      cp[3] = ((mem[1] << 1) & 0xf8);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:770:45: error: The address of local variable 'col' is accessed at non-zero index. [objectIndex]
      cp[2] = ((mem[0] & 0xe0) >> 2) + ((mem[1] & 0x03) << 6);
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:767:22: note: Address of variable taken here.
      mem = (uchar *)&col;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:770:45: note: The address of local variable 'col' is accessed at non-zero index.
      cp[2] = ((mem[0] & 0xe0) >> 2) + ((mem[1] & 0x03) << 6);
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:130:7: style: The scope of the variable 'last' can be reduced. [variableScope]
  int last, this;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:130:13: style: The scope of the variable 'this' can be reduced. [variableScope]
  int last, this;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:131:7: style: The scope of the variable 'copy' can be reduced. [variableScope]
  int copy, bytes;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:131:13: style: The scope of the variable 'bytes' can be reduced. [variableScope]
  int copy, bytes;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:625:7: style: The scope of the variable 'count' can be reduced. [variableScope]
  int count, size;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:782:26: style: The scope of the variable 'col' can be reduced. [variableScope]
    unsigned int *lrect, col;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\targa.c:695:26: error: Signed integer overflow for expression '16777215L<<24'. [integerOverflow]
      cmap[0] &= BIG_LONG(0x00ffffffl);
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:273:7: style: The scope of the variable 'c' can be reduced. [variableScope]
  int c;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:420:8: style: The scope of the variable 'desc' can be reduced. [variableScope]
  char desc[URI_MAX + 22];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:421:8: style: The scope of the variable 'tpath' can be reduced. [variableScope]
  char tpath[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:423:8: style: The scope of the variable 'temp' can be reduced. [variableScope]
  char temp[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:424:8: style: The scope of the variable 'mtime' can be reduced. [variableScope]
  char mtime[40] = "0";  /* in case we can't stat the file */
       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:425:8: style: The scope of the variable 'cwidth' can be reduced. [variableScope]
  char cwidth[40] = "0"; /* in case images have no data */
       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:426:8: style: The scope of the variable 'cheight' can be reduced. [variableScope]
  char cheight[40] = "0";
       ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:428:9: style: The scope of the variable 'ex' can be reduced. [variableScope]
  short ex, ey;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:428:13: style: The scope of the variable 'ey' can be reduced. [variableScope]
  short ex, ey;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:429:9: style: The scope of the variable 'scaledx' can be reduced. [variableScope]
  float scaledx, scaledy;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:429:18: style: The scope of the variable 'scaledy' can be reduced. [variableScope]
  float scaledx, scaledy;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\thumbs.c:705:14: style: The scope of the variable 'thumb_hash_curr' can be reduced. [variableScope]
        char thumb_hash_curr[33];
             ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:40:10: style: The scope of the variable 'p1' can be reduced. [variableScope]
  uchar *p1, *_p1, *dest;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:43:26: style: The scope of the variable 'p1f' can be reduced. [variableScope]
  float af, rf, gf, bf, *p1f, *_p1f, *destf;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:490:13: style: The scope of the variable 'x_src' can be reduced. [variableScope]
  uintptr_t x_src, dx_src, x_dst;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:558:28: style: The scope of the variable 'x_dst' can be reduced. [variableScope]
  uintptr_t x_src, dx_dst, x_dst;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:630:11: style: The scope of the variable 'val' can be reduced. [variableScope]
      int val;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:650:9: style: The scope of the variable 'val' can be reduced. [variableScope]
    int val;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:686:10: style: The scope of the variable 'x_src' can be reduced. [variableScope]
  double x_src, dx_src;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:748:17: style: The scope of the variable 'x_dst' can be reduced. [variableScope]
  float dx_dst, x_dst;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:917:9: style: The scope of the variable 'sample' can be reduced. [variableScope]
  float sample, add, val[4], nval[4], valf[4], nvalf[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:1058:9: style: The scope of the variable 'sample' can be reduced. [variableScope]
  float sample, add, val[4], nval[4], valf[4], nvalf[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:1196:9: style: The scope of the variable 'sample' can be reduced. [variableScope]
  float sample, add;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\scaling.c:1372:9: style: The scope of the variable 'sample' can be reduced. [variableScope]
  float sample, add;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\tiff.c:549:7: style: The scope of the variable 'level' can be reduced. [variableScope]
  int level;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\tiff.c:552:7: style: The scope of the variable 'found' can be reduced. [variableScope]
  int found;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\imbuf\intern\util.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_customdata.h:71:3: warning: Member variable 'CDStreamConfig::mvert' is not initialized in the constructor. [uninitMemberVar]
  CDStreamConfig()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_customdata.h:71:3: warning: Member variable 'CDStreamConfig::mloopuv' is not initialized in the constructor. [uninitMemberVar]
  CDStreamConfig()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_customdata.h:71:3: warning: Member variable 'CDStreamConfig::loopdata' is not initialized in the constructor. [uninitMemberVar]
  CDStreamConfig()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_customdata.cc:109:34: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
          if (uvs[uv_idx] == uv) {
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_exporter.cc:72:17: warning: Member variable 'ExportSettings::curves_as_mesh' is not initialized in the constructor. [uninitMemberVar]
ExportSettings::ExportSettings()
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_util.h:187:3: style: Class 'ScopeTimer' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ScopeTimer(const char *message);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:59:3: warning: Member variable 'ImportSettings::conversion_mat' is not initialized in the constructor. [uninitMemberVar]
  ImportSettings()
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_camera.h:42:16: style: The function 'do_write' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void do_write();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_object.h:68:16: note: Virtual function in base class
  virtual void do_write() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_camera.h:42:16: note: Function in derived class
  virtual void do_write();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_camera.h:32:8: style: The function 'valid' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:137:16: note: Virtual function in base class
  virtual bool valid() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_camera.h:32:8: note: Function in derived class
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_mesh.h:59:16: style: The function 'do_write' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void do_write();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_object.h:68:16: note: Virtual function in base class
  virtual void do_write() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_mesh.h:59:16: note: Function in derived class
  virtual void do_write();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_camera.h:33:8: style: The function 'accepts_object_type' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:138:16: note: Virtual function in base class
  virtual bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_camera.h:33:8: note: Function in derived class
  bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_curves.h:41:8: style: The function 'do_write' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void do_write();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_object.h:68:16: note: Virtual function in base class
  virtual void do_write() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_curves.h:41:8: note: Function in derived class
  void do_write();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_camera.h:37:8: style: The function 'readObjectData' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:142:16: note: Virtual function in base class
  virtual void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_camera.h:37:8: note: Function in derived class
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_curves.h:52:9: style: The function 'getEvaluatedMesh' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  Mesh *getEvaluatedMesh(Scene *scene_eval, Object *ob_eval, bool &r_needsfree);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_mesh.h:61:17: note: Virtual function in base class
  virtual Mesh *getEvaluatedMesh(Scene *scene_eval, Object *ob_eval, bool &r_needsfree) = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_curves.h:52:9: note: Function in derived class
  Mesh *getEvaluatedMesh(Scene *scene_eval, Object *ob_eval, bool &r_needsfree);
        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_transform.h:34:8: style: The function 'valid' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:137:16: note: Virtual function in base class
  virtual bool valid() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_transform.h:34:8: note: Function in derived class
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_hair.h:45:16: style: The function 'do_write' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void do_write();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_object.h:68:16: note: Virtual function in base class
  virtual void do_write() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_hair.h:45:16: note: Function in derived class
  virtual void do_write();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_transform.h:35:8: style: The function 'accepts_object_type' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:138:16: note: Virtual function in base class
  virtual bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_transform.h:35:8: note: Function in derived class
  bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_nurbs.h:37:16: style: The function 'do_write' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void do_write();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_object.h:68:16: note: Virtual function in base class
  virtual void do_write() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_nurbs.h:37:16: note: Function in derived class
  virtual void do_write();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_transform.h:39:8: style: The function 'readObjectData' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:142:16: note: Virtual function in base class
  virtual void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_transform.h:39:8: note: Function in derived class
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_points.h:46:8: style: The function 'do_write' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void do_write();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_object.h:68:16: note: Virtual function in base class
  virtual void do_write() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_points.h:46:8: note: Function in derived class
  void do_write();
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_transform.h:52:24: style: The function 'bounds' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Imath::Box3d bounds();
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_object.h:63:24: note: Virtual function in base class
  virtual Imath::Box3d bounds();
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_transform.h:52:24: note: Function in derived class
  virtual Imath::Box3d bounds();
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_transform.h:55:16: style: The function 'do_write' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual void do_write();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_object.h:68:16: note: Virtual function in base class
  virtual void do_write() = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_transform.h:55:16: note: Function in derived class
  virtual void do_write();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_exporter.cc:343:16: style: Local variable 'i' shadows outer variable [shadowVariable]
      for (int i = 0, e = m_shapes.size(); i != e; i++) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_exporter.cc:326:10: note: Shadowed declaration
  size_t i = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_exporter.cc:343:16: note: Shadow variable
      for (int i = 0, e = m_shapes.size(); i != e; i++) {
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_exporter.cc:218:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = m_settings.scene; /* for use in the FPS macro */
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.h:69:8: style: The function 'valid' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:137:16: note: Virtual function in base class
  virtual bool valid() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.h:69:8: note: Function in derived class
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.h:70:8: style: The function 'accepts_object_type' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:138:16: note: Virtual function in base class
  virtual bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.h:70:8: note: Function in derived class
  bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.h:73:8: style: The function 'readObjectData' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:142:16: note: Virtual function in base class
  virtual void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.h:73:8: note: Function in derived class
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.h:74:16: style: The function 'read_mesh' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  struct Mesh *read_mesh(struct Mesh *existing_mesh,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:144:24: note: Virtual function in base class
  virtual struct Mesh *read_mesh(struct Mesh *mesh,
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.h:74:16: note: Function in derived class
  struct Mesh *read_mesh(struct Mesh *existing_mesh,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.h:40:8: style: The function 'valid' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:137:16: note: Virtual function in base class
  virtual bool valid() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.h:40:8: note: Function in derived class
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.h:41:8: style: The function 'accepts_object_type' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:138:16: note: Virtual function in base class
  virtual bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.h:41:8: note: Function in derived class
  bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.h:45:8: style: The function 'readObjectData' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:142:16: note: Virtual function in base class
  virtual void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.h:45:8: note: Function in derived class
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.h:46:16: style: The function 'read_mesh' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  struct Mesh *read_mesh(struct Mesh *existing_mesh,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:144:24: note: Virtual function in base class
  virtual struct Mesh *read_mesh(struct Mesh *mesh,
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.h:46:16: note: Function in derived class
  struct Mesh *read_mesh(struct Mesh *existing_mesh,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.cc:305:7: style: The scope of the variable 'vertex_idx' can be reduced. [variableScope]
  int vertex_idx = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.cc:256:21: style: Local variable 'i' shadows outer variable [shadowVariable]
        for (size_t i = 1; i < knots->size() - 1; i++) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.cc:154:15: note: Shadowed declaration
  for (size_t i = 0; i < num_vertices->size(); i++) {
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_curves.cc:256:21: note: Shadow variable
        for (size_t i = 1; i < knots->size() - 1; i++) {
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_nurbs.h:32:8: style: The function 'valid' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:137:16: note: Virtual function in base class
  virtual bool valid() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_nurbs.h:32:8: note: Function in derived class
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_nurbs.h:34:8: style: The function 'readObjectData' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:142:16: note: Virtual function in base class
  virtual void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_nurbs.h:34:8: note: Function in derived class
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.cc:202:16: style: The scope of the variable 'rev_loop_index' can be reduced. [variableScope]
  unsigned int rev_loop_index = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.cc:151:41: style: Parameter 'config' can be declared with const [constParameter]
static void read_mverts(CDStreamConfig &config, const AbcMeshData &mesh_data)
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.cc:202:31: style: Variable 'rev_loop_index' is assigned a value that is never used. [unreadVariable]
  unsigned int rev_loop_index = 0;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_mesh.cc:203:25: style: Variable 'uv_index' is assigned a value that is never used. [unreadVariable]
  unsigned int uv_index = 0;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_points.h:37:8: style: The function 'valid' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:137:16: note: Virtual function in base class
  virtual bool valid() const = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_points.h:37:8: note: Function in derived class
  bool valid() const;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_points.h:38:8: style: The function 'accepts_object_type' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:138:16: note: Virtual function in base class
  virtual bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_points.h:38:8: note: Function in derived class
  bool accepts_object_type(const Alembic::AbcCoreAbstract::ObjectHeader &alembic_header,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_points.h:42:8: style: The function 'readObjectData' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:142:16: note: Virtual function in base class
  virtual void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel) = 0;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_points.h:42:8: note: Function in derived class
  void readObjectData(Main *bmain, const Alembic::Abc::ISampleSelector &sample_sel);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_points.h:44:16: style: The function 'read_mesh' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  struct Mesh *read_mesh(struct Mesh *existing_mesh,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_object.h:144:24: note: Virtual function in base class
  virtual struct Mesh *read_mesh(struct Mesh *mesh,
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_points.h:44:16: note: Function in derived class
  struct Mesh *read_mesh(struct Mesh *existing_mesh,
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_reader_points.cc:104:41: style: Parameter 'config' can be declared with const [constParameter]
                        CDStreamConfig &config)
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_mball.cc:68:42: style: C-style pointer casting [cstyleCast]
  Mesh *tmpmesh = BKE_mesh_add(m_bmain, ((ID *)m_object->data)->name + 2);
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_mesh.h:60:16: warning: Virtual function 'isAnimated' is called from constructor 'AbcGenericMeshWriter(Object*ob,AbcTransformWriter*parent,uint32_t time_sampling,ExportSettings&settings)' at line 216. Dynamic binding is not used. [virtualCallInConstructor]
  virtual bool isAnimated() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_mesh.cc:216:19: note: Calling isAnimated
  m_is_animated = isAnimated();
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_mesh.h:60:16: note: isAnimated is a virtual function
  virtual bool isAnimated() const;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\abc_writer_mesh.cc:222:19: style: Variable 'time_sampling' is assigned a value that is never used. [unreadVariable]
    time_sampling = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi.c:206:13: style: The scope of the variable 'fcca' can be reduced. [variableScope]
  int temp, fcca, j;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi.c:397:13: style: The scope of the variable 'fcca' can be reduced. [variableScope]
  int temp, fcca, size, j;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi.c:720:11: style: The scope of the variable 'stream_pos1' can be reduced. [variableScope]
  int64_t stream_pos1, stream_pos2;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi.c:720:24: style: The scope of the variable 'stream_pos2' can be reduced. [variableScope]
  int64_t stream_pos1, stream_pos2;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi.c:907:9: style: The scope of the variable 'buffer' can be reduced. [variableScope]
  void *buffer;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi.c:214:14: style: Variable 'movie.type' is assigned a value that is never used. [unreadVariable]
  movie.type = AVI_MOVIE_READ;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\alembic_capi.cc:808:11: style: The scope of the variable 'base' can be reduced. [variableScope]
    Base *base;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\alembic_capi.cc:600:28: style: Consider using std::copy algorithm instead of a raw loop. [useStlAlgorithm]
        r_assign_as_parent.push_back(child_reader);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\alembic_capi.cc:608:28: style: Consider using std::copy algorithm instead of a raw loop. [useStlAlgorithm]
        r_assign_as_parent.push_back(child_reader);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\alembic_capi.cc:611:28: style: Consider using std::copy algorithm instead of a raw loop. [useStlAlgorithm]
        r_assign_as_parent.push_back(child_reader);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\alembic_capi.cc:614:28: style: Consider using std::copy algorithm instead of a raw loop. [useStlAlgorithm]
        r_assign_as_parent.push_back(child_reader);
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\alembic\intern\alembic_capi.cc:740:18: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
    Scene *scene = data->scene;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi_rgb.c:54:21: style: The scope of the variable 'pxl' can be reduced. [variableScope]
    unsigned short *pxl;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi_rgb.c:55:20: style: The scope of the variable 'to' can be reduced. [variableScope]
    unsigned char *to;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi_rgb.c:102:23: style: Argument 'bits!=16' to function BLI_assert is always 1 [constArgument]
      BLI_assert(bits != 16);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi_rgb.c:53:12: note: Assuming that condition 'bits==16' is not redundant
  if (bits == 16) {
           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\avi\intern\avi_rgb.c:102:23: note: Argument 'bits!=16' to function BLI_assert is always 1
      BLI_assert(bits != 16);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.h:41:3: style: Class 'BCQuat' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BCQuat(Quat &other)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.h:79:3: style: Class 'BCMatrix' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BCMatrix(Matrix &mat);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.h:80:3: style: Class 'BCMatrix' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BCMatrix(Object *ob);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BlenderContext.h:62:3: style: Class 'BlenderContext' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BlenderContext(bContext *C);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCSampleData.h:49:3: style: Class 'BCSample' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BCSample(Object *ob) : obmat(ob)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.h:329:3: style: Class 'BoneExtended' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BoneExtended(EditBone *aBone);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationClipExporter.h:40:63: performance: Function parameter 'anim_meta' should be passed by const reference. [passedByValue]
                        std::vector<std::vector<std::string>> anim_meta)
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.h:154:76: performance: Function parameter 'probe' should be passed by const reference. [passedByValue]
inline std::string bc_string_after(const std::string &s, const std::string probe)
                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.h:163:77: performance: Function parameter 'probe' should be passed by const reference. [passedByValue]
inline std::string bc_string_before(const std::string &s, const std::string probe)
                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationClipExporter.cpp:44:59: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (clips_it = clips.begin(); clips_it != clips.end(); clips_it++) {
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureExporter.cpp:272:9: style: The scope of the variable 'bone_rest_mat' can be reduced. [variableScope]
  float bone_rest_mat[4][4];   /* derived from bone->arm_mat */
        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureExporter.cpp:273:9: style: The scope of the variable 'parent_rest_mat' can be reduced. [variableScope]
  float parent_rest_mat[4][4]; /* derived from bone->parent->arm_mat */
        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureExporter.cpp:239:9: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
        iter++;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationCurve.h:66:3: style: 'BCCurveKey::operator=' should return 'BCCurveKey &'. [operatorEq]
  void operator=(const BCCurveKey &other);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationCurve.h:80:3: style: Class 'BCBezTriple' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BCBezTriple(BezTriple &bezt);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:392:8: style: The scope of the variable 'is_def' can be reduced. [variableScope]
  bool is_def;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationCurve.h:63:32: performance: Function parameter 'path' should be passed by const reference. [passedByValue]
             const std::string path,
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.h:156:46: performance: Function parameter 'prep' should be passed by const reference. [passedByValue]
                           const std::string prep,
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.h:238:60: performance: Function parameter 'axis_name' should be passed by const reference. [passedByValue]
                                         const std::string axis_name);
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:66:59: performance: Function parameter 'action_id' should be passed by const reference. [passedByValue]
void AnimationExporter::openAnimationWithClip(std::string action_id, std::string action_name)
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:415:17: performance: Function parameter 'axis' should be passed by const reference. [passedByValue]
    std::string axis,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:478:17: performance: Function parameter 'name' should be passed by const reference. [passedByValue]
    std::string name,
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationCurve.h:102:8: style: Unused private function: 'BCAnimationCurve::create_bezt' [unusedPrivateFunction]
  void create_bezt(float frame, float output);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:533:65: performance: Function parameter 'axis' should be passed by const reference. [passedByValue]
                                              const std::string axis,
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:619:23: performance: Function parameter 'axis_name' should be passed by const reference. [passedByValue]
    const std::string axis_name)
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:831:66: performance: Function parameter 'axis_name' should be passed by const reference. [passedByValue]
                                               const std::string axis_name)
                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationCurve.cpp:43:47: performance: Function parameter 'key' should be passed by const reference. [passedByValue]
BCAnimationCurve::BCAnimationCurve(BCCurveKey key, Object *ob, FCurve *fcu)
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationCurve.cpp:576:42: performance: Function parameter 'path' should be passed by const reference. [passedByValue]
                       const std::string path,
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:423:30: style: Variable 'channel_target' is assigned a value that is never used. [unreadVariable]
  std::string channel_target = curve.get_channel_target();
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:575:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = this->export_settings.get_scene();
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:833:30: style: Variable 'channel_target' is assigned a value that is never used. [unreadVariable]
  std::string channel_target = curve.get_channel_target();
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.cpp:686:51: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = samples.begin(); it != samples.end(); it++) {
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:61:11: warning: Member variable 'BCMatrix::matrix' is not initialized in the constructor. [uninitMemberVar]
BCMatrix::BCMatrix(BC_global_forward_axis global_forward_axis, BC_global_up_axis global_up_axis)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:61:11: warning: Member variable 'BCMatrix::size' is not initialized in the constructor. [uninitMemberVar]
BCMatrix::BCMatrix(BC_global_forward_axis global_forward_axis, BC_global_up_axis global_up_axis)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:61:11: warning: Member variable 'BCMatrix::rot' is not initialized in the constructor. [uninitMemberVar]
BCMatrix::BCMatrix(BC_global_forward_axis global_forward_axis, BC_global_up_axis global_up_axis)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:61:11: warning: Member variable 'BCMatrix::loc' is not initialized in the constructor. [uninitMemberVar]
BCMatrix::BCMatrix(BC_global_forward_axis global_forward_axis, BC_global_up_axis global_up_axis)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:61:11: warning: Member variable 'BCMatrix::q' is not initialized in the constructor. [uninitMemberVar]
BCMatrix::BCMatrix(BC_global_forward_axis global_forward_axis, BC_global_up_axis global_up_axis)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:41:11: warning: Member variable 'BCMatrix::matrix' is not initialized in the constructor. [uninitMemberVar]
BCMatrix::BCMatrix(const BCMatrix &mat)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:41:11: warning: Member variable 'BCMatrix::size' is not initialized in the constructor. [uninitMemberVar]
BCMatrix::BCMatrix(const BCMatrix &mat)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:41:11: warning: Member variable 'BCMatrix::rot' is not initialized in the constructor. [uninitMemberVar]
BCMatrix::BCMatrix(const BCMatrix &mat)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:41:11: warning: Member variable 'BCMatrix::loc' is not initialized in the constructor. [uninitMemberVar]
BCMatrix::BCMatrix(const BCMatrix &mat)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:41:11: warning: Member variable 'BCMatrix::q' is not initialized in the constructor. [uninitMemberVar]
BCMatrix::BCMatrix(const BCMatrix &mat)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.h:69:8: style: Unused private function: 'BCMatrix::copy' [unusedPrivateFunction]
  void copy(Matrix &r, Matrix &a);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:141:29: style: Parameter 'out' can be declared with const [constParameter]
void BCMatrix::copy(Matrix &out, Matrix &in)
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCMath.cpp:141:42: style: Parameter 'in' can be declared with const [constParameter]
void BCMatrix::copy(Matrix &out, Matrix &in)
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.cpp:83:10: error: Returning pointer to local variable 'curve_map' that will be invalid when returning. [returnDanglingLifetime]
  return &animation.curve_map;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.cpp:83:10: note: Address of variable taken here.
  return &animation.curve_map;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.h:39:23: note: Variable created here.
  BCAnimationCurveMap curve_map;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.cpp:83:10: note: Returning pointer to local variable 'curve_map' that will be invalid when returning.
  return &animation.curve_map;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.h:168:8: style: Unused private function: 'BCAnimationSampler::check_property_is_animated' [unusedPrivateFunction]
  void check_property_is_animated(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.h:137:3: warning: Member variable 'AnimationImporter::typeFlag' is not initialized in the constructor. [uninitMemberVar]
  AnimationImporter(bContext *C, UnitConverter *conv, ArmatureImporter *arm, Scene *scene)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:49:19: warning: Member variable 'ArmatureImporter::leaf_bone_length' is not initialized in the constructor. [uninitMemberVar]
ArmatureImporter::ArmatureImporter(UnitConverter *conv,
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:49:19: warning: Member variable 'ArmatureImporter::totbone' is not initialized in the constructor. [uninitMemberVar]
ArmatureImporter::ArmatureImporter(UnitConverter *conv,
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.h:61:18: warning: The class 'ArmatureImporter' defines member variable with name 'unit_converter' also defined in its parent class 'TransformReader'. [duplInheritedMember]
  UnitConverter *unit_converter;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\TransformReader.h:42:18: note: Parent variable 'TransformReader::unit_converter'
  UnitConverter *unit_converter;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.h:61:18: note: Derived variable 'ArmatureImporter::unit_converter'
  UnitConverter *unit_converter;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\TransformReader.h:51:3: style: Class 'TransformReader' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TransformReader(UnitConverter *conv);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ExtraTags.h:33:3: style: Class 'ExtraTags' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ExtraTags(const std::string profile);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:62:3: style: Class 'UVDataWrapper' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  UVDataWrapper(COLLADAFW::MeshVertexData &vdata);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:75:3: style: Class 'VCOLDataWrapper' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  VCOLDataWrapper(COLLADAFW::MeshVertexData &vdata);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\SkinInfo.h:71:3: style: Class 'SkinInfo' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SkinInfo(UnitConverter *conv);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:160:19: style: The function 'get_object_by_geom_uid' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Object *get_object_by_geom_uid(const COLLADAFW::UniqueId &geom_uid);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:53:19: note: Virtual function in base class
  virtual Object *get_object_by_geom_uid(const COLLADAFW::UniqueId &geom_uid) = 0;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:160:19: note: Function in derived class
  virtual Object *get_object_by_geom_uid(const COLLADAFW::UniqueId &geom_uid);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:162:17: style: The function 'get_mesh_by_geom_uid' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual Mesh *get_mesh_by_geom_uid(const COLLADAFW::UniqueId &geom_uid);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:54:17: note: Virtual function in base class
  virtual Mesh *get_mesh_by_geom_uid(const COLLADAFW::UniqueId &mesh_uid) = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:162:17: note: Function in derived class
  virtual Mesh *get_mesh_by_geom_uid(const COLLADAFW::UniqueId &geom_uid);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:179:16: style: The function 'get_geometry_name' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  std::string *get_geometry_name(const std::string &mesh_name);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:55:24: note: Virtual function in base class
  virtual std::string *get_geometry_name(const std::string &mesh_name) = 0;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.h:179:16: note: Function in derived class
  std::string *get_geometry_name(const std::string &mesh_name);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.cpp:249:15: style: The scope of the variable 'obtar' can be reduced. [variableScope]
      Object *obtar;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.cpp:393:64: performance: Function parameter 'prep' should be passed by const reference. [passedByValue]
                                             const std::string prep,
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.cpp:144:60: style: Parameter 'sample' can be declared with const [constParameter]
                                                 BCSample &sample,
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.cpp:193:24: style: Unused variable: it [unusedVariable]
  BCFrameSet::iterator it;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCAnimationSampler.cpp:294:22: style: Unused variable: static_objects [unusedVariable]
  std::set<Object *> static_objects;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:151:9: style: The scope of the variable 'loc' can be reduced. [variableScope]
  float loc[3], size[3], rot[3][3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:151:17: style: The scope of the variable 'size' can be reduced. [variableScope]
  float loc[3], size[3], rot[3][3];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:151:26: style: The scope of the variable 'rot' can be reduced. [variableScope]
  float loc[3], size[3], rot[3][3];
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ExtraTags.h:33:31: performance: Function parameter 'profile' should be passed by const reference. [passedByValue]
  ExtraTags(const std::string profile);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:299:21: style: Variable 'extended_bones' can be declared with const [constVariable]
  BoneExtensionMap &extended_bones = bone_extension_manager.getExtensionMap(armature);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:1068:17: style: Variable 'et' is assigned a value that is never used. [unreadVariable]
  ExtraTags *et = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:70:69: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = skin_by_data_uid.begin(); it != skin_by_data_uid.end(); it++) {
                                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:121:79: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (skin_it = skin_by_data_uid.begin(); skin_it != skin_by_data_uid.end(); skin_it++) {
                                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:481:59: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (ri = root_joints.begin(); ri != root_joints.end(); ri++) {
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:587:69: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = skin_by_data_uid.begin(); it != skin_by_data_uid.end(); it++) {
                                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:598:71: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (ri = skin_root_joints.begin(); ri != skin_root_joints.end(); ri++) {
                                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:642:59: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (ri = root_joints.begin(); ri != root_joints.end(); ri++) {
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:667:59: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (ri = root_joints.begin(); ri != root_joints.end(); ri++) {
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:798:69: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = skin_by_data_uid.begin(); it != skin_by_data_uid.end(); it++) {
                                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:852:65: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (ob_arm_it = ob_arms.begin(); ob_arm_it != ob_arms.end(); ob_arm_it++) {
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:952:71: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (mc = morph_controllers.begin(); mc != morph_controllers.end(); mc++) {
                                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:1013:69: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = skin_by_data_uid.begin(); it != skin_by_data_uid.end(); it++) {
                                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:1022:83: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (arm = unskinned_armature_map.begin(); arm != unskinned_armature_map.end(); arm++) {
                                                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ArmatureImporter.cpp:1047:69: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = skin_by_data_uid.begin(); it != skin_by_data_uid.end(); it++) {
                                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\BCSampleData.cpp:43:44: performance: Function parameter 'channel_target' should be passed by const reference. [passedByValue]
const bool BCSample::get_value(std::string channel_target, const int array_index, float *val) const
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:858:12: style: Redundant initialization for 'axis'. The initialized value is overwritten before it is read. [redundantInitialization]
      axis = i;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:854:14: note: axis is initialized
    int axis = i;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:858:12: note: axis is overwritten
      axis = i;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1317:12: style: Redundant initialization for 'axis'. The initialized value is overwritten before it is read. [redundantInitialization]
      axis = i;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1313:14: note: axis is initialized
    int axis = i;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1317:12: note: axis is overwritten
      axis = i;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:92:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:94:26: style: The scope of the variable 'fcurves' can be reduced. [variableScope]
  std::vector<FCurve *> &fcurves = curve_map[curve->getUniqueId()];
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:714:8: style: The scope of the variable 'rna_path' can be reduced. [variableScope]
  char rna_path[100];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:777:8: style: The scope of the variable 'rna_path' can be reduced. [variableScope]
  char rna_path[100];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1225:21: style: Local variable 'ma' shadows outer variable [shadowVariable]
          Material *ma = uid_material_map[matuid];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1210:15: note: Shadowed declaration
    Material *ma = BKE_object_material_get(ob, 1);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1225:21: note: Shadow variable
          Material *ma = uid_material_map[matuid];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:2229:61: performance: Function parameter 'import_from_version' should be passed by const reference. [passedByValue]
void AnimationImporter::set_import_from_version(std::string import_from_version)
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:87:34: style: Variable 'input' can be declared with const [constVariable]
  COLLADAFW::FloatOrDoubleArray &input = curve->getInputValues();
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:88:34: style: Variable 'output' can be declared with const [constVariable]
  COLLADAFW::FloatOrDoubleArray &output = curve->getOutputValues();
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1589:46: style: Parameter 'object_map' can be declared with const [constParameter]
    std::map<COLLADAFW::UniqueId, Object *> &object_map,
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ControllerExporter.h:65:40: style: Parameter 'export_settings' can be declared with const [constParameter]
                     BCExportSettings &export_settings)
                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1427:26: error: Uninitialized struct member: types.transform [uninitStructMember]
      types->transform = types->transform | BC_NODE_TRANSFORM;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1440:9: error: Uninitialized struct member: types.light [uninitStructMember]
    if (types->light != 0) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1472:9: error: Uninitialized struct member: types.camera [uninitStructMember]
    if (types->camera != 0) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1497:48: error: Uninitialized struct member: types.material [uninitStructMember]
              &(efc->getIndexOfRefraction()), (types->material), MATERIAL_IOR);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.h:204:60: performance: Function parameter 'axis_name' should be passed by const reference. [passedByValue]
                                         const std::string axis_name);
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.h:222:48: performance: Function parameter 'axis' should be passed by const reference. [passedByValue]
                             const std::string axis,
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationExporter.h:247:80: performance: Function parameter 'axis_name' should be passed by const reference. [passedByValue]
  std::string get_collada_sid(const BCAnimationCurve &curve, const std::string axis_name);
                                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:219:56: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = curves.begin(), i = 0; it != curves.end(); it++, i++) {
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:276:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       it++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:470:58: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = curves->begin(), i = 0; it != curves->end(); it++, i++) {
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:493:51: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = curves->begin(); it != curves->end(); it++) {
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:502:55: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (iter = curves->begin(); iter != curves->end(); iter++) {
                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:601:59: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (iter = curves->begin(); iter != curves->end(); iter++) {
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:702:63: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (iter = animcurves.begin(); iter != animcurves.end(); iter++) {
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:731:65: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (iter = animcurves.begin(); iter != animcurves.end(); iter++) {
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:795:65: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
      for (iter = animcurves.begin(); iter != animcurves.end(); iter++) {
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:893:49: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = frames.begin(); it != frames.end(); it++) {
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1100:71: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
            for (iter = animcurves.begin(); iter != animcurves.end(); iter++) {
                                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1283:63: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (iter = animcurves.begin(); iter != animcurves.end(); iter++) {
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1345:49: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = frames.begin(); it != frames.end(); it++) {
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1556:65: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
              for (iter = curves.begin(); iter != curves.end(); iter++) {
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:1713:49: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = frames.begin(); it != frames.end(); it++) {
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\AnimationImporter.cpp:2042:87: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
        for (std::vector<FCurve *>::iterator it = curves.begin(); it != curves.end(); it++) {
                                                                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\EffectExporter.cpp:56:18: warning: Member variable 'EffectsExporter::scene' is not initialized in the constructor. [uninitMemberVar]
EffectsExporter::EffectsExporter(COLLADASW::StreamWriter *sw,
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\EffectExporter.cpp:56:18: warning: Member variable 'EffectsExporter::mContext' is not initialized in the constructor. [uninitMemberVar]
EffectsExporter::EffectsExporter(COLLADASW::StreamWriter *sw,
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\EffectExporter.cpp:177:31: performance: Searching before insertion is not necessary. [stlFindInsert]
    material_image_map[key] = image;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\EffectExporter.cpp:188:77: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (iter = material_image_map.begin(); iter != material_image_map.end(); iter++) {
                                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ExtraTags.cpp:39:39: performance: Function parameter 'profile' should be passed by const reference. [passedByValue]
bool ExtraTags::isProfile(std::string profile)
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ExtraTags.cpp:44:53: performance: Function parameter 'data' should be passed by const reference. [passedByValue]
bool ExtraTags::addTag(std::string tag, std::string data)
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ExtraTags.cpp:81:37: performance: Function parameter 'tag' should be passed by const reference. [passedByValue]
bool ExtraTags::setData(std::string tag, short *data)
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ExtraTags.cpp:91:37: performance: Function parameter 'tag' should be passed by const reference. [passedByValue]
bool ExtraTags::setData(std::string tag, int *data)
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ExtraTags.cpp:101:37: performance: Function parameter 'tag' should be passed by const reference. [passedByValue]
bool ExtraTags::setData(std::string tag, float *data)
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ExtraTags.cpp:111:37: performance: Function parameter 'tag' should be passed by const reference. [passedByValue]
bool ExtraTags::setData(std::string tag, char *data)
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ExtraTags.cpp:121:44: performance: Function parameter 'tag' should be passed by const reference. [passedByValue]
std::string ExtraTags::setData(std::string tag, std::string &data)
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ExtraTags.cpp:121:62: style: Parameter 'data' can be declared with const [constParameter]
std::string ExtraTags::setData(std::string tag, std::string &data)
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\DocumentImporter.cpp:309:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\DocumentImporter.cpp:495:67: performance: Function parameter 'object_type' should be passed by const reference. [passedByValue]
                                                const std::string object_type)
                                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\DocumentImporter.cpp:487:17: style: Unused variable: name [unusedVariable]
    std::string name;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\DocumentImporter.cpp:121:5: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    etit++;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\DocumentImporter.cpp:196:53: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (sit = vscenes.begin(); sit != vscenes.end(); sit++) {
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\DocumentImporter.cpp:248:8: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
       vsit++) {
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\DocumentImporter.cpp:261:59: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (it = libnode_ob.begin(); it != libnode_ob.end(); it++) {
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\DocumentImporter.cpp:632:14: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
             it2++) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\DocumentImporter.cpp:848:73: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (iter = uid_material_map.begin(); iter != uid_material_map.end(); iter++) {
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\DocumentImporter.h:169:80: performance: Function parameter 'object_type' should be passed by const reference. [passedByValue]
  void report_unknown_reference(const COLLADAFW::Node &node, const std::string object_type);
                                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ImageExporter.cpp:74:8: style: The scope of the variable 'source_path' can be reduced. [variableScope]
  char source_path[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\ImageExporter.cpp:159:67: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (iter = key_image_map.begin(); iter != key_image_map.end(); iter++) {
                                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:447:54: performance: Function parameter 'geom_id' should be passed by const reference. [passedByValue]
void GeometryExporter::createVertsSource(std::string geom_id, Mesh *me)
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:599:56: performance: Function parameter 'geom_id' should be passed by const reference. [passedByValue]
void GeometryExporter::createNormalsSource(std::string geom_id, Mesh *me, std::vector<Normal> &nor)
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:699:60: performance: Function parameter 'geom_id' should be passed by const reference. [passedByValue]
std::string GeometryExporter::getIdBySemantics(std::string geom_id,
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:701:60: performance: Function parameter 'other_suffix' should be passed by const reference. [passedByValue]
                                               std::string other_suffix)
                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:706:64: performance: Function parameter 'geom_id' should be passed by const reference. [passedByValue]
COLLADASW::URI GeometryExporter::getUrlBySemantics(std::string geom_id,
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:708:64: performance: Function parameter 'other_suffix' should be passed by const reference. [passedByValue]
                                                   std::string other_suffix)
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:213:79: style: Parameter 'geom_id' can be declared with const [constParameter]
void GeometryExporter::createLooseEdgeList(Object *ob, Mesh *me, std::string &geom_id)
                                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:322:68: style: Parameter 'geom_id' can be declared with const [constParameter]
std::string GeometryExporter::makeVertexColorSourceId(std::string &geom_id, char *layer_name)
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:336:89: style: Parameter 'norind' can be declared with const [constParameter]
                                                  std::vector<BCPolygonNormalsIndices> &norind)
                                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:533:65: style: Parameter 'geom_id' can be declared with const [constParameter]
std::string GeometryExporter::makeTexcoordSourceId(std::string &geom_id,
                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\GeometryExporter.cpp:619:43: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = nor.begin(); it != nor.end(); it++) {
                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:31:15: warning: Member variable 'MaterialNode::key_image_map' is not initialized in the constructor. [uninitMemberVar]
MaterialNode::MaterialNode(bContext *C,
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:19:15: warning: Member variable 'MaterialNode::uid_image_map' is not initialized in the constructor. [uninitMemberVar]
MaterialNode::MaterialNode(bContext *C, Material *ma, KeyImageMap &key_image_map)
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:372:51: performance: Function parameter 'label' should be passed by const reference. [passedByValue]
                                      std::string label)
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:382:35: style: Variable 'samp_array' can be declared with const [constVariable]
  COLLADAFW::SamplerPointerArray &samp_array = effect->getSamplerPointerArray();
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:208:17: warning: Expression '-300' has a negative value. That is converted to an unsigned value and used in an unsigned calculation. [signConversion]
    int locy = -300 * (node_map.size() - 2);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:215:15: warning: Expression '-300' has a negative value. That is converted to an unsigned value and used in an unsigned calculation. [signConversion]
  int locy = -300 * (node_map.size() - 2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:277:15: warning: Expression '-300' has a negative value. That is converted to an unsigned value and used in an unsigned calculation. [signConversion]
  int locy = -300 * (node_map.size() - 2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:293:15: warning: Expression '-300' has a negative value. That is converted to an unsigned value and used in an unsigned calculation. [signConversion]
  int locy = -300 * (node_map.size() - 2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:309:15: warning: Expression '-300' has a negative value. That is converted to an unsigned value and used in an unsigned calculation. [signConversion]
  int locy = -300 * (node_map.size() - 2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:334:15: warning: Expression '-300' has a negative value. That is converted to an unsigned value and used in an unsigned calculation. [signConversion]
  int locy = -300 * (node_map.size() - 2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:355:15: warning: Expression '-300' has a negative value. That is converted to an unsigned value and used in an unsigned calculation. [signConversion]
  int locy = -300 * (node_map.size() - 2);
              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\Materials.cpp:40:34: style: Unused variable: nmap [unusedVariable]
  std::map<std::string, bNode *> nmap;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\SceneExporter.cpp:216:21: style: The scope of the variable 'obtar' can be reduced. [variableScope]
            Object *obtar;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\SkinInfo.cpp:78:11: warning: Member variable 'SkinInfo::bind_shape_matrix' is not initialized in the constructor. [uninitMemberVar]
SkinInfo::SkinInfo(UnitConverter *conv) : unit_converter(conv), ob_arm(NULL), parent(NULL)
          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\TransformReader.cpp:103:29: style: Variable 'axis' can be declared with const [constVariable]
  COLLADABU::Math::Vector3 &axis = ro->getRotationAxis();
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\TransformReader.cpp:115:29: style: Variable 't' can be declared with const [constVariable]
  COLLADABU::Math::Vector3 &t = tra->getTranslation();
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\TransformReader.cpp:126:29: style: Variable 's' can be declared with const [constVariable]
  COLLADABU::Math::Vector3 &s = ((COLLADAFW::Scale *)tm)->getScale();
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\SkinInfo.cpp:178:57: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = joint_data.begin(); it != joint_data.end(); it++) {
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\SkinInfo.cpp:207:57: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = joint_data.begin(); it != joint_data.end(); it++) {
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\SkinInfo.cpp:258:74: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = joint_data.begin(), joint_index = 0; it != joint_data.end(); it++, joint_index++) {
                                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\SkinInfo.cpp:323:59: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
  for (it = root_joints.begin(); it != root_joints.end(); it++) {
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\SkinInfo.cpp:327:59: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (ji = joint_data.begin(); ji != joint_data.end(); ji++) {
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.cpp:1020:12: style: The scope of the variable 'can_move' can be reduced. [variableScope]
      bool can_move = true;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.cpp:253:31: style: Variable 'indices' can be declared with const [constVariable]
  COLLADAFW::UIntValuesArray &indices = index_list.getIndices();
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\MeshImporter.cpp:1088:49: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
    for (it = prims.begin(); it != prims.end(); it++) {
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_internal.cpp:66:62: style: Parameter 'vec' can be declared with const [constParameter]
void UnitConverter::convertVector3(COLLADABU::Math::Vector3 &vec, float *v)
                                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada.cpp:40:49: style: Parameter 'import_settings' can be declared with const [constParameter]
static void print_import_header(ImportSettings &import_settings)
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\abstract_hierarchy_iterator.cc:451:30: style: C-style pointer casting [cstyleCast]
        ID *source_data_id = (ID *)context->object->data;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\abstract_hierarchy_iterator.cc:452:46: style: Local variable 'it' shadows outer variable [shadowVariable]
        const ExportPathMap::const_iterator &it = duplisource_export_path_.find(source_data_id);
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\abstract_hierarchy_iterator.cc:439:44: note: Shadowed declaration
      const ExportPathMap::const_iterator &it = duplisource_export_path_.find(source_id);
                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\abstract_hierarchy_iterator.cc:452:46: note: Shadow variable
        const ExportPathMap::const_iterator &it = duplisource_export_path_.find(source_data_id);
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\abstract_hierarchy_iterator.cc:432:57: performance: Function parameter 'indent' should be passed by const reference. [passedByValue]
    const HierarchyContext *parent_context, std::string indent)
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\usd_writer_camera.h:29:3: style: Class 'USDCameraWriter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  USDCameraWriter(const USDExporterContext &ctx);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\usd_writer_hair.h:29:3: style: Class 'USDHairWriter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  USDHairWriter(const USDExporterContext &ctx);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\usd_writer_light.h:28:3: style: Class 'USDLightWriter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  USDLightWriter(const USDExporterContext &ctx);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\usd_writer_mesh.h:58:3: style: Class 'USDMeshWriter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  USDMeshWriter(const USDExporterContext &ctx);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\usd_writer_metaball.h:28:3: style: Class 'USDMetaballWriter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  USDMetaballWriter(const USDExporterContext &ctx);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\usd\intern\usd_writer_transform.h:33:3: style: Class 'USDTransformWriter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  USDTransformWriter(const USDExporterContext &ctx);
  ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:877:9: style: The scope of the variable 'ipar' can be reduced. [variableScope]
  float ipar[4][4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:1131:56: warning: Function 'bc_copy_v44_m4d' argument order different: declaration 'a, ' definition 'r, a' [funcArgOrderDifferent]
void bc_copy_v44_m4d(std::vector<std::vector<double>> &r, double (&a)[4][4])
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.h:227:56: note: Function 'bc_copy_v44_m4d' argument order different: declaration 'a, ' definition 'r, a'
void bc_copy_v44_m4d(std::vector<std::vector<double>> &a, double (&r)[4][4]);
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:1131:56: note: Function 'bc_copy_v44_m4d' argument order different: declaration 'a, ' definition 'r, a'
void bc_copy_v44_m4d(std::vector<std::vector<double>> &r, double (&a)[4][4])
                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:176:42: performance: Function parameter 'action_name' should be passed by const reference. [passedByValue]
std::string bc_get_action_id(std::string action_name,
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:178:42: performance: Function parameter 'channel_type' should be passed by const reference. [passedByValue]
                             std::string channel_type,
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:180:42: performance: Function parameter 'axis_separator' should be passed by const reference. [passedByValue]
                             std::string axis_separator)
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:346:39: performance: Function parameter 'data' should be passed by const reference. [passedByValue]
std::string bc_url_encode(std::string data)
                                      ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:771:47: performance: Function parameter 'key' should be passed by const reference. [passedByValue]
float bc_get_property(Bone *bone, std::string key, float def)
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:801:53: performance: Function parameter 'key' should be passed by const reference. [passedByValue]
bool bc_get_property_matrix(Bone *bone, std::string key, float mat[4][4])
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:819:53: performance: Function parameter 'key' should be passed by const reference. [passedByValue]
void bc_get_property_vector(Bone *bone, std::string key, float val[3], const float def[3])
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:829:68: performance: Function parameter 'key' should be passed by const reference. [passedByValue]
static bool has_custom_props(Bone *bone, bool enabled, std::string key)
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:1140:75: style: Parameter 'a' can be declared with const [constParameter]
void bc_copy_m4d_v44(double (&r)[4][4], std::vector<std::vector<double>> &a)
                                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:1418:57: style: Parameter 'default_color' can be declared with const [constParameter]
                                                 Color &default_color,
                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\io\collada\collada_utils.cpp:679:22: style: Variable 'result' is assigned a value that is never used. [unreadVariable]
  std::string result = "";
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1678:23: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  char *elem_static = alloca(elem_static_full_len + 1);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1566:35: warning: Either the condition 'elem_new!=NULL' is redundant or there is possible null pointer dereference: elem_new. [nullPointerRedundantCheck]
  const int elem_new_len = strlen(elem_new);
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1567:23: note: Assuming that condition 'elem_new!=NULL' is not redundant
  BLI_assert(elem_new != NULL);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1566:35: note: Null pointer dereference
  const int elem_new_len = strlen(elem_new);
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:842:17: portability: Casting between const char * and float * which have an incompatible binary data representation. [invalidPointerCast]
        val = *((float *)olddata);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:845:17: portability: Casting between const char * and double * which have an incompatible binary data representation. [invalidPointerCast]
        val = *((double *)olddata);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:875:11: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
        *((float *)curdata) = val;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:881:11: portability: Casting between char * and double * which have an incompatible binary data representation. [invalidPointerCast]
        *((double *)curdata) = val;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:982:15: style: The scope of the variable 'otype' can be reduced. [variableScope]
  const char *otype, *oname;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:982:23: style: The scope of the variable 'oname' can be reduced. [variableScope]
  const char *otype, *oname;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1049:21: style: The scope of the variable 'len' can be reduced. [variableScope]
  int a, elemcount, len;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1050:15: style: The scope of the variable 'otype' can be reduced. [variableScope]
  const char *otype, *oname;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1050:23: style: The scope of the variable 'oname' can be reduced. [variableScope]
  const char *otype, *oname;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1109:21: style: The scope of the variable 'len' can be reduced. [variableScope]
  int a, elemcount, len, countpos, mul;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1110:15: style: The scope of the variable 'otype' can be reduced. [variableScope]
  const char *otype, *oname, *cp;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1110:23: style: The scope of the variable 'oname' can be reduced. [variableScope]
  const char *otype, *oname, *cp;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1213:15: style: The scope of the variable 'type' can be reduced. [variableScope]
  const char *type;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1216:15: style: The scope of the variable 'name' can be reduced. [variableScope]
  const char *name;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1313:26: style: The scope of the variable 'elen' can be reduced. [variableScope]
  int a, mul, elemcount, elen, elena, firststructtypenr;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1316:15: style: The scope of the variable 'type' can be reduced. [variableScope]
  const char *type, *name;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1316:22: style: The scope of the variable 'name' can be reduced. [variableScope]
  const char *type, *name;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\dna_genfile.c:1413:22: style: The scope of the variable 'spc' can be reduced. [variableScope]
  const short *spo, *spc;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\makesdna.c:291:22: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  char *elem_alias = alloca(elem_alias_full_len + 1);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\makesdna.c:315:22: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
  char *name_strip = alloca(name_size);
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\makesdna.c:407:11: style: The scope of the variable 'i' can be reduced. [variableScope]
  int nr, i, j, k;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\makesdna.c:407:14: style: The scope of the variable 'j' can be reduced. [variableScope]
  int nr, i, j, k;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\makesdna.c:407:17: style: The scope of the variable 'k' can be reduced. [variableScope]
  int nr, i, j, k;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\makesdna.c:549:7: style: The scope of the variable 'len' can be reduced. [variableScope]
  int len;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\makesdna.c:904:30: style: The scope of the variable 'lastunknown' can be reduced. [variableScope]
  int unknown = structs_len, lastunknown;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesdna\intern\makesdna.c:1275:11: style: The scope of the variable 'num_types' can be reduced. [variableScope]
    short num_types;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_ID.c:1155:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(func, "material", "Material", "", "Material to remove");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_ID.c:1153:8: note: parm is assigned
  parm = RNA_def_int(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_ID.c:1155:8: note: parm is overwritten
  parm = RNA_def_pointer(func, "material", "Material", "", "Material to remove");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_ID.c:1600:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(func, "id", "ID", "", "This ID, or the new ID if it was copied");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_ID.c:1593:8: note: parm is assigned
  parm = RNA_def_boolean(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_ID.c:1600:8: note: parm is overwritten
  parm = RNA_def_pointer(func, "id", "ID", "", "This ID, or the new ID if it was copied");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:424:30: warning: Possible null pointer dereference: prop_storage [nullPointer]
  if (ptr_storage != NULL && prop_storage->magic == RNA_MAGIC &&
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:842:35: note: Assignment 'prop_storage=NULL', assigned value is 0
      PropertyRNA *prop_storage = NULL;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:856:49: note: Calling function 'rna_property_override_operation_store', 7th argument 'prop_storage' value is 0
                                                prop_storage,
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:424:30: note: Null pointer dereference
  if (ptr_storage != NULL && prop_storage->magic == RNA_MAGIC &&
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:425:7: warning: Possible null pointer dereference: prop_storage [nullPointer]
      prop_storage->override_store != override_store) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:842:35: note: Assignment 'prop_storage=NULL', assigned value is 0
      PropertyRNA *prop_storage = NULL;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:856:49: note: Calling function 'rna_property_override_operation_store', 7th argument 'prop_storage' value is 0
                                                prop_storage,
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:425:7: note: Null pointer dereference
      prop_storage->override_store != override_store) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_ID.c:698:15: style: The expression '*totcol == totcol_orig' is always true because '*totcol' and 'totcol_orig' represent the same value. [knownConditionTrueFalse]
  if (*totcol == totcol_orig) {
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_ID.c:686:29: note: 'totcol_orig' is assigned value '*totcol' here.
  const short totcol_orig = *totcol;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_ID.c:698:15: note: The expression '*totcol == totcol_orig' is always true because '*totcol' and 'totcol_orig' represent the same value.
  if (*totcol == totcol_orig) {
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:602:16: style: The scope of the variable '_sum_time_global' can be reduced. [variableScope]
  static float _sum_time_global = 0.0f;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:603:16: style: The scope of the variable '_num_time_global' can be reduced. [variableScope]
  static float _num_time_global = 0.0f;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:605:16: style: The scope of the variable '_sum_time_diffing' can be reduced. [variableScope]
  static float _sum_time_diffing = 0.0f;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access_compare_override.c:608:16: style: The scope of the variable '_num_time_diffing' can be reduced. [variableScope]
  static float _num_time_diffing = 0.0f;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:565:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a, mask = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:1992:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:2164:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:2598:19: style: The scope of the variable 'dp' can be reduced. [variableScope]
  PropertyDefRNA *dp;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:2599:23: style: The scope of the variable 'pprop' can be reduced. [variableScope]
  PointerPropertyRNA *pprop;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:2746:41: style: The scope of the variable 'first' can be reduced. [variableScope]
  int flag, flag_parameter, pout, cptr, first;
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3059:22: style: The scope of the variable 'type' can be reduced. [variableScope]
          StructRNA *type;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3365:7: style: The scope of the variable 'flag' can be reduced. [variableScope]
  int flag, flag_parameter, pout, cptr, first;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3365:13: style: The scope of the variable 'flag_parameter' can be reduced. [variableScope]
  int flag, flag_parameter, pout, cptr, first;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3365:29: style: The scope of the variable 'pout' can be reduced. [variableScope]
  int flag, flag_parameter, pout, cptr, first;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3365:35: style: The scope of the variable 'cptr' can be reduced. [variableScope]
  int flag, flag_parameter, pout, cptr, first;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3525:19: style: The scope of the variable 'dfunc' can be reduced. [variableScope]
  FunctionDefRNA *dfunc;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3594:7: style: The scope of the variable 'len' can be reduced. [variableScope]
  int len, freenest = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3613:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i, defaultfound = 0, totflag = 0;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3613:14: style: The scope of the variable 'defaultfound' can be reduced. [variableScope]
      int i, defaultfound = 0, totflag = 0;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3613:32: style: The scope of the variable 'totflag' can be reduced. [variableScope]
      int i, defaultfound = 0, totflag = 0;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3681:20: style: The scope of the variable 'i' can be reduced. [variableScope]
      unsigned int i;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3709:20: style: The scope of the variable 'i' can be reduced. [variableScope]
      unsigned int i;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:3737:20: style: The scope of the variable 'i' can be reduced. [variableScope]
      unsigned int i;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:4039:19: style: The scope of the variable 'dfunc' can be reduced. [variableScope]
  FunctionDefRNA *dfunc;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\makesrna.c:4923:18: style: The scope of the variable 'srna2' can be reduced. [variableScope]
      StructRNA *srna2;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_armature_api.c:185:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_property(func, "axis", PROP_FLOAT, PROP_XYZ);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_armature_api.c:179:8: note: parm is assigned
  parm = RNA_def_boolean(func, "invert", false, "", "Convert from Pose to Local space");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_armature_api.c:185:8: note: parm is overwritten
  parm = RNA_def_property(func, "axis", PROP_FLOAT, PROP_XYZ);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_armature_api.c:67:9: style: The scope of the variable 'offs_bone' can be reduced. [variableScope]
  float offs_bone[4][4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7714:11: warning: Possible null pointer dereference: (bool*)dest [nullPointer]
        *((bool *)dest) = *((bool *)src);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:8047:49: note: Calling function 'rna_function_parameter_parse', 6th argument 'NULL' value is 0
              &funcptr, parm, type, ftype, len, NULL, NULL, NULL, tid, fid, pid);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7714:11: note: Null pointer dereference
        *((bool *)dest) = *((bool *)src);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7714:19: warning: Possible null pointer dereference: dest [nullPointer]
        *((bool *)dest) = *((bool *)src);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:8047:49: note: Calling function 'rna_function_parameter_parse', 6th argument 'NULL' value is 0
              &funcptr, parm, type, ftype, len, NULL, NULL, NULL, tid, fid, pid);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7714:19: note: Null pointer dereference
        *((bool *)dest) = *((bool *)src);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7714:29: warning: Possible null pointer dereference: (bool*)src [nullPointer]
        *((bool *)dest) = *((bool *)src);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7974:58: note: Calling function 'rna_function_parameter_parse', 7th argument 'NULL' value is 0
            &funcptr, parm, type, ftype, len, iter.data, NULL, NULL, tid, fid, pid);
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7714:29: note: Null pointer dereference
        *((bool *)dest) = *((bool *)src);
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7714:37: warning: Possible null pointer dereference: src [nullPointer]
        *((bool *)dest) = *((bool *)src);
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7974:58: note: Calling function 'rna_function_parameter_parse', 7th argument 'NULL' value is 0
            &funcptr, parm, type, ftype, len, iter.data, NULL, NULL, tid, fid, pid);
                                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7714:37: note: Null pointer dereference
        *((bool *)dest) = *((bool *)src);
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:4892:36: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  internal->endptr = ((char *)ptr) + length * itemsize;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:3929:38: note: Calling function 'rna_iterator_array_begin', 2nd argument 'NULL' value is 0
      rna_iterator_array_begin(iter, NULL, sizeof(IDProperty), 0, 0, NULL);
                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:4892:36: note: Null pointer addition
  internal->endptr = ((char *)ptr) + length * itemsize;
                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:937:16: style: The scope of the variable 'func' can be reduced. [variableScope]
  FunctionRNA *func;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:1048:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i = 0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:1228:15: style: The scope of the variable 'quatitem' can be reduced. [variableScope]
  const char *quatitem = "WXYZ";
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:2625:8: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  bool tmp[RNA_MAX_ARRAY_LENGTH];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:2678:8: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  bool tmp[RNA_MAX_ARRAY_LENGTH];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:2858:7: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  int tmp[RNA_MAX_ARRAY_LENGTH];
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:2931:7: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  int tmp[RNA_MAX_ARRAY_LENGTH];
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:3020:7: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  int tmp[RNA_MAX_ARRAY_LENGTH];
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:3144:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:3217:9: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  float tmp[RNA_MAX_ARRAY_LENGTH];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:3245:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:3301:9: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  float tmp[RNA_MAX_ARRAY_LENGTH];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:3399:9: style: The scope of the variable 'tmp' can be reduced. [variableScope]
  float tmp[RNA_MAX_ARRAY_LENGTH];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:3882:24: style: The scope of the variable 'group' can be reduced. [variableScope]
  IDProperty *idprop, *group;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:4043:25: style: The scope of the variable 'item' can be reduced. [variableScope]
    IDProperty *group, *item;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:4476:27: style: The scope of the variable 'iprop' can be reduced. [variableScope]
  PropertyRNA *itemprop, *iprop;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:4962:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, j, len, escape;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:4962:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j, len, escape;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:4962:18: style: The scope of the variable 'escape' can be reduced. [variableScope]
  int i, j, len, escape;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:5080:8: style: The scope of the variable 'fixedbuf' can be reduced. [variableScope]
  char fixedbuf[256];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:5081:7: style: The scope of the variable 'intkey' can be reduced. [variableScope]
  int intkey;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:5270:7: style: The scope of the variable 'type' can be reduced. [variableScope]
  int type;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:5555:15: style: The scope of the variable 's' can be reduced. [variableScope]
  const char *s;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:5556:8: style: The scope of the variable 'appendstr' can be reduced. [variableScope]
  char appendstr[128], *result;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:6779:15: style: The scope of the variable 'propname' can be reduced. [variableScope]
  const char *propname;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:6850:16: style: The scope of the variable 'prop' can be reduced. [variableScope]
  PropertyRNA *prop;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:6855:7: style: The scope of the variable 'flag' can be reduced. [variableScope]
  int flag, flag_parameter;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:6855:13: style: The scope of the variable 'flag_parameter' can be reduced. [variableScope]
  int flag, flag_parameter;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7268:23: style: The scope of the variable 'size' can be reduced. [variableScope]
  int alloc_size = 0, size;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:7878:21: style: The scope of the variable 'flag_parameter' can be reduced. [variableScope]
  int i, ofs, flen, flag_parameter, len, alen, err = 0;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:4649:14: style: Variable 'a' is assigned a value that is never used. [unreadVariable]
            a++;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_access.c:5731:14: style: Variable 'link.index' is assigned a value that is never used. [unreadVariable]
  link.index = -1;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_color.c:226:7: style: The scope of the variable 'index' can be reduced. [variableScope]
  int index;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_color.c:436:12: style: Local variable 'scene' shadows outer argument [shadowArgument]
    Scene *scene = (Scene *)id;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_color.c:426:81: note: Shadowed declaration
                                                                  Scene *UNUSED(scene),
                                                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_color.c:436:12: note: Shadow variable
    Scene *scene = (Scene *)id;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_color.c:616:12: style: Local variable 'scene' shadows outer argument [shadowArgument]
    Scene *scene = (Scene *)id;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_color.c:591:76: note: Shadowed declaration
                                                             Scene *UNUSED(scene),
                                                                           ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_color.c:616:12: note: Shadow variable
    Scene *scene = (Scene *)id;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_constraint.c:474:12: warning: Either the condition 'con!=NULL' is redundant or there is possible null pointer dereference: con. [nullPointerRedundantCheck]
           con->name,
           ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_constraint.c:453:11: note: Assuming that condition 'con!=NULL' is not redundant
  if (con != NULL) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_constraint.c:450:48: note: Assignment 'con=rna_constraint_from_target(ptr)', assigned value is 0
  bConstraint *con = rna_constraint_from_target(ptr);
                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_constraint.c:474:12: note: Null pointer dereference
           con->name,
           ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_depsgraph.c:648:8: style: Variable 'func' is reassigned a value before the old one has been used. [redundantAssignment]
  func = RNA_def_function(srna, "debug_stats", "rna_Depsgraph_debug_stats");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_depsgraph.c:646:8: note: func is assigned
  func = RNA_def_function(srna, "debug_tag_update", "rna_Depsgraph_debug_tag_update");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_depsgraph.c:648:8: note: func is overwritten
  func = RNA_def_function(srna, "debug_stats", "rna_Depsgraph_debug_stats");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:511:26: warning: Either the condition 'if(offset)' is redundant or there is possible null pointer dereference: offset. [nullPointerRedundantCheck]
      smember->offset = *offset;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:516:10: note: Assuming that condition 'if(offset)' is not redundant
      if (offset) {
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:511:26: note: Null pointer dereference
      smember->offset = *offset;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:3124:24: portability: Casting between const char * and float * which have an incompatible binary data representation. [invalidPointerCast]
          fprop->get = (PropFloatGetFunc)get;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:450:34: style: The scope of the variable 'cmp' can be reduced. [variableScope]
  int a, b, structnr, totmember, cmp;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:906:16: style: The scope of the variable 'prop' can be reduced. [variableScope]
  PropertyRNA *prop;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:1601:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:1842:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, defaultfound = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:1842:10: style: The scope of the variable 'defaultfound' can be reduced. [variableScope]
  int i, defaultfound = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:2077:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, defaultfound = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:2077:10: style: The scope of the variable 'defaultfound' can be reduced. [variableScope]
  int i, defaultfound = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:4166:19: style: The scope of the variable 'dfunc' can be reduced. [variableScope]
  FunctionDefRNA *dfunc;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:2254:25: style: Variable 'has_default' is assigned a value that is never used. [unreadVariable]
            has_default = false;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_fcurve.c:255:18: style: The scope of the variable 'driver' can be reduced. [variableScope]
  ChannelDriver *driver;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image.c:794:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(func, "result", "RenderSlot", "", "Newly created render layer");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image.c:793:8: note: parm is assigned
  parm = RNA_def_string(func, "name", NULL, 0, "Name", "New name for the render slot");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image.c:794:8: note: parm is overwritten
  parm = RNA_def_pointer(func, "result", "RenderSlot", "", "Newly created render layer");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image.c:854:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(func, "result", "UDIMTile", "", "Newly created image tile");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image.c:853:8: note: parm is assigned
  parm = RNA_def_string(func, "label", NULL, 0, "", "Optional label for the tile");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image.c:854:8: note: parm is overwritten
  parm = RNA_def_pointer(func, "result", "UDIMTile", "", "Newly created image tile");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image.c:475:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, size;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image.c:475:10: style: The scope of the variable 'size' can be reduced. [variableScope]
  int i, size;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image.c:500:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, size;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image.c:500:10: style: The scope of the variable 'size' can be reduced. [variableScope]
  int i, size;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_image_api.c:69:10: style: The scope of the variable 'ibuf' can be reduced. [variableScope]
  ImBuf *ibuf;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_layer.c:315:10: style: Local variable 'scene' shadows outer argument [shadowArgument]
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_layer.c:313:75: note: Shadowed declaration
static void rna_LayerCollection_exclude_update(Main *bmain, Scene *UNUSED(scene), PointerRNA *ptr)
                                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_layer.c:315:10: note: Shadow variable
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:4481:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:4573:9: style: The scope of the variable 'a' can be reduced. [variableScope]
    int a;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:2585:11: style: Variable 'dp' is assigned a value that is never used. [unreadVariable]
  if ((dp = rna_def_property_sdna(prop, structname, propname))) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_define.c:2679:11: style: Variable 'dp' is assigned a value that is never used. [unreadVariable]
  if ((dp = rna_def_property_sdna(prop, structname, propname))) {
          ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_main.c:186:22: style: The scope of the variable 'func' can be reduced. [variableScope]
  CollectionDefFunc *func;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_main_api.c:1494:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(func, "brush", "Brush", "", "New brush data-block");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_main_api.c:1487:8: note: parm is assigned
  parm = RNA_def_enum(func,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_main_api.c:1494:8: note: parm is overwritten
  parm = RNA_def_pointer(func, "brush", "Brush", "", "New brush data-block");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_main_api.c:1683:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(func, "text", "Text", "", "New text data-block");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_main_api.c:1680:8: note: parm is assigned
  parm = RNA_def_boolean(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_main_api.c:1683:8: note: parm is overwritten
  parm = RNA_def_pointer(func, "text", "Text", "", "New text data-block");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_mesh_api.c:280:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_int_array(func, "poly_groups", 1, NULL, 0, 0, "", "Smooth Groups", 0, 0);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_mesh_api.c:261:8: note: parm is assigned
  parm = RNA_def_string(func,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_mesh_api.c:280:8: note: parm is overwritten
  parm = RNA_def_int_array(func, "poly_groups", 1, NULL, 0, 0, "", "Smooth Groups", 0, 0);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:762:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_boolean(func, "result", 0, "", "Object selected");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:760:8: note: parm is assigned
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:762:8: note: parm is overwritten
  parm = RNA_def_boolean(func, "result", 0, "", "Object selected");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:779:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:771:8: note: parm is assigned
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:779:8: note: parm is overwritten
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:781:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_boolean(func, "result", 0, "", "Object hidden");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:779:8: note: parm is assigned
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:781:8: note: parm is overwritten
  parm = RNA_def_boolean(func, "result", 0, "", "Object hidden");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:798:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:790:8: note: parm is assigned
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:798:8: note: parm is overwritten
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:800:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:798:8: note: parm is assigned
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:800:8: note: parm is overwritten
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:802:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_boolean(func, "result", 0, "", "Object visible");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:800:8: note: parm is assigned
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:802:8: note: parm is overwritten
  parm = RNA_def_boolean(func, "result", 0, "", "Object visible");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:810:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_boolean(func, "result", 0, "", "Object holdout");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:808:8: note: parm is assigned
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:810:8: note: parm is overwritten
  parm = RNA_def_boolean(func, "result", 0, "", "Object holdout");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:820:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_boolean(func, "result", 0, "", "Object indirect only");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:818:8: note: parm is assigned
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:820:8: note: parm is overwritten
  parm = RNA_def_boolean(func, "result", 0, "", "Object indirect only");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:861:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_property(func, "matrix", PROP_FLOAT, PROP_MATRIX);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:854:8: note: parm is assigned
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:861:8: note: parm is overwritten
  parm = RNA_def_property(func, "matrix", PROP_FLOAT, PROP_MATRIX);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:874:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_enum(func,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:868:8: note: parm is assigned
  parm = RNA_def_enum(func,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:874:8: note: parm is overwritten
  parm = RNA_def_enum(func,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:886:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:874:8: note: parm is assigned
  parm = RNA_def_enum(func,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:886:8: note: parm is overwritten
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:894:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_int(func, "y", 1, 0, INT_MAX, "", "Height of the render area", 0, 10000);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:893:8: note: parm is assigned
  parm = RNA_def_int(func, "x", 1, 0, INT_MAX, "", "Width of the render area", 0, 10000);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:894:8: note: parm is overwritten
  parm = RNA_def_int(func, "y", 1, 0, INT_MAX, "", "Height of the render area", 0, 10000);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:895:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:894:8: note: parm is assigned
  parm = RNA_def_int(func, "y", 1, 0, INT_MAX, "", "Height of the render area", 0, 10000);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:895:8: note: parm is overwritten
  parm = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:897:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:895:8: note: parm is assigned
  parm = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:897:8: note: parm is overwritten
  parm = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:904:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:897:8: note: parm is assigned
  parm = RNA_def_float(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:904:8: note: parm is overwritten
  parm = RNA_def_pointer(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:1195:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_boolean(func, "use_collections", 1, "", "Use Collections");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:1194:8: note: parm is assigned
  parm = RNA_def_boolean(func, "gpencil_lines", 0, "", "Create Lines");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:1195:8: note: parm is overwritten
  parm = RNA_def_boolean(func, "use_collections", 1, "", "Use Collections");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:1197:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_boolean(func, "result", 0, "", "Result");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:1195:8: note: parm is assigned
  parm = RNA_def_boolean(func, "use_collections", 1, "", "Use Collections");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_api.c:1197:8: note: parm is overwritten
  parm = RNA_def_boolean(func, "result", 0, "", "Result");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:1023:54: warning: Either the condition 'if(ob&&ob->type==OB_GPENCIL)' is redundant or there is possible null pointer dereference: ob. [nullPointerRedundantCheck]
  BKE_object_material_assign(G_MAIN, ob, value.data, ob->actcol, BKE_MAT_ASSIGN_EXISTING);
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:1025:6: note: Assuming that condition 'if(ob&&ob->type==OB_GPENCIL)' is not redundant
  if (ob && ob->type == OB_GPENCIL) {
     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:1023:54: note: Null pointer dereference
  BKE_object_material_assign(G_MAIN, ob, value.data, ob->actcol, BKE_MAT_ASSIGN_EXISTING);
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:1634:34: warning: Either the condition 'mod_src?mod_src->next:ob_src->modifiers.first' is redundant or there is possible null pointer dereference: mod_src. [nullPointerRedundantCheck]
      NULL, bmain, NULL, ob_dst, mod_src->name, mod_src->type);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:1626:21: note: Assuming that condition 'mod_src?mod_src->next:ob_src->modifiers.first' is not redundant
  mod_src = mod_src ? mod_src->next : ob_src->modifiers.first;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:1626:21: note: Assignment 'mod_src=mod_src?mod_src->next:ob_src->modifiers.first', assigned value is 0
  mod_src = mod_src ? mod_src->next : ob_src->modifiers.first;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:1634:34: note: Null pointer dereference
      NULL, bmain, NULL, ob_dst, mod_src->name, mod_src->type);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:934:20: style: The scope of the variable 'layer' can be reduced. [variableScope]
  CustomDataLayer *layer;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:935:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:957:20: style: The scope of the variable 'layer' can be reduced. [variableScope]
  CustomDataLayer *layer;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object.c:958:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_force.c:198:9: style: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
        break;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_object_force.c:263:8: style: The scope of the variable 'use_new_name' can be reduced. [variableScope]
  bool use_new_name = true;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_pose_api.c:154:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_property(func, "handle1", PROP_FLOAT, PROP_XYZ);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_pose_api.c:147:8: note: parm is assigned
  parm = RNA_def_boolean(func, "rest", false, "", "Return the rest pose matrix");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_pose_api.c:154:8: note: parm is overwritten
  parm = RNA_def_property(func, "handle1", PROP_FLOAT, PROP_XYZ);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_pose_api.c:170:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_boolean(func, "ease", false, "", "Apply scale from ease values");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_pose_api.c:169:8: note: parm is assigned
  parm = RNA_def_boolean(func, "rest", false, "", "Return the rest pose state");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_pose_api.c:170:8: note: parm is overwritten
  parm = RNA_def_boolean(func, "ease", false, "", "Apply scale from ease values");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_pose_api.c:171:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_boolean(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_pose_api.c:170:8: note: parm is assigned
  parm = RNA_def_boolean(func, "ease", false, "", "Apply scale from ease values");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_pose_api.c:171:8: note: parm is overwritten
  parm = RNA_def_boolean(
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_render.c:594:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(func, "renderlayer", "ViewLayer", "", "");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_render.c:593:8: note: parm is assigned
  parm = RNA_def_pointer(func, "scene", "Scene", "", "");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_render.c:594:8: note: parm is overwritten
  parm = RNA_def_pointer(func, "renderlayer", "ViewLayer", "", "");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_render.c:607:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_int(func, "x", 0, 0, INT_MAX, "X", "", 0, INT_MAX);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_render.c:594:8: note: parm is assigned
  parm = RNA_def_pointer(func, "renderlayer", "ViewLayer", "", "");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_render.c:607:8: note: parm is overwritten
  parm = RNA_def_int(func, "x", 0, 0, INT_MAX, "X", "", 0, INT_MAX);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_particle.c:424:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_rna.c:1173:41: warning: Either the condition 'propptr_b==NULL' is redundant or there is possible null pointer dereference: propptr_b. [nullPointerRedundantCheck]
    *r_is_null = (ELEM(NULL, propptr_b, propptr_b->type, propptr_b->data));
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_rna.c:1174:34: note: Assuming that condition 'propptr_b==NULL' is not redundant
    *r_is_type_diff = (propptr_b == NULL || propptr_b->type != propptr_a->type);
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_rna.c:1173:41: note: Null pointer dereference
    *r_is_null = (ELEM(NULL, propptr_b, propptr_b->type, propptr_b->data));
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_rna.c:1720:14: style: The scope of the variable 'is_valid_for_insertion' can be reduced. [variableScope]
        bool is_valid_for_insertion;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_rna.c:1957:45: style: The scope of the variable 'array_stack_b' can be reduced. [variableScope]
        int array_stack_a[RNA_STACK_ARRAY], array_stack_b[RNA_STACK_ARRAY];
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_rna.c:1958:24: style: The scope of the variable 'array_b' can be reduced. [variableScope]
        int *array_a, *array_b;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:6498:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(func, "marker", "TimelineMarker", "", "Newly created timeline marker");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:6489:8: note: parm is assigned
  parm = RNA_def_int(func,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:6498:8: note: parm is overwritten
  parm = RNA_def_pointer(func, "marker", "TimelineMarker", "", "Newly created timeline marker");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer_api.c:464:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_int(func,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer_api.c:460:8: note: parm is assigned
  parm = RNA_def_boolean(func, "data", false, "Data", "Update strip data");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer_api.c:464:8: note: parm is overwritten
  parm = RNA_def_int(func,
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:2896:14: style: The scope of the variable 'srna' can be reduced. [variableScope]
  StructRNA *srna;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:885:14: style: Redundant initialization for 'smd'. The initialized value is overwritten before it is read. [redundantInitialization]
    for (smd = seq->modifiers.first; smd; smd = smd->next) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:883:31: note: smd is initialized
    SequenceModifierData *smd = seq->modifiers.first;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:885:14: note: smd is overwritten
    for (smd = seq->modifiers.first; smd; smd = smd->next) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:291:10: style: Local variable 'scene' shadows outer argument [shadowArgument]
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:289:73: note: Shadowed declaration
static void rna_Sequence_frame_change_update(Main *bmain, Scene *UNUSED(scene), PointerRNA *ptr)
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:291:10: note: Shadow variable
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:792:10: style: Local variable 'scene' shadows outer argument [shadowArgument]
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:790:73: note: Shadowed declaration
static void rna_Sequence_reopen_files_update(Main *bmain, Scene *UNUSED(scene), PointerRNA *ptr)
                                                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:792:10: note: Shadow variable
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:812:10: style: Local variable 'scene' shadows outer argument [shadowArgument]
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:810:69: note: Shadowed declaration
static void rna_Sequence_filepath_update(Main *bmain, Scene *UNUSED(scene), PointerRNA *ptr)
                                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:812:10: note: Shadow variable
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:848:10: style: Local variable 'scene' shadows outer argument [shadowArgument]
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:846:68: note: Shadowed declaration
static void rna_Sequence_tcindex_update(Main *bmain, Scene *UNUSED(scene), PointerRNA *ptr)
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:848:10: note: Shadow variable
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:52:15: style: struct member 'EffectInfo::struct_name' is never used. [unusedStructMember]
  const char *struct_name;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:53:15: style: struct member 'EffectInfo::ui_name' is never used. [unusedStructMember]
  const char *ui_name;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:54:15: style: struct member 'EffectInfo::ui_desc' is never used. [unusedStructMember]
  const char *ui_desc;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:55:10: style: struct member 'EffectInfo::func' is never used. [unusedStructMember]
  void (*func)(StructRNA *);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_sequencer.c:56:7: style: struct member 'EffectInfo::inputs' is never used. [unusedStructMember]
  int inputs;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:745:21: style: The scope of the variable 'pt' can be reduced. [variableScope]
        bGPDspoint *pt;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:884:10: style: Local variable 'scene' shadows outer argument [shadowArgument]
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:882:54: note: Shadowed declaration
void rna_Scene_set_update(Main *bmain, Scene *UNUSED(scene), PointerRNA *ptr)
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:884:10: note: Shadow variable
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:1691:10: style: Local variable 'scene' shadows outer argument [shadowArgument]
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:1689:70: note: Shadowed declaration
static void rna_Scene_mesh_quality_update(Main *bmain, Scene *UNUSED(scene), PointerRNA *ptr)
                                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:1691:10: note: Shadow variable
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:1753:10: style: Local variable 'scene' shadows outer argument [shadowArgument]
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:1751:72: note: Shadowed declaration
void rna_ViewLayer_material_override_update(Main *bmain, Scene *UNUSED(scene), PointerRNA *ptr)
                                                                       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:1753:10: note: Shadow variable
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:2179:10: style: Local variable 'scene' shadows outer argument [shadowArgument]
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:2177:63: note: Shadowed declaration
static void rna_SceneCamera_update(Main *bmain, Scene *UNUSED(scene), PointerRNA *ptr)
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:2179:10: note: Shadow variable
  Scene *scene = (Scene *)ptr->owner_id;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_scene.c:1384:26: style: Variable 'tmp' is assigned a value that is never used. [unreadVariable]
    EnumPropertyItem tmp = {0, "", 0, "", ""};
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_space.c:904:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i = 3;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_ui.c:535:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, filter_exclude = ui_list->filter_flag & UILST_FLT_EXCLUDE;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_userdef.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm_gizmo.c:1042:8: style: Variable 'parm' is reassigned a value before the old one has been used. [redundantAssignment]
  parm = RNA_def_pointer(func, "context", "Context", "", "");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm_gizmo.c:1036:8: note: parm is assigned
  parm = RNA_def_int(func, "select_id", 0, 0, INT_MAX, "", "", 0, INT_MAX);
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm_gizmo.c:1042:8: note: parm is overwritten
  parm = RNA_def_pointer(func, "context", "Context", "", "");
       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm_gizmo.c:867:19: style: Variable 'dummywgt.name' is reassigned a value before the old one has been used. [redundantAssignment]
    dummywgt.name = strings_table[1];
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm_gizmo.c:812:17: note: dummywgt.name is assigned
  dummywgt.name = temp_buffers.name;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm_gizmo.c:867:19: note: dummywgt.name is overwritten
    dummywgt.name = strings_table[1];
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1566:18: style: Variable 'dummyot.name' is reassigned a value before the old one has been used. [redundantAssignment]
    dummyot.name = strings_table[1];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1514:16: note: dummyot.name is assigned
  dummyot.name = temp_buffers.name;               /* only assign the pointer, string is NULL'd */
               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1566:18: note: dummyot.name is overwritten
    dummyot.name = strings_table[1];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1567:25: style: Variable 'dummyot.description' is reassigned a value before the old one has been used. [redundantAssignment]
    dummyot.description = *strings_table[2] ? strings_table[2] : NULL;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1515:23: note: dummyot.description is assigned
  dummyot.description = temp_buffers.description; /* only assign the pointer, string is NULL'd */
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1567:25: note: dummyot.description is overwritten
    dummyot.description = *strings_table[2] ? strings_table[2] : NULL;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1568:33: style: Variable 'dummyot.translation_context' is reassigned a value before the old one has been used. [redundantAssignment]
    dummyot.translation_context = strings_table[3];
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1516:31: note: dummyot.translation_context is assigned
  dummyot.translation_context =
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1568:33: note: dummyot.translation_context is overwritten
    dummyot.translation_context = strings_table[3];
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1569:24: style: Variable 'dummyot.undo_group' is reassigned a value before the old one has been used. [redundantAssignment]
    dummyot.undo_group = strings_table[4];
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1518:22: note: dummyot.undo_group is assigned
  dummyot.undo_group = temp_buffers.undo_group; /* only assign the pointer, string is NULL'd */
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1569:24: note: dummyot.undo_group is overwritten
    dummyot.undo_group = strings_table[4];
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1726:18: style: Variable 'dummyot.name' is reassigned a value before the old one has been used. [redundantAssignment]
    dummyot.name = strings_table[1];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1665:16: note: dummyot.name is assigned
  dummyot.name = temp_buffers.name;               /* only assign the pointer, string is NULL'd */
               ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1726:18: note: dummyot.name is overwritten
    dummyot.name = strings_table[1];
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1727:25: style: Variable 'dummyot.description' is reassigned a value before the old one has been used. [redundantAssignment]
    dummyot.description = *strings_table[2] ? strings_table[2] : NULL;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1666:23: note: dummyot.description is assigned
  dummyot.description = temp_buffers.description; /* only assign the pointer, string is NULL'd */
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1727:25: note: dummyot.description is overwritten
    dummyot.description = *strings_table[2] ? strings_table[2] : NULL;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1728:33: style: Variable 'dummyot.translation_context' is reassigned a value before the old one has been used. [redundantAssignment]
    dummyot.translation_context = strings_table[3];
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1667:31: note: dummyot.translation_context is assigned
  dummyot.translation_context =
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1728:33: note: dummyot.translation_context is overwritten
    dummyot.translation_context = strings_table[3];
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1729:24: style: Variable 'dummyot.undo_group' is reassigned a value before the old one has been used. [redundantAssignment]
    dummyot.undo_group = strings_table[4];
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1669:22: note: dummyot.undo_group is assigned
  dummyot.undo_group = temp_buffers.undo_group; /* only assign the pointer, string is NULL'd */
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1729:24: note: dummyot.undo_group is overwritten
    dummyot.undo_group = strings_table[4];
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1522:26: style: Variable 'temp_buffers.idname[0]' is assigned a value that is never used. [unreadVariable]
  temp_buffers.idname[0] = temp_buffers.name[0] = temp_buffers.description[0] =
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\makesrna\intern\rna_wm.c:1673:26: style: Variable 'temp_buffers.idname[0]' is assigned a value that is never used. [unreadVariable]
  temp_buffers.idname[0] = temp_buffers.name[0] = temp_buffers.description[0] =
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_bevel.c:100:11: style: The scope of the variable 'v' can be reduced. [variableScope]
  BMVert *v;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_array.c:358:10: style: The scope of the variable 'mv' can be reduced. [variableScope]
  MVert *mv, *mv_prev, *result_dm_verts;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_array.c:360:10: style: The scope of the variable 'me' can be reduced. [variableScope]
  MEdge *me;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_array.c:361:10: style: The scope of the variable 'ml' can be reduced. [variableScope]
  MLoop *ml;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_array.c:362:10: style: The scope of the variable 'mp' can be reduced. [variableScope]
  MPoly *mp;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_array.c:363:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j, c, count;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_build.c:67:19: style: The scope of the variable 'ml_src' can be reduced. [variableScope]
  MLoop *ml_dst, *ml_src /*, *mloop_dst */;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_build.c:104:20: style: The scope of the variable 'mp' can be reduced. [variableScope]
    MPoly *mpoly, *mp;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_build.c:105:12: style: The scope of the variable 'ml' can be reduced. [variableScope]
    MLoop *ml, *mloop;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_build.c:152:20: style: The scope of the variable 'me' can be reduced. [variableScope]
    MEdge *medge, *me;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_collision.c:229:24: style: Condition 'mvert_num!=collmd->mvert_num' is always true [knownConditionTrueFalse]
    else if (mvert_num != collmd->mvert_num) {
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_displace.c:182:10: style: The scope of the variable 'tex_co' can be reduced. [variableScope]
  float(*tex_co)[3] = data->tex_co;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:99:13: style: The scope of the variable 'v1' can be reduced. [variableScope]
  int i, p, v1, v2, v3, v4 = 0;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:99:17: style: The scope of the variable 'v2' can be reduced. [variableScope]
  int i, p, v1, v2, v3, v4 = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:99:21: style: The scope of the variable 'v3' can be reduced. [variableScope]
  int i, p, v1, v2, v3, v4 = 0;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:282:22: style: The scope of the variable 'df2' can be reduced. [variableScope]
  MTFace *mf, *df1, *df2, *df3;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:282:28: style: The scope of the variable 'df3' can be reduced. [variableScope]
  MTFace *mf, *df1, *df2, *df3;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:342:22: style: The scope of the variable 'df2' can be reduced. [variableScope]
  MTFace *mf, *df1, *df2;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:414:22: style: The scope of the variable 'df2' can be reduced. [variableScope]
  MTFace *mf, *df1, *df2, *df3, *df4;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:414:28: style: The scope of the variable 'df3' can be reduced. [variableScope]
  MTFace *mf, *df1, *df2, *df3, *df4;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:414:34: style: The scope of the variable 'df4' can be reduced. [variableScope]
  MTFace *mf, *df1, *df2, *df3, *df4;
                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:490:22: style: The scope of the variable 'df2' can be reduced. [variableScope]
  MTFace *mf, *df1, *df2, *df3;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:304:9: style: The scope of the variable 'minj' can be reduced. [variableScope]
  float minj, mjt, qj[3], vj[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:490:28: style: The scope of the variable 'df3' can be reduced. [variableScope]
  MTFace *mf, *df1, *df2, *df3;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:305:13: style: The scope of the variable 'ln' can be reduced. [variableScope]
  int i, j, ln;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:550:22: style: The scope of the variable 'df2' can be reduced. [variableScope]
  MTFace *mf, *df1, *df2;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:328:9: style: The scope of the variable 'alpha' can be reduced. [variableScope]
  float alpha, beta, gamma;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:612:22: style: The scope of the variable 'df2' can be reduced. [variableScope]
  MTFace *mf, *df1, *df2;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:328:16: style: The scope of the variable 'beta' can be reduced. [variableScope]
  float alpha, beta, gamma;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:642:10: style: The scope of the variable 'dupve' can be reduced. [variableScope]
  MVert *dupve, *mv;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:328:22: style: The scope of the variable 'gamma' can be reduced. [variableScope]
  float alpha, beta, gamma;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:642:18: style: The scope of the variable 'mv' can be reduced. [variableScope]
  MVert *dupve, *mv;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:331:13: style: The scope of the variable 'num_fni' can be reduced. [variableScope]
  int i, j, num_fni, k, fi;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:652:10: style: The scope of the variable 'v1' can be reduced. [variableScope]
  int i, v1, v2, v3, v4, esplit, v[4] = {0, 0, 0, 0}, /* To quite gcc barking... */
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:331:22: style: The scope of the variable 'k' can be reduced. [variableScope]
  int i, j, num_fni, k, fi;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:652:14: style: The scope of the variable 'v2' can be reduced. [variableScope]
  int i, v1, v2, v3, v4, esplit, v[4] = {0, 0, 0, 0}, /* To quite gcc barking... */
             ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:524:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:652:18: style: The scope of the variable 'v3' can be reduced. [variableScope]
  int i, v1, v2, v3, v4, esplit, v[4] = {0, 0, 0, 0}, /* To quite gcc barking... */
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:526:7: style: The scope of the variable 'total_anchors' can be reduced. [variableScope]
  int total_anchors;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:652:26: style: The scope of the variable 'esplit' can be reduced. [variableScope]
  int i, v1, v2, v3, v4, esplit, v[4] = {0, 0, 0, 0}, /* To quite gcc barking... */
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:527:9: style: The scope of the variable 'wpaint' can be reduced. [variableScope]
  float wpaint;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_explode.c:911:10: style: The scope of the variable 'v' can be reduced. [variableScope]
  int i, v, u;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:597:9: style: The scope of the variable 'wpaint' can be reduced. [variableScope]
  float wpaint;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciandeform.c:636:7: style: The scope of the variable 'sysdif' can be reduced. [variableScope]
  int sysdif;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciansmooth.c:174:9: style: The scope of the variable 'beta' can be reduced. [variableScope]
  float beta;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciansmooth.c:175:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciansmooth.c:198:10: style: The scope of the variable 'v1' can be reduced. [variableScope]
  float *v1, *v2;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciansmooth.c:198:15: style: The scope of the variable 'v2' can be reduced. [variableScope]
  float *v1, *v2;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciansmooth.c:341:22: style: The scope of the variable 'vend' can be reduced. [variableScope]
  float vini = 0.0f, vend = 0.0f;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_laplaciansmooth.c:341:27: style: Variable 'vend' is assigned a value that is never used. [unreadVariable]
  float vini = 0.0f, vend = 0.0f;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_mask.cc:135:11: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
    value = !value;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_mask.cc:202:33: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
      if (!vertex_mask[loop.v]) {
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_meshcache_mdd.c:128:11: style: Variable 'frame' is reassigned a value before the old one has been used. [redundantAssignment]
    frame = 0.0f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_meshcache_mdd.c:125:11: note: frame is assigned
    frame = (float)(mdd_head.frame_tot - 1);
          ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_meshcache_mdd.c:128:11: note: frame is overwritten
    frame = 0.0f;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_meshdeform.c:168:13: style: The scope of the variable 'cell' can be reduced. [variableScope]
  MDefCell *cell;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_meshdeform.c:169:18: style: The scope of the variable 'inf' can be reduced. [variableScope]
  MDefInfluence *inf;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_meshdeform.c:171:9: style: The scope of the variable 'weight' can be reduced. [variableScope]
  float weight, cageweight, totweight, *cageco;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_meshdeform.c:172:13: style: The scope of the variable 'a' can be reduced. [variableScope]
  int i, j, a, x, y, z, size;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_meshdeform.c:278:9: style: The scope of the variable 'weight' can be reduced. [variableScope]
  float weight, totweight, fac = 1.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_meshdeform.c:492:27: style: The scope of the variable 'totweight' can be reduced. [variableScope]
  float weight, *weights, totweight;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_meshsequencecache.c:102:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = DEG_get_evaluated_scene(ctx->depsgraph);
               ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_normal_edit.c:237:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_particlesystem.c:222:5: warning: Either the condition 'md_orig!=NULL' is redundant or there is possible null pointer dereference: psmd_orig. [nullPointerRedundantCheck]
    psmd_orig->flag = psmd->flag;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_particlesystem.c:220:24: note: Assuming that condition 'md_orig!=NULL' is not redundant
    BLI_assert(md_orig != NULL);
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_particlesystem.c:219:49: note: Assignment 'md_orig=modifiers_findByName(object_orig,psmd->modifier.name)', assigned value is 0
    ModifierData *md_orig = modifiers_findByName(object_orig, psmd->modifier.name);
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_particlesystem.c:221:45: note: Assignment 'psmd_orig=(ParticleSystemModifierData*)md_orig', assigned value is 0
    ParticleSystemModifierData *psmd_orig = (ParticleSystemModifierData *)md_orig;
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_particlesystem.c:222:5: note: Null pointer dereference
    psmd_orig->flag = psmd->flag;
    ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_ocean.c:352:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_shapekey.c:60:9: style: The scope of the variable 'scale' can be reduced. [variableScope]
  float scale[3][3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_shapekey.c:106:9: style: The scope of the variable 'scale' can be reduced. [variableScope]
  float scale[3][3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_skin.c:1019:49: error: syntax error [syntaxError]
      mid_v3_v3v3v3v3(cent_sides[i], UNPACK4_EX(, q[i], ->co));
                                                ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:407:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (mloopuv_layers_tot) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:402:7: note: First condition
  if (mloopuv_layers_tot) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:407:7: note: Second condition
  if (mloopuv_layers_tot) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:230:9: style: The scope of the variable 'tmp_vec1' can be reduced. [variableScope]
  float tmp_vec1[3], tmp_vec2[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:230:22: style: The scope of the variable 'tmp_vec2' can be reduced. [variableScope]
  float tmp_vec1[3], tmp_vec2[3];
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:234:9: style: The scope of the variable 'mtx_tx_inv' can be reduced. [variableScope]
  float mtx_tx_inv[4][4]; /* inverted */
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:235:9: style: The scope of the variable 'mtx_tmp_a' can be reduced. [variableScope]
  float mtx_tmp_a[4][4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:246:54: style: The scope of the variable 'mv_new_base' can be reduced. [variableScope]
  MVert *mvert_new, *mvert_orig, *mv_orig, *mv_new, *mv_new_base;
                                                     ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:600:16: style: The scope of the variable 'ed_loop_flip' can be reduced. [variableScope]
          bool ed_loop_flip = false;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:641:19: style: The scope of the variable 'vf_1' can be reduced. [variableScope]
            float vf_1, vf_2, vf_best;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:641:25: style: The scope of the variable 'vf_2' can be reduced. [variableScope]
            float vf_1, vf_2, vf_best;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_screw.c:641:31: style: The scope of the variable 'vf_best' can be reduced. [variableScope]
            float vf_1, vf_2, vf_best;
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_surface.c:130:12: style: The scope of the variable 'vec' can be reduced. [variableScope]
    float *vec;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_extrude.c:87:18: style: The scope of the variable 'ml' can be reduced. [variableScope]
  MLoop *mloop, *ml;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_extrude.c:88:18: style: The scope of the variable 'ed' can be reduced. [variableScope]
  MEdge *medge, *ed;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_extrude.c:1094:16: style: The scope of the variable 'nor_short' can be reduced. [variableScope]
        short *nor_short;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_extrude.c:352:25: style: Argument 'newVerts==0' to function BLI_assert is always 1 [constArgument]
    BLI_assert(newVerts == 0);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_extrude.c:201:61: note: Assignment 'newVerts=0', assigned value is 0
  uint newLoops = 0, newPolys = 0, newEdges = 0, newVerts = 0, rimVerts = 0;
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_extrude.c:352:25: note: Argument 'newVerts==0' to function BLI_assert is always 1
    BLI_assert(newVerts == 0);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_extrude.c:353:25: style: Argument 'newEdges==0' to function BLI_assert is always 1 [constArgument]
    BLI_assert(newEdges == 0);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_extrude.c:201:47: note: Assignment 'newEdges=0', assigned value is 0
  uint newLoops = 0, newPolys = 0, newEdges = 0, newVerts = 0, rimVerts = 0;
                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_extrude.c:353:25: note: Argument 'newEdges==0' to function BLI_assert is always 1
    BLI_assert(newEdges == 0);
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_surfacedeform.c:668:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (!inf_weight_flags) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_surfacedeform.c:618:7: note: First condition
  if (!inf_weight_flags) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_surfacedeform.c:668:7: note: Second condition
  if (!inf_weight_flags) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_surfacedeform.c:243:16: style: The scope of the variable 'loop' can be reduced. [variableScope]
  const MLoop *loop;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_surfacedeform.c:334:9: style: The scope of the variable 'dist' can be reduced. [variableScope]
  float dist;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_warp.c:202:9: style: The scope of the variable 'fac' can be reduced. [variableScope]
  float fac = 1.0f, weight;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_warp.c:202:13: style: Variable 'fac' is assigned a value that is never used. [unreadVariable]
  float fac = 1.0f, weight;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_wave.c:156:9: style: The scope of the variable 'falloff_fac' can be reduced. [variableScope]
  float falloff_fac = 1.0f; /* when falloff == 0.0f this stays at 1.0f */
        ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_weld.c:1623:16: style: The scope of the variable 'mloop' can be reduced. [variableScope]
  const MLoop *mloop;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_weld.c:1634:26: style: The scope of the variable 'dv' can be reduced. [variableScope]
    MDeformVert *dvert, *dv;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_nonmanifold.c:142:10: style: The scope of the variable 'mv' can be reduced. [variableScope]
  MVert *mv, *mvert, *orig_mvert;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_nonmanifold.c:857:16: style: The scope of the variable 'insert_at_start' can be reduced. [variableScope]
          bool insert_at_start = false;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\modifiers\intern\MOD_solidify_nonmanifold.c:1386:27: style: The scope of the variable 'max_p' can be reduced. [variableScope]
                    float max_p = -1;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\composite\nodes\node_composite_cryptomatte.c:59:12: style: The scope of the variable 'token_len' can be reduced. [variableScope]
    size_t token_len = 0;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\composite\nodes\node_composite_cryptomatte.c:136:10: style: The scope of the variable 'token_len' can be reduced. [variableScope]
  size_t token_len = 0;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\composite\nodes\node_composite_cryptomatte.c:59:22: style: Variable 'token_len' is assigned a value that is never used. [unreadVariable]
    size_t token_len = 0;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\composite\nodes\node_composite_cryptomatte.c:136:20: style: Variable 'token_len' is assigned a value that is never used. [unreadVariable]
  size_t token_len = 0;
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\composite\nodes\node_composite_switchview.c:122:16: style: The scope of the variable 'sock' can be reduced. [variableScope]
  bNodeSocket *sock;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\composite\nodes\node_composite_switchview.c:123:7: style: The scope of the variable 'nr' can be reduced. [variableScope]
  int nr;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_exec.c:315:10: style: The scope of the variable 'node' can be reduced. [variableScope]
  bNode *node;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_socket.c:130:24: style: The scope of the variable 'stemp' can be reduced. [variableScope]
  bNodeSocketTemplate *stemp;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_util.c:124:23: style: The statement 'if (sock1->label[0]!='\0') sock1->label[0]='\0'' is logically equivalent to 'sock1->label[0]='\0''. [duplicateConditionalAssign]
  if (sock1->label[0] != '\0') {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_util.c:125:21: note: Assignment 'sock1->label[0]='\0''
    sock1->label[0] = '\0';
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_util.c:124:23: note: Condition 'sock1->label[0]!='\0'' is redundant
  if (sock1->label[0] != '\0') {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_util.c:127:23: style: The statement 'if (sock2->label[0]!='\0') sock2->label[0]='\0'' is logically equivalent to 'sock2->label[0]='\0''. [duplicateConditionalAssign]
  if (sock2->label[0] != '\0') {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_util.c:128:21: note: Assignment 'sock2->label[0]='\0''
    sock2->label[0] = '\0';
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_util.c:127:23: note: Condition 'sock2->label[0]!='\0'' is redundant
  if (sock2->label[0] != '\0') {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_util.c:130:23: style: The statement 'if (sock3->label[0]!='\0') sock3->label[0]='\0'' is logically equivalent to 'sock3->label[0]='\0''. [duplicateConditionalAssign]
  if (sock3->label[0] != '\0') {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_util.c:131:21: note: Assignment 'sock3->label[0]='\0''
    sock3->label[0] = '\0';
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\intern\node_util.c:130:23: note: Condition 'sock3->label[0]!='\0'' is redundant
  if (sock3->label[0] != '\0') {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_util.c:230:8: style: The scope of the variable 'do_it' can be reduced. [variableScope]
  bool do_it;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:304:18: warning: Either the condition 'value_socket!=NULL' is redundant or there is possible null pointer dereference: value_socket. [nullPointerRedundantCheck]
      dst_rgba = value_socket->default_value;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:302:31: note: Assuming that condition 'value_socket!=NULL' is not redundant
      BLI_assert(value_socket != NULL);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:301:51: note: Assignment 'value_socket=ntree_shader_node_find_output(value_node,"Color")', assigned value is 0
      value_socket = ntree_shader_node_find_output(value_node, "Color");
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:304:18: note: Null pointer dereference
      dst_rgba = value_socket->default_value;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:313:18: warning: Either the condition 'value_socket!=NULL' is redundant or there is possible null pointer dereference: value_socket. [nullPointerRedundantCheck]
      dst_rgba = value_socket->default_value;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:311:31: note: Assuming that condition 'value_socket!=NULL' is not redundant
      BLI_assert(value_socket != NULL);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:310:51: note: Assignment 'value_socket=ntree_shader_node_find_output(value_node,"Color")', assigned value is 0
      value_socket = ntree_shader_node_find_output(value_node, "Color");
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:313:18: note: Null pointer dereference
      dst_rgba = value_socket->default_value;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:322:19: warning: Either the condition 'value_socket!=NULL' is redundant or there is possible null pointer dereference: value_socket. [nullPointerRedundantCheck]
      dst_float = value_socket->default_value;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:320:31: note: Assuming that condition 'value_socket!=NULL' is not redundant
      BLI_assert(value_socket != NULL);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:319:51: note: Assignment 'value_socket=ntree_shader_node_find_output(value_node,"Value")', assigned value is 0
      value_socket = ntree_shader_node_find_output(value_node, "Value");
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:322:19: note: Null pointer dereference
      dst_float = value_socket->default_value;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:330:19: warning: Either the condition 'value_socket!=NULL' is redundant or there is possible null pointer dereference: value_socket. [nullPointerRedundantCheck]
      dst_float = value_socket->default_value;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:328:31: note: Assuming that condition 'value_socket!=NULL' is not redundant
      BLI_assert(value_socket != NULL);
                              ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:327:51: note: Assignment 'value_socket=ntree_shader_node_find_output(value_node,"Value")', assigned value is 0
      value_socket = ntree_shader_node_find_output(value_node, "Value");
                                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:330:19: note: Null pointer dereference
      dst_float = value_socket->default_value;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\node_shader_tree.c:966:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_tex_image.c:66:22: style: The scope of the variable 'names_tiled' can be reduced. [variableScope]
  static const char *names_tiled[] = {
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_tex_image.c:106:59: style: The scope of the variable 'gpu_image' can be reduced. [variableScope]
  GPUNodeLink *norm, *col1, *col2, *col3, *input_coords, *gpu_image;
                                                          ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_tex_image.c:107:16: style: The scope of the variable 'vnor' can be reduced. [variableScope]
  GPUNodeLink *vnor, *ob_mat, *blend;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_tex_image.c:107:23: style: The scope of the variable 'ob_mat' can be reduced. [variableScope]
  GPUNodeLink *vnor, *ob_mat, *blend;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_tex_image.c:107:32: style: The scope of the variable 'blend' can be reduced. [variableScope]
  GPUNodeLink *vnor, *ob_mat, *blend;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_vector_math.c:116:23: style: The statement 'if (sockB->label[0]!='\0') sockB->label[0]='\0'' is logically equivalent to 'sockB->label[0]='\0''. [duplicateConditionalAssign]
  if (sockB->label[0] != '\0') {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_vector_math.c:117:21: note: Assignment 'sockB->label[0]='\0''
    sockB->label[0] = '\0';
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_vector_math.c:116:23: note: Condition 'sockB->label[0]!='\0'' is redundant
  if (sockB->label[0] != '\0') {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_vector_math.c:119:23: style: The statement 'if (sockC->label[0]!='\0') sockC->label[0]='\0'' is logically equivalent to 'sockC->label[0]='\0''. [duplicateConditionalAssign]
  if (sockC->label[0] != '\0') {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_vector_math.c:120:21: note: Assignment 'sockC->label[0]='\0''
    sockC->label[0] = '\0';
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\shader\nodes\node_shader_vector_math.c:119:23: note: Condition 'sockC->label[0]!='\0'' is redundant
  if (sockC->label[0] != '\0') {
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\texture\node_texture_tree.c:245:7: style: The scope of the variable 'a' can be reduced. [variableScope]
  int a;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\texture\nodes\node_texture_texture.c:43:16: style: The scope of the variable 'red' can be reduced. [variableScope]
  static float red[] = {1, 0, 0, 1};
               ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\texture\nodes\node_texture_texture.c:44:16: style: The scope of the variable 'white' can be reduced. [variableScope]
  static float white[] = {1, 1, 1, 1};
               ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\texture\nodes\node_texture_translate.c:49:13: style: Variable 'new_co[2]' is assigned a value that is never used. [unreadVariable]
  new_co[2] = p->co[2] + offset[2];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\texture\nodes\node_texture_valToNor.c:61:13: style: Variable 'new_co[1]' is reassigned a value before the old one has been used. [redundantAssignment]
  new_co[1] = co[1];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\texture\nodes\node_texture_valToNor.c:58:13: note: new_co[1] is assigned
  new_co[1] = co[1] + nabla;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\texture\nodes\node_texture_valToNor.c:61:13: note: new_co[1] is overwritten
  new_co[1] = co[1];
            ^
C:\Users\LiTho\source\repos\blender\source\blender\nodes\texture\nodes\node_texture_valToNor.c:62:13: style: Variable 'new_co[2]' is assigned a value that is never used. [unreadVariable]
  new_co[2] = co[2] + nabla;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\bmesh\bmesh_py_ops.c:67:8: style: The scope of the variable 'quoted' can be reduced. [variableScope]
  bool quoted;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\BPH_mass_spring.cpp:854:16: style: The scope of the variable 'vert' can be reduced. [variableScope]
  ClothVertex *vert;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\python\bmesh\bmesh_py_ops.c:68:8: style: The scope of the variable 'set' can be reduced. [variableScope]
  bool set;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\BPH_mass_spring.cpp:864:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\eigen_utils.h:56:3: style: Class 'Vector3' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Vector3(const ctype &v)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\eigen_utils.h:88:3: style: Class 'Matrix3' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Matrix3(const ctype &v)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\eigen_utils.h:56:24: style: Parameter 'v' can be declared with const [constParameter]
  Vector3(const ctype &v)
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\eigen_utils.h:63:35: style: Parameter 'v' can be declared with const [constParameter]
  Vector3 &operator=(const ctype &v)
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\python\bmesh\bmesh_py_ops_call.c:845:22: warning: Either the condition 'ch!=NULL' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
        int tot = ch - slot->slot_name;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\python\bmesh\bmesh_py_ops_call.c:846:23: note: Assuming that condition 'ch!=NULL' is not redundant
        BLI_assert(ch != NULL);
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\python\bmesh\bmesh_py_ops_call.c:845:22: note: Null pointer subtraction
        int tot = ch - slot->slot_name;
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_blender.c:859:28: style: The scope of the variable 'delta_old' can be reduced. [variableScope]
  float bnorm2, delta_new, delta_old, delta_target, alpha;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_blender.c:859:53: style: The scope of the variable 'alpha' can be reduced. [variableScope]
  float bnorm2, delta_new, delta_old, delta_target, alpha;
                                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_blender.c:2242:9: style: The scope of the variable 'f' can be reduced. [variableScope]
  float f[3], dfdx[3][3], dfdv[3][3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_blender.c:2242:15: style: The scope of the variable 'dfdx' can be reduced. [variableScope]
  float f[3], dfdx[3][3], dfdv[3][3];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_blender.c:2242:27: style: The scope of the variable 'dfdv' can be reduced. [variableScope]
  float f[3], dfdx[3][3], dfdv[3][3];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_eigen.cpp:99:3: style: Class 'fVector' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  fVector(const ctype &v)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_eigen.cpp:131:3: style: Class 'fMatrix' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  fMatrix(const ctype &v)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_eigen.cpp:401:3: style: Struct 'Implicit_Data' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Implicit_Data(int numverts)
  ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_eigen.cpp:1458:9: style: The scope of the variable 'f' can be reduced. [variableScope]
  float f[3], dfdx[3][3], dfdv[3][3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_eigen.cpp:1458:15: style: The scope of the variable 'dfdx' can be reduced. [variableScope]
  float f[3], dfdx[3][3], dfdv[3][3];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_eigen.cpp:1458:27: style: The scope of the variable 'dfdv' can be reduced. [variableScope]
  float f[3], dfdx[3][3], dfdv[3][3];
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_eigen.cpp:99:24: style: Parameter 'v' can be declared with const [constParameter]
  fVector(const ctype &v)
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\physics\intern\implicit_eigen.cpp:106:35: style: Parameter 'v' can be declared with const [constParameter]
  fVector &operator=(const ctype &v)
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\python\bmesh\bmesh_py_types_customdata.c:507:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  PyObject *item;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\bmesh\bmesh_py_types_customdata.c:542:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  PyObject *item;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\bmesh\bmesh_py_types_customdata.c:577:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  PyObject *item;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\bmesh\bmesh_py_types_meshdata.c:586:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  PyObject *item;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\bmesh\bmesh_py_types.c:2671:22: style: The scope of the variable 'kwlist' can be reduced. [variableScope]
  static const char *kwlist[] = {"key", "reverse", NULL};
                     ^
C:\Users\LiTho\source\repos\blender\source\blender\python\generic\idprop_py_api.c:319:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  PyObject *item;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\generic\idprop_py_api.c:589:27: style: The scope of the variable 'key' can be reduced. [variableScope]
  PyObject *keys, *vals, *key, *pval;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\python\generic\idprop_py_api.c:589:33: style: The scope of the variable 'pval' can be reduced. [variableScope]
  PyObject *keys, *vals, *key, *pval;
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\python\generic\idprop_py_api.c:1662:15: style: The scope of the variable 'ret' can be reduced. [variableScope]
    PyObject *ret;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\python\generic\py_capi_utils.c:427:15: style: The scope of the variable 'attr' can be reduced. [variableScope]
  const char *attr;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\python\generic\py_capi_utils.c:1017:13: style: The scope of the variable 'pointer' can be reduced. [variableScope]
  PyObject *pointer;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\gpu\gpu_py_element.c:117:7: portability: Returning an integer in a function with pointer return type is not portable. [CastIntegerToAddressAtReturn]
      return false;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\python\generic\bgl.c:939:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  PyObject *item;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\generic\bgl.c:736:7: style: Local variable 'type' shadows outer argument [shadowArgument]
  int type;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\python\generic\bgl.c:730:50: note: Shadowed declaration
static PyObject *Buffer_new(PyTypeObject *UNUSED(type), PyObject *args, PyObject *kwds)
                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\python\generic\bgl.c:736:7: note: Shadow variable
  int type;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_app_build_options.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 34 configurations. Use --force to check all configurations. [toomanyconfigs]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_app_handlers.c:234:25: style: The scope of the variable 'funcstore' can be reduced. [variableScope]
    bCallbackFuncStore *funcstore;
                        ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_app_handlers.c:271:17: style: The scope of the variable 'item' can be reduced. [variableScope]
      PyObject *item;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_app_handlers.c:272:18: style: The scope of the variable 'dict_ptr' can be reduced. [variableScope]
      PyObject **dict_ptr;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_app_handlers.c:320:15: style: The scope of the variable 'func' can be reduced. [variableScope]
    PyObject *func;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_app_handlers.c:321:15: style: The scope of the variable 'ret' can be reduced. [variableScope]
    PyObject *ret;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_app_translations.c:507:24: style: The scope of the variable 'pos' can be reduced. [variableScope]
  int num_locales = 0, pos = 0;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_library_load.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_library_write.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_operator.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_rna.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_msgbus.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_rna_array.c:662:4: portability: Casting between char * and float * which have an incompatible binary data representation. [invalidPointerCast]
  *(float *)data = value;
   ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_rna_array.c:936:68: style: The scope of the variable 'i' can be reduced. [variableScope]
  int totdim, arraydim, arrayoffset, dimsize[MAX_ARRAY_DIMENSION], i, len;
                                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_rna_array.c:443:13: style: union member 'Anonymous3::fl' is never used. [unusedStructMember]
      float fl;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_rna_array.c:444:11: style: union member 'Anonymous3::i' is never used. [unusedStructMember]
      int i;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_props.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_rna_anim.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_rna_gizmo.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_rna_callback.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_interface.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_rna_id_collection.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:549:13: portability: Casting from float * to signed int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
  int ai = *(int *)(&af);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:550:13: portability: Casting from float * to signed int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
  int bi = *(int *)(&bf);
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:67:13: style: The scope of the variable 'item' can be reduced. [variableScope]
  PyObject *item;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:298:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, size;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:336:46: style: The scope of the variable 'item' can be reduced. [variableScope]
  PyObject *value_fast, **value_fast_items, *item;
                                             ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:375:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, size;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:415:26: style: The scope of the variable 'subseq' can be reduced. [variableScope]
  PyObject *value_fast, *subseq;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:416:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, size, start, subseq_len;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:416:16: style: The scope of the variable 'start' can be reduced. [variableScope]
  int i, size, start, subseq_len;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:416:23: style: The scope of the variable 'subseq_len' can be reduced. [variableScope]
  int i, size, start, subseq_len;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:417:8: style: The scope of the variable 'ip' can be reduced. [variableScope]
  int *ip;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:551:14: warning: Either the condition '4294967295U==test' is redundant or there is signed integer overflow for expression '-(int)(((uint)(ai^bi))>>31)'. [integerOverflowCond]
  int test = SIGNMASK(ai ^ bi);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:554:37: note: Assuming that condition '4294967295U==test' is not redundant
  assert((0 == test) || (0xFFFFFFFF == test));
                                    ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils.c:551:14: note: Integer overflow
  int test = SIGNMASK(ai ^ bi);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Quaternion.c:1042:9: style: The scope of the variable 'quat' can be reduced. [variableScope]
  float quat[QUAT_SIZE];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Quaternion.c:1097:9: style: The scope of the variable 'quat' can be reduced. [variableScope]
  float quat[QUAT_SIZE];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_bvhtree.c:343:15: style: The scope of the variable 'error_prefix' can be reduced. [variableScope]
  const char *error_prefix = "ray_cast";
              ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_bvhtree.c:390:15: style: The scope of the variable 'error_prefix' can be reduced. [variableScope]
  const char *error_prefix = "find_nearest";
              ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_bvhtree.c:473:15: style: The scope of the variable 'error_prefix' can be reduced. [variableScope]
  const char *error_prefix = "find_nearest_range";
              ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_geometry.c:80:45: error: syntax error [syntaxError]
                        UNPACK3_EX(&, py_tri, ),
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\intern\bpy_rna.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Matrix.c:742:16: style: The scope of the variable 'x' can be reduced. [variableScope]
  int matSize, x;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Matrix.c:743:9: style: The scope of the variable 'norm' can be reduced. [variableScope]
  float norm = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_interpolate.c:55:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_noise.c:258:19: style: The scope of the variable 't' can be reduced. [variableScope]
  float amp, out, t;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_noise.c:144:17: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    *p = p[M] ^ TWIST(p[0], p[1]);
                ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_noise.c:148:21: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    *p = p[M - N] ^ TWIST(p[0], p[1]);
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_noise.c:151:19: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  *p = p[M - N] ^ TWIST(p[0], state[0]);
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\external_engine.c:426:3: error: Memory leak: ra [memleak]
  ra = re;
  ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\external_engine.c:426:6: style: Redundant initialization for 'ra'. The initialized value is overwritten before it is read. [redundantInitialization]
  ra = re;
     ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\external_engine.c:425:14: note: ra is initialized
  Render *ra = malloc(3000);
             ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\external_engine.c:426:6: note: ra is overwritten
  ra = re;
     ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\external_engine.c:408:15: style: Variable 'numbers' is assigned a value that is never used. [unreadVariable]
  int numbers = new int[300];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\external_engine.c:426:6: style: Variable 'ra' is assigned a value that is never used. [unreadVariable]
  ra = re;
     ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Vector.c:1399:45: portability: Undefined behaviour, when 'i' is -1 the pointer arithmetic '((const char*)"xyzw")+i' is out of bounds. [pointerOutOfBoundsCond]
                   *(((const char *)"xyzw") + i),
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Vector.c:1395:9: note: Assuming that condition 'i<0' is not redundant
  if (i < 0 || i >= self->size) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Vector.c:1399:45: note: Pointer arithmetic overflow
                   *(((const char *)"xyzw") + i),
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Vector.c:1444:45: portability: Undefined behaviour, when 'i' is -1 the pointer arithmetic '((const char*)"xyzw")+i' is out of bounds. [pointerOutOfBoundsCond]
                   *(((const char *)"xyzw") + i),
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Vector.c:1440:9: note: Assuming that condition 'i<0' is not redundant
  if (i < 0 || i >= self->size) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Vector.c:1444:45: note: Pointer arithmetic overflow
                   *(((const char *)"xyzw") + i),
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\initrender.c:263:11: style: The scope of the variable 'xd' can be reduced. [variableScope]
  int nr, xd, yd, partx, party, xparts, yparts;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\initrender.c:263:15: style: The scope of the variable 'yd' can be reduced. [variableScope]
  int nr, xd, yd, partx, party, xparts, yparts;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\python\mathutils\mathutils_Vector.c:2420:10: style: The scope of the variable 'axis_from' can be reduced. [variableScope]
  size_t axis_from;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pointdensity.c:625:9: style: The scope of the variable 'turb' can be reduced. [variableScope]
  float turb, noise_fac;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pointdensity.c:871:11: style: The scope of the variable 'radius' can be reduced. [variableScope]
    float radius[3] = {pd->radius, pd->radius, pd->radius};
          ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pointdensity.c:636:63: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
                             (pd->flag & TEX_PD_FALLOFF_CURVE ? pd->falloff_curve : NULL),
                                                              ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pointdensity.c:129:12: style: Variable 'offset' is assigned a value that is never used. [unreadVariable]
    offset += 3 * totpoint;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\multires_bake.c:162:24: style: The scope of the variable 'tang1' can be reduced. [variableScope]
  const float *tang0, *tang1, *tang2;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\multires_bake.c:162:32: style: The scope of the variable 'tang2' can be reduced. [variableScope]
  const float *tang0, *tang1, *tang2;
                               ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\multires_bake.c:164:17: style: The scope of the variable 'from_tang' can be reduced. [variableScope]
  float fUV[2], from_tang[3][3], to_tang[3][3];
                ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\multires_bake.c:165:18: style: The scope of the variable 'sign' can be reduced. [variableScope]
  float u, v, w, sign;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\multires_bake.c:166:7: style: The scope of the variable 'r' can be reduced. [variableScope]
  int r;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\multires_bake.c:263:19: style: The scope of the variable 'x' can be reduced. [variableScope]
    int iXl, iXr, x;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\multires_bake.c:625:21: style: The scope of the variable 'face_side' can be reduced. [variableScope]
  int grid_size, S, face_side;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\multires_bake.c:821:35: style: The scope of the variable 'st3' can be reduced. [variableScope]
  float uv[2], *st0, *st1, *st2, *st3;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\multires_bake.c:933:35: style: The scope of the variable 'st3' can be reduced. [variableScope]
  float uv[2], *st0, *st1, *st2, *st3;
                                  ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:108:17: style: The scope of the variable 'val1' can be reduced. [variableScope]
  float fx, fy, val1, val2, val3;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:108:23: style: The scope of the variable 'val2' can be reduced. [variableScope]
  float fx, fy, val1, val2, val3;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:108:29: style: The scope of the variable 'val3' can be reduced. [variableScope]
  float fx, fy, val1, val2, val3;
                            ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:528:9: style: The scope of the variable 'muly' can be reduced. [variableScope]
  float muly, mulx, div, col[4];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:528:15: style: The scope of the variable 'mulx' can be reduced. [variableScope]
  float muly, mulx, div, col[4];
              ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:528:21: style: The scope of the variable 'div' can be reduced. [variableScope]
  float muly, mulx, div, col[4];
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:529:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x, y, startx, endx, starty, endy;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:529:10: style: The scope of the variable 'y' can be reduced. [variableScope]
  int x, y, startx, endx, starty, endy;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:645:9: style: The scope of the variable 'opp' can be reduced. [variableScope]
  float opp, tot, alphaclip = 1.0;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:645:14: style: The scope of the variable 'tot' can be reduced. [variableScope]
  float opp, tot, alphaclip = 1.0;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:955:9: style: The scope of the variable 'alphaclip' can be reduced. [variableScope]
  float alphaclip;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:1018:9: style: The scope of the variable 'maxd' can be reduced. [variableScope]
  float maxd, val1, val2, val3;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:1019:7: style: The scope of the variable 'curmap' can be reduced. [variableScope]
  int curmap, retval, intpol, extflag = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:1478:41: style: The scope of the variable 'dx' can be reduced. [variableScope]
  float fx, fy, minx, maxx, miny, maxy, dx, dy, dxt[2], dyt[2];
                                        ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:1478:45: style: The scope of the variable 'dy' can be reduced. [variableScope]
  float fx, fy, minx, maxx, miny, maxy, dx, dy, dxt[2], dyt[2];
                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:1479:9: style: The scope of the variable 'maxd' can be reduced. [variableScope]
  float maxd, pixsize, val1, val2, val3;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:1479:15: style: The scope of the variable 'pixsize' can be reduced. [variableScope]
  float maxd, pixsize, val1, val2, val3;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\imagetexture.c:1480:7: style: The scope of the variable 'curmap' can be reduced. [variableScope]
  int curmap, retval, imaprepeat, imapextend;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\zbuf.c:189:9: style: The scope of the variable 'u' can be reduced. [variableScope]
  float u, v, uxd, uyd, vxd, vyd, uy0, vy0, xx1;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\zbuf.c:189:12: style: The scope of the variable 'v' can be reduced. [variableScope]
  float u, v, uxd, uyd, vxd, vyd, uy0, vy0, xx1;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\zbuf.c:191:19: style: The scope of the variable 'sn1' can be reduced. [variableScope]
  int i, j, x, y, sn1, sn2, rectx = zspan->rectx, my0, my2;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\zbuf.c:191:24: style: The scope of the variable 'sn2' can be reduced. [variableScope]
  int i, j, x, y, sn1, sn2, rectx = zspan->rectx, my0, my2;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\render_result.c:1078:16: style: The scope of the variable 'rlpush' can be reduced. [variableScope]
  RenderLayer *rlpush;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\render_result.c:1079:16: style: The scope of the variable 'rl' can be reduced. [variableScope]
  RenderLayer *rl;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\render_result.c:1080:7: style: The scope of the variable 'nr' can be reduced. [variableScope]
  int nr;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\render_texture.c:908:7: style: The scope of the variable 'ok' can be reduced. [variableScope]
  int ok, proj, areaflag = 0, wrap;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\render_texture.c:908:11: style: The scope of the variable 'proj' can be reduced. [variableScope]
  int ok, proj, areaflag = 0, wrap;
          ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\render_texture.c:908:17: style: The scope of the variable 'areaflag' can be reduced. [variableScope]
  int ok, proj, areaflag = 0, wrap;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\render_texture.c:1170:9: style: The scope of the variable 'tmpvec' can be reduced. [variableScope]
  float tmpvec[3];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pipeline.c:917:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x, y;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pipeline.c:917:10: style: The scope of the variable 'y' can be reduced. [variableScope]
  int x, y;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pipeline.c:918:9: style: The scope of the variable 'scale_x' can be reduced. [variableScope]
  float scale_x, scale_y;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pipeline.c:918:18: style: The scope of the variable 'scale_y' can be reduced. [variableScope]
  float scale_x, scale_y;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pipeline.c:1500:17: style: The scope of the variable 'out' can be reduced. [variableScope]
  struct ImBuf *out;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pipeline.c:2439:7: style: The scope of the variable 'nfra' can be reduced. [variableScope]
  int nfra, totrendered = 0, totskipped = 0;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\render\intern\source\pipeline.c:1988:16: style: Variable 'scene' is assigned a value that is never used. [unreadVariable]
  Scene *scene = re->scene;
               ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\gizmo\intern\wm_gizmo_group.c:758:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (do_init) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\gizmo\intern\wm_gizmo_group.c:753:7: note: First condition
  if (do_init) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\gizmo\intern\wm_gizmo_group.c:758:7: note: Second condition
  if (do_init) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\gizmo\intern\wm_gizmo_group.c:505:8: style: The scope of the variable 'clear_modal' can be reduced. [variableScope]
  bool clear_modal = true;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\gizmo\intern\wm_gizmo_map.c:858:12: style: The scope of the variable 'cancel' can be reduced. [variableScope]
      bool cancel = true;
           ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files_link.c:948:18: style: The scope of the variable 'prop' can be reduced. [variableScope]
    PropertyRNA *prop;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files_link.c:951:64: style: The scope of the variable 'relname' can be reduced. [variableScope]
    char path[FILE_MAX], root[FILE_MAXDIR], libname[FILE_MAX], relname[FILE_MAX];
                                                               ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_event_query.c:93:9: error: printf format string requires 8 parameters but only 4 are given. [wrongPrintfScanfArgNum]
        printf("   ndof: rot: (%.4f %.4f %.4f), tx: (%.4f %.4f %.4f), dt: %.4f, progress: %u\n",
        ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:553:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (use_data) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:544:7: note: First condition
  if (use_data) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:553:7: note: Second condition
  if (use_data) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:588:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if (use_data) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:575:7: note: First condition
  if (use_data) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:588:7: note: Second condition
  if (use_data) {
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:2329:7: style: Redundant initialization for 'col'. The initialized value is overwritten before it is read. [redundantInitialization]
  col = uiLayoutColumn(layout, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:2324:17: note: col is initialized
  uiLayout *col = op->layout;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:2329:7: note: col is overwritten
  col = uiLayoutColumn(layout, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_gesture.c:327:9: style: The scope of the variable 'red' can be reduced. [variableScope]
  float red[4] = {1.0f, 0.0f, 0.0f, 0.0f};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:2914:7: style: Variable 'col' is reassigned a value before the old one has been used. [redundantAssignment]
  col = uiLayoutColumn(split, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:2872:7: note: col is assigned
  col = uiLayoutColumn(split, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:2914:7: note: col is overwritten
  col = uiLayoutColumn(split, false);
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:3084:10: style: Redundant initialization for 'layout'. The initialized value is overwritten before it is read. [redundantInitialization]
  layout = uiLayoutColumn(split_block, false);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:3080:20: note: layout is initialized
  uiLayout *layout = uiLayoutColumn(split_block, false);
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:3084:10: note: layout is overwritten
  layout = uiLayoutColumn(split_block, false);
         ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:394:8: style: The scope of the variable 'header' can be reduced. [variableScope]
  char header[7];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:1084:15: style: The scope of the variable 'line' can be reduced. [variableScope]
  const char *line;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:2562:8: style: The scope of the variable 'name' can be reduced. [variableScope]
  char name[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:970:13: style: Variable 'success' is assigned a value that is never used. [unreadVariable]
    success = BKE_blendfile_read_from_memory(C,
            ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_event_system.c:2748:19: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
                  event->customdata = &single_lb;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_event_system.c:1393:7: style: The scope of the variable 'retval' can be reduced. [variableScope]
  int retval;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_event_system.c:4061:14: style: The scope of the variable 'emulating_event' can be reduced. [variableScope]
  static int emulating_event = EVENT_NONE;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_event_system.c:1179:19: style: Variable 'otmacro' is assigned a value that is never used. [unreadVariable]
          otmacro = otmacro->next;
                  ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_menu_type.c:44:13: style: The scope of the variable 'mt' can be reduced. [variableScope]
  MenuType *mt;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_files.c:1463:15: style: The scope of the variable 'savedir' can be reduced. [variableScope]
  const char *savedir;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:622:14: style: Condition 'to_kmi' is always true [knownConditionTrueFalse]
    else if (to_kmi && !wm_keymap_item_equals(kmi, to_kmi)) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:616:9: note: Assuming that condition '!to_kmi' is not redundant
    if (!to_kmi) {
        ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:622:14: note: Condition 'to_kmi' is always true
    else if (to_kmi && !wm_keymap_item_equals(kmi, to_kmi)) {
             ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:402:23: style: The scope of the variable 'kmin' can be reduced. [variableScope]
  wmKeyMapItem *kmi, *kmin;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:403:28: style: The scope of the variable 'kmdin' can be reduced. [variableScope]
  wmKeyMapDiffItem *kmdi, *kmdin;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:572:23: style: The scope of the variable 'kmin' can be reduced. [variableScope]
  wmKeyMapItem *kmi, *kmin;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:610:23: style: The scope of the variable 'to_kmi' can be reduced. [variableScope]
  wmKeyMapItem *kmi, *to_kmi, *orig_kmi;
                      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:1264:8: style: The scope of the variable 'add_sep' can be reduced. [variableScope]
  bool add_sep = false;
       ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:1338:10: style: The scope of the variable 'kmi_match' can be reduced. [variableScope]
    bool kmi_match = false;
         ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:1570:21: style: The scope of the variable 'kmi' can be reduced. [variableScope]
      wmKeyMapItem *kmi;
                    ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:1819:42: style: The scope of the variable 'usermap' can be reduced. [variableScope]
  wmKeyMap *km, *defaultmap, *addonmap, *usermap, *kmn;
                                         ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_keymap.c:1819:52: style: The scope of the variable 'kmn' can be reduced. [variableScope]
  wmKeyMap *km, *defaultmap, *addonmap, *usermap, *kmn;
                                                   ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_panel_type.c:44:14: style: The scope of the variable 'pt' can be reduced. [variableScope]
  PanelType *pt;
             ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_playanim.c:391:8: style: The scope of the variable 'filepath' can be reduced. [variableScope]
  char filepath[FILE_MAX];
       ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_splash_screen.c:201:10: style: The scope of the variable 'splash_filepath' can be reduced. [variableScope]
    char splash_filepath[FILE_MAX];
         ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_operators.c:239:7: style: The scope of the variable 'max_prop_length' can be reduced. [variableScope]
  int max_prop_length = 10;
      ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_operators.c:2181:9: style: The scope of the variable 'zoom' can be reduced. [variableScope]
  float zoom[2] = {1, 1};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_operators.c:2248:9: style: The scope of the variable 'rot' can be reduced. [variableScope]
  float rot;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_operators.c:2355:9: style: The scope of the variable 'zoom' can be reduced. [variableScope]
  float zoom[2], col[4] = {1.0f, 1.0f, 1.0f, 1.0f};
        ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_operators.c:2818:20: style: The scope of the variable 'dist' can be reduced. [variableScope]
  float new_value, dist = 0.0f, zoom[2];
                   ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_operators.c:2818:33: style: The scope of the variable 'zoom' can be reduced. [variableScope]
  float new_value, dist = 0.0f, zoom[2];
                                ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_operators.c:2819:9: style: The scope of the variable 'delta' can be reduced. [variableScope]
  float delta[2];
        ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_operators.c:2822:9: style: The scope of the variable 'angle_precision' can be reduced. [variableScope]
  float angle_precision = 0.0f;
        ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_operators.c:843:17: style: Variable 'ret_value' is assigned a value that is never used. [unreadVariable]
  int ret_value = 0;
                ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_operators.c:2832:13: style: Variable 'handled' is assigned a value that is never used. [unreadVariable]
    handled = true;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_uilist_type.c:41:15: style: The scope of the variable 'ult' can be reduced. [variableScope]
  uiListType *ult;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_toolsystem.c:470:26: warning: Possible null pointer dereference: sa [nullPointer]
      SpaceImage *sima = sa->spacedata.first;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_toolsystem.c:746:61: note: Calling function 'WM_toolsystem_mode_from_spacetype', 2nd argument 'NULL' value is 0
      .mode = WM_toolsystem_mode_from_spacetype(view_layer, NULL, space_type),
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_toolsystem.c:470:26: note: Null pointer dereference
      SpaceImage *sima = sa->spacedata.first;
                         ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_toolsystem.c:479:24: warning: Possible null pointer dereference: sa [nullPointer]
      SpaceSeq *sseq = sa->spacedata.first;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_toolsystem.c:746:61: note: Calling function 'WM_toolsystem_mode_from_spacetype', 2nd argument 'NULL' value is 0
      .mode = WM_toolsystem_mode_from_spacetype(view_layer, NULL, space_type),
                                                            ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_toolsystem.c:479:24: note: Null pointer dereference
      SpaceSeq *sseq = sa->spacedata.first;
                       ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\message_bus\intern\wm_message_bus_rna.c:286:28: style: Variable 'msg_key_test.msg.head.id' is assigned a value that is never used. [unreadVariable]
  msg_key_test.msg.head.id = id_repr;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\message_bus\intern\wm_message_bus_rna.c:287:30: style: Variable 'msg_key_test.msg.head.type' is assigned a value that is never used. [unreadVariable]
  msg_key_test.msg.head.type = WM_MSG_TYPE_RNA;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\message_bus\intern\wm_message_bus_rna.c:289:27: style: Variable 'msg_key_test.msg.params' is assigned a value that is never used. [unreadVariable]
  msg_key_test.msg.params = *msg_key_params;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\message_bus\intern\wm_message_bus_static.c:120:28: style: Variable 'msg_key_test.msg.head.id' is assigned a value that is never used. [unreadVariable]
  msg_key_test.msg.head.id = id_repr;
                           ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\message_bus\intern\wm_message_bus_static.c:121:30: style: Variable 'msg_key_test.msg.head.type' is assigned a value that is never used. [unreadVariable]
  msg_key_test.msg.head.type = WM_MSG_TYPE_STATIC;
                             ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\message_bus\intern\wm_message_bus_static.c:123:27: style: Variable 'msg_key_test.msg.params' is assigned a value that is never used. [unreadVariable]
  msg_key_test.msg.params = *msg_key_params;
                          ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_window.c:1501:18: style: The scope of the variable 'icon' can be reduced. [variableScope]
          int a, icon;
                 ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_window.c:1583:13: style: The scope of the variable 'win' can be reduced. [variableScope]
  wmWindow *win;
            ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_window.c:1765:15: style: Local variable 'win' shadows outer argument [shadowArgument]
    wmWindow *win;
              ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_window.c:1754:66: note: Shadowed declaration
void WM_event_remove_timer(wmWindowManager *wm, wmWindow *UNUSED(win), wmTimer *timer)
                                                                 ^
C:\Users\LiTho\source\repos\blender\source\blender\windowmanager\intern\wm_window.c:1765:15: note: Shadow variable
    wmWindow *win;
              ^
